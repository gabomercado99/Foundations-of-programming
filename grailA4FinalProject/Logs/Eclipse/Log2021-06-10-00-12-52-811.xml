<Events startTimestamp="1623298372811" logVersion="1.0.0.202106071651">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="1459" date="Thu Jun 10 00:13:01 EDT 2021" docOffset="1925" starttimestamp="1623298372811" timestamp="8209" />
  <Command __id="3" _type="PauseCommand" date="Thu Jun 10 00:13:03 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="10710">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2497]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4" _type="MoveCaretCommand" caretOffset="1224" date="Thu Jun 10 00:13:03 EDT 2021" docOffset="1545" starttimestamp="1623298372811" timestamp="10898" />
  <Command __id="6" _type="PauseCommand" date="Thu Jun 10 00:13:17 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="24534">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13636]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="7" _type="MoveCaretCommand" caretOffset="1459" date="Thu Jun 10 00:13:17 EDT 2021" docOffset="1925" starttimestamp="1623298372811" timestamp="24673" />
  <Command __id="9" _type="PauseCommand" date="Thu Jun 10 00:13:26 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="33373">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8700]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="8" _type="SelectTextCommand" caretOffset="1280" date="Thu Jun 10 00:13:26 EDT 2021" end="1280" start="1194" starttimestamp="1623298372811" timestamp="33373" />
  <Command __id="11" _type="PauseCommand" date="Thu Jun 10 00:13:27 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="35017">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1643]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="10" _type="CopyCommand" date="Thu Jun 10 00:13:27 EDT 2021" starttimestamp="1623298372811" timestamp="35016" />
  <Command __id="13" _type="PauseCommand" date="Thu Jun 10 00:13:48 EDT 2021" range="20s-30s" starttimestamp="1623298372811" timestamp="55206">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[20190]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="12" _type="MoveCaretCommand" caretOffset="1337" date="Thu Jun 10 00:13:48 EDT 2021" docOffset="1803" starttimestamp="1623298372811" timestamp="55206" />
  <Command __id="15" _type="PauseCommand" date="Thu Jun 10 00:13:49 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="56242">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="16" _type="InsertStringCommand" date="Thu Jun 10 00:13:49 EDT 2021" starttimestamp="1623298372811" timestamp="56246" timestamp2="56246">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="18" _type="InsertStringCommand" date="Thu Jun 10 00:13:49 EDT 2021" starttimestamp="1623298372811" timestamp="56414" timestamp2="56414">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="20" _type="PauseCommand" date="Thu Jun 10 00:14:02 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="69256">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[12842]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="19" _type="MoveCaretCommand" caretOffset="1405" date="Thu Jun 10 00:14:02 EDT 2021" docOffset="1871" starttimestamp="1623298372811" timestamp="69256" />
  <Command __id="22" _type="PasteCommand" date="Thu Jun 10 00:14:03 EDT 2021" starttimestamp="1623298372811" timestamp="70255" />
  <Command __id="24" _type="PauseCommand" date="Thu Jun 10 00:14:07 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="74927">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4672]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="23" _type="SelectTextCommand" caretOffset="1428" date="Thu Jun 10 00:14:07 EDT 2021" end="1490" start="1428" starttimestamp="1623298372811" timestamp="74927" />
  <Command __id="26" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:14:08 EDT 2021" starttimestamp="1623298372811" timestamp="75408" />
  <Command __id="28" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:14:09 EDT 2021" starttimestamp="1623298372811" timestamp="76245" />
  <Command __id="30" _type="PauseCommand" date="Thu Jun 10 00:14:10 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="77378">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1133]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="29" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Jun 10 00:14:10 EDT 2021" starttimestamp="1623298372811" timestamp="77378" />
  <Command __id="32" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:14:10 EDT 2021" starttimestamp="1623298372811" timestamp="77572" />
  <Command __id="34" _type="PauseCommand" date="Thu Jun 10 00:14:12 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="80127">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2555]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="33" _type="MoveCaretCommand" caretOffset="1482" date="Thu Jun 10 00:14:12 EDT 2021" docOffset="1948" starttimestamp="1623298372811" timestamp="80127" />
  <Command __id="36" _type="PauseCommand" date="Thu Jun 10 00:14:14 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="81234">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1107]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="37" _type="InsertStringCommand" date="Thu Jun 10 00:14:14 EDT 2021" starttimestamp="1623298372811" timestamp="81241" timestamp2="81241">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="39" _type="PauseCommand" date="Thu Jun 10 00:14:23 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="90541">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[9300]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="38" _type="SelectTextCommand" caretOffset="1405" date="Thu Jun 10 00:14:23 EDT 2021" end="1427" start="1405" starttimestamp="1623298372811" timestamp="90541" />
  <Command __id="41" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:14:23 EDT 2021" starttimestamp="1623298372811" timestamp="91002" />
  <Command __id="43" _type="PauseCommand" date="Thu Jun 10 00:14:26 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="93751">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2748]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="42" _type="MoveCaretCommand" caretOffset="1461" date="Thu Jun 10 00:14:26 EDT 2021" docOffset="1927" starttimestamp="1623298372811" timestamp="93750" />
  <Command __id="45" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:14:27 EDT 2021" starttimestamp="1623298372811" timestamp="94579" />
  <Command __id="47" _type="PauseCommand" date="Thu Jun 10 00:14:39 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="106226">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11647]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="48" _type="MoveCaretCommand" caretOffset="1224" date="Thu Jun 10 00:14:39 EDT 2021" docOffset="1545" starttimestamp="1623298372811" timestamp="106347" />
  <Command __id="50" _type="PauseCommand" date="Thu Jun 10 00:14:45 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="112988">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6641]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="51" _type="MoveCaretCommand" caretOffset="0" date="Thu Jun 10 00:14:45 EDT 2021" docOffset="0" starttimestamp="1623298372811" timestamp="113155" />
  <Command __id="53" _type="MoveCaretCommand" caretOffset="2332" date="Thu Jun 10 00:14:46 EDT 2021" docOffset="3029" starttimestamp="1623298372811" timestamp="114054" />
  <Command __id="55" _type="PauseCommand" date="Thu Jun 10 00:14:50 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="117854">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3800]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="56" _type="MoveCaretCommand" caretOffset="1188" date="Thu Jun 10 00:14:50 EDT 2021" docOffset="1508" starttimestamp="1623298372811" timestamp="118040" />
  <Command __id="58" _type="PauseCommand" date="Thu Jun 10 00:15:42 EDT 2021" range="30s-1m" starttimestamp="1623298372811" timestamp="169210">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[51170]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="57" _type="MoveCaretCommand" caretOffset="838" date="Thu Jun 10 00:15:42 EDT 2021" docOffset="1158" starttimestamp="1623298372811" timestamp="169210" />
  <Command __id="60" _type="PauseCommand" date="Thu Jun 10 00:15:43 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="170991">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1781]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="59" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:15:43 EDT 2021" starttimestamp="1623298372811" timestamp="170991" />
  <Command __id="61" _type="BreakPointCommand" date="Thu Jun 10 00:15:43 EDT 2021" lineNumber="49" starttimestamp="1623298372811" timestamp="171003" type="BreakPointAdded" />
  <Command __id="63" _type="PauseCommand" date="Thu Jun 10 00:15:47 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="174682">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BreakPointCommand]]></prev>
    <pause><![CDATA[3679]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="64" _type="MoveCaretCommand" caretOffset="1460" date="Thu Jun 10 00:15:47 EDT 2021" docOffset="1926" starttimestamp="1623298372811" timestamp="174804" />
  <Command __id="66" _type="PauseCommand" date="Thu Jun 10 00:15:51 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="178977">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4173]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="65" _type="ShellCommand" date="Thu Jun 10 00:15:51 EDT 2021" starttimestamp="1623298372811" timestamp="178977" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="72" _type="PauseCommand" date="Thu Jun 10 00:15:55 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="182847">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1142]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="71" _type="RunCommand" date="Thu Jun 10 00:15:55 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="182847" type="Run" />
  <Command __id="73" _type="RunCommand" date="Thu Jun 10 00:15:55 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="182847" type="Run" />
  <Command __id="74" _type="RunCommand" date="Thu Jun 10 00:15:55 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="183104" type="Run" />
  <Command __id="75" _type="RunCommand" date="Thu Jun 10 00:15:55 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="183140" type="Run" />
  <Command __id="76" _type="RunCommand" date="Thu Jun 10 00:15:56 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="183273" type="Run" />
  <Command __id="77" _type="ShellCommand" date="Thu Jun 10 00:15:56 EDT 2021" starttimestamp="1623298372811" timestamp="183474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="78" _type="RunCommand" date="Thu Jun 10 00:15:56 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="183792" type="Run" />
  <Command __id="79" _type="ShellCommand" date="Thu Jun 10 00:15:57 EDT 2021" starttimestamp="1623298372811" timestamp="184416" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="80" _type="RunCommand" date="Thu Jun 10 00:15:58 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="185382" type="Run" />
  <Command __id="81" _type="RunCommand" date="Thu Jun 10 00:15:58 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="185682" type="Run" />
  <Command __id="83" _type="MoveCaretCommand" caretOffset="4396" date="Thu Jun 10 00:15:58 EDT 2021" docOffset="5093" starttimestamp="1623298372811" timestamp="185898" />
  <Command __id="85" _type="PauseCommand" date="Thu Jun 10 00:16:09 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="196213">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10315]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="84" _type="BreakPointCommand" date="Thu Jun 10 00:16:09 EDT 2021" lineNumber="117" starttimestamp="1623298372811" timestamp="196213" type="BreakPointRemoved" />
  <Command __id="86" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:16:09 EDT 2021" starttimestamp="1623298372811" timestamp="196270" />
  <Command __id="87" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Thu Jun 10 00:16:09 EDT 2021" starttimestamp="1623298372811" timestamp="196490" />
  <Command __id="89" _type="PauseCommand" date="Thu Jun 10 00:16:20 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="207955">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11465]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="88" _type="MoveCaretCommand" caretOffset="4397" date="Thu Jun 10 00:16:20 EDT 2021" docOffset="5094" starttimestamp="1623298372811" timestamp="207955" />
  <Command __id="91" _type="PauseCommand" date="Thu Jun 10 00:16:22 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="209771">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1816]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="90" _type="MoveCaretCommand" caretOffset="4500" date="Thu Jun 10 00:16:22 EDT 2021" docOffset="5197" starttimestamp="1623298372811" timestamp="209771" />
  <Command __id="92" _type="MoveCaretCommand" caretOffset="4563" date="Thu Jun 10 00:16:23 EDT 2021" docOffset="5260" starttimestamp="1623298372811" timestamp="210205" />
  <Command __id="94" _type="PauseCommand" date="Thu Jun 10 00:16:25 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="212370">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2165]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="93" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:16:25 EDT 2021" starttimestamp="1623298372811" timestamp="212370" />
  <Command __id="95" _type="BreakPointCommand" date="Thu Jun 10 00:16:25 EDT 2021" lineNumber="117" starttimestamp="1623298372811" timestamp="212371" type="BreakPointAdded" />
  <Command __id="97" _type="PauseCommand" date="Thu Jun 10 00:16:26 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="213371">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BreakPointCommand]]></prev>
    <pause><![CDATA[1000]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="96" _type="BreakPointCommand" date="Thu Jun 10 00:16:26 EDT 2021" lineNumber="117" starttimestamp="1623298372811" timestamp="213371" type="BreakPointRemoved" />
  <Command __id="98" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:16:26 EDT 2021" starttimestamp="1623298372811" timestamp="213398" />
  <Command __id="103" _type="PauseCommand" date="Thu Jun 10 00:16:32 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="219423">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2476]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="102" _type="RunCommand" date="Thu Jun 10 00:16:32 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="219423" type="Run" />
  <Command __id="104" _type="RunCommand" date="Thu Jun 10 00:16:32 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="219660" type="Run" />
  <Command __id="105" _type="RunCommand" date="Thu Jun 10 00:16:32 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="219805" type="Run" />
  <Command __id="106" _type="ShellCommand" date="Thu Jun 10 00:16:32 EDT 2021" starttimestamp="1623298372811" timestamp="219976" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="107" _type="RunCommand" date="Thu Jun 10 00:16:33 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="220299" type="Run" />
  <Command __id="109" _type="PauseCommand" date="Thu Jun 10 00:16:39 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="226473">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6174]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="108" _type="ShellCommand" date="Thu Jun 10 00:16:39 EDT 2021" starttimestamp="1623298372811" timestamp="226473" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="110" _type="ConsoleOutput" date="Thu Jun 10 00:16:39 EDT 2021" overflow="false" starttimestamp="1623298372811" timestamp="226667" type="ConsoleOutput">
    <outputString><![CDATA[Mouse clicked:
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="112" _type="PauseCommand" date="Thu Jun 10 00:16:40 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="227753">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1086]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="113" _type="MoveCaretCommand" caretOffset="4396" date="Thu Jun 10 00:16:40 EDT 2021" docOffset="5093" starttimestamp="1623298372811" timestamp="228018" />
  <Command __id="115" _type="PauseCommand" date="Thu Jun 10 00:17:04 EDT 2021" range="20s-30s" starttimestamp="1623298372811" timestamp="251451">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23433]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="114" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:17:04 EDT 2021" starttimestamp="1623298372811" timestamp="251451" />
  <Command __id="116" _type="RunCommand" date="Thu Jun 10 00:17:04 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="251456" type="Run" />
  <Command __id="118" _type="PauseCommand" date="Thu Jun 10 00:17:05 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="252809">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1352]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="117" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:17:05 EDT 2021" starttimestamp="1623298372811" timestamp="252808" />
  <Command __id="119" _type="RunCommand" date="Thu Jun 10 00:17:05 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="252813" type="Run" />
  <Command __id="121" _type="PauseCommand" date="Thu Jun 10 00:17:09 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="256817">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[4004]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="120" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:17:09 EDT 2021" starttimestamp="1623298372811" timestamp="256817" />
  <Command __id="122" _type="RunCommand" date="Thu Jun 10 00:17:09 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="256822" type="Run" />
  <Command __id="124" _type="PauseCommand" date="Thu Jun 10 00:17:10 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="258167">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1345]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="123" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:17:10 EDT 2021" starttimestamp="1623298372811" timestamp="258167" />
  <Command __id="125" _type="RunCommand" date="Thu Jun 10 00:17:10 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="258171" type="Run" />
  <Command __id="235" _type="PauseCommand" date="Thu Jun 10 00:17:51 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="299045">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2453]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="234" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:17:51 EDT 2021" starttimestamp="1623298372811" timestamp="299045" />
  <Command __id="236" _type="RunCommand" date="Thu Jun 10 00:17:51 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="299050" type="Run" />
  <Command __id="237" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:17:52 EDT 2021" starttimestamp="1623298372811" timestamp="300013" />
  <Command __id="238" _type="RunCommand" date="Thu Jun 10 00:17:52 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="300017" type="Run" />
  <Command __id="240" _type="PauseCommand" date="Thu Jun 10 00:17:55 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="302645">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2628]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="241" _type="MoveCaretCommand" caretOffset="3900" date="Thu Jun 10 00:17:55 EDT 2021" docOffset="4597" starttimestamp="1623298372811" timestamp="302785" />
  <Command __id="243" _type="PauseCommand" date="Thu Jun 10 00:17:58 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="305371">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2586]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="244" _type="MoveCaretCommand" caretOffset="3900" date="Thu Jun 10 00:17:58 EDT 2021" docOffset="4597" starttimestamp="1623298372811" timestamp="305591" />
  <Command __id="246" _type="PauseCommand" date="Thu Jun 10 00:18:04 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="311492">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5901]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="245" _type="ShellCommand" date="Thu Jun 10 00:18:04 EDT 2021" starttimestamp="1623298372811" timestamp="311492" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="248" _type="PauseCommand" date="Thu Jun 10 00:18:05 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="312989">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1497]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="247" _type="ShellCommand" date="Thu Jun 10 00:18:05 EDT 2021" starttimestamp="1623298372811" timestamp="312989" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="249" _type="RunCommand" date="Thu Jun 10 00:18:05 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="313008" type="Debug" />
  <Command __id="250" _type="RunCommand" date="Thu Jun 10 00:18:05 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="313008" type="Run" />
  <Command __id="251" _type="RunCommand" date="Thu Jun 10 00:18:05 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="313008" type="Debug" />
  <Command __id="252" _type="RunCommand" date="Thu Jun 10 00:18:05 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="313009" type="Run" />
  <Command __id="254" _type="PauseCommand" date="Thu Jun 10 00:18:07 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="314496">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1487]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="253" _type="ShellCommand" date="Thu Jun 10 00:18:07 EDT 2021" starttimestamp="1623298372811" timestamp="314496" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="256" _type="PauseCommand" date="Thu Jun 10 00:18:08 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="315768">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1272]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="255" _type="ShellCommand" date="Thu Jun 10 00:18:08 EDT 2021" starttimestamp="1623298372811" timestamp="315768" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="257" _type="RunCommand" date="Thu Jun 10 00:18:08 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="315781" type="Debug" />
  <Command __id="258" _type="RunCommand" date="Thu Jun 10 00:18:08 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="315781" type="Run" />
  <Command __id="259" _type="RunCommand" date="Thu Jun 10 00:18:08 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="315781" type="Debug" />
  <Command __id="260" _type="RunCommand" date="Thu Jun 10 00:18:08 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="315782" type="Run" />
  <Command __id="262" _type="PauseCommand" date="Thu Jun 10 00:18:15 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="322563">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6781]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="263" _type="MoveCaretCommand" caretOffset="838" date="Thu Jun 10 00:18:15 EDT 2021" docOffset="1158" starttimestamp="1623298372811" timestamp="322701" />
  <Command __id="265" _type="PauseCommand" date="Thu Jun 10 00:18:18 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="325974">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3273]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="264" _type="BreakPointCommand" date="Thu Jun 10 00:18:18 EDT 2021" lineNumber="49" starttimestamp="1623298372811" timestamp="325974" type="BreakPointRemoved" />
  <Command __id="266" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:18:18 EDT 2021" starttimestamp="1623298372811" timestamp="325994" />
  <Command __id="268" _type="PauseCommand" date="Thu Jun 10 00:18:19 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="327143">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1149]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="267" _type="MoveCaretCommand" caretOffset="797" date="Thu Jun 10 00:18:19 EDT 2021" docOffset="1117" starttimestamp="1623298372811" timestamp="327143" />
  <Command __id="270" _type="PauseCommand" date="Thu Jun 10 00:18:21 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="329158">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2015]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="269" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:18:21 EDT 2021" starttimestamp="1623298372811" timestamp="329158" />
  <Command __id="271" _type="BreakPointCommand" date="Thu Jun 10 00:18:21 EDT 2021" lineNumber="48" starttimestamp="1623298372811" timestamp="329159" type="BreakPointAdded" />
  <Command __id="276" _type="PauseCommand" date="Thu Jun 10 00:18:56 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="363490">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2466]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="275" _type="RunCommand" date="Thu Jun 10 00:18:56 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="363490" type="Run" />
  <Command __id="277" _type="RunCommand" date="Thu Jun 10 00:18:56 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="363490" type="Run" />
  <Command __id="278" _type="RunCommand" date="Thu Jun 10 00:18:56 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="363705" type="Run" />
  <Command __id="279" _type="RunCommand" date="Thu Jun 10 00:18:56 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="363728" type="Run" />
  <Command __id="280" _type="RunCommand" date="Thu Jun 10 00:18:56 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="363860" type="Run" />
  <Command __id="281" _type="ShellCommand" date="Thu Jun 10 00:18:56 EDT 2021" starttimestamp="1623298372811" timestamp="364030" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="282" _type="RunCommand" date="Thu Jun 10 00:18:57 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="364358" type="Run" />
  <Command __id="284" _type="PauseCommand" date="Thu Jun 10 00:19:03 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="371043">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6685]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="283" _type="ShellCommand" date="Thu Jun 10 00:19:03 EDT 2021" starttimestamp="1623298372811" timestamp="371043" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="285" _type="RunCommand" date="Thu Jun 10 00:19:04 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="371855" type="Run" />
  <Command __id="287" _type="MoveCaretCommand" caretOffset="795" date="Thu Jun 10 00:19:04 EDT 2021" docOffset="1115" starttimestamp="1623298372811" timestamp="372015" />
  <Command __id="289" _type="PauseCommand" date="Thu Jun 10 00:19:16 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="383971">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11956]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="288" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:19:16 EDT 2021" starttimestamp="1623298372811" timestamp="383971" />
  <Command __id="290" _type="RunCommand" date="Thu Jun 10 00:19:16 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="383978" type="Run" />
  <Command __id="291" _type="ConsoleOutput" date="Thu Jun 10 00:19:16 EDT 2021" overflow="false" starttimestamp="1623298372811" timestamp="384068" type="ConsoleOutput">
    <outputString><![CDATA[Mouse clicked:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Mouse clicked:¶")]]]></diff>
  </Command>
  <Command __id="293" _type="PauseCommand" date="Thu Jun 10 00:19:26 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="393807">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9739]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="292" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:19:26 EDT 2021" starttimestamp="1623298372811" timestamp="393807" />
  <Command __id="294" _type="RunCommand" date="Thu Jun 10 00:19:26 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="393810" type="Run" />
  <Command __id="296" _type="PauseCommand" date="Thu Jun 10 00:19:48 EDT 2021" range="20s-30s" starttimestamp="1623298372811" timestamp="415721">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[21911]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="295" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:19:48 EDT 2021" starttimestamp="1623298372811" timestamp="415721" />
  <Command __id="297" _type="RunCommand" date="Thu Jun 10 00:19:48 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="415724" type="Run" />
  <Command __id="299" _type="PauseCommand" date="Thu Jun 10 00:20:10 EDT 2021" range="20s-30s" starttimestamp="1623298372811" timestamp="437481">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[21757]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="298" _type="ShellCommand" date="Thu Jun 10 00:20:10 EDT 2021" starttimestamp="1623298372811" timestamp="437481" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="303" _type="PauseCommand" date="Thu Jun 10 00:20:20 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="447507">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4387]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="302" _type="RunCommand" date="Thu Jun 10 00:20:20 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="447507" type="Run" />
  <Command __id="348" _type="PauseCommand" date="Thu Jun 10 00:21:06 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="493655">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1760]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="347" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:21:06 EDT 2021" starttimestamp="1623298372811" timestamp="493655" />
  <Command __id="349" _type="RunCommand" date="Thu Jun 10 00:21:06 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="493660" type="Run" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:13:00 EDT 2021" docASTNodeCount="380" docActiveCodeLength="2607" docExpressionCount="280" docLength="3975" projectName="grailA3" starttimestamp="1623298372811" timestamp="7703">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.Component;

import javax.swing.JFrame;

import bus.uigen.OEFrame;

import bus.uigen.ObjectEditor;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.compositeFigs.FiveChars;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.MovingL;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.misc.ThreadSupport;

//@Tags(Comp301Tags.ROTATING_LINE)
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
//@Tags(Comp301Tags.BRIDGE_SCENE)

		
public class Assignment3 {
	
	static final double
			RADIUS = 400,
			ANGLE = Math.PI/4,
			SCALE_BY = 2.5;
	static final int
			SLEEP_TIME = 3000,
			MARCH_T = 1000,
			X = 0,
			Y = 0,
			X_2 = 50,
			Y_2 = 100,
			ROTATE_BY = 8,
			ARM_ROT = 3,
			MOVE_BY = 20,
			TALK_LENGTH = 6,
			ROB_Y = 60;
	static final String
			KNIGHTS = "We Beat the Guard!!",
			GUARD = "Damn it!!";
			

	public static void main(String[] args) {
		//animateLine();
		demonstrateBridgeScene();
	}
	public static void animateLine() {
		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);
		OEFrame aFrame = ObjectEditor.edit (line1);
		line1.rotate(ROTATE_BY);
		aFrame.refresh();
		line1.setX(X_2);
		line1.setY(Y_2);
		aFrame.refresh();
	}
	public static void demonstrateBridgeScene() {
		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();
    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);
    	//anOEFrame.showTreePanel();
    	//ThreadSupport.sleep(SLEEP_TIME);
		JFrame frame = new JFrame("Monty Scene");
		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());
		frame.setSize(2000, 800);
		frame.setVisible(true);
		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();
		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();
    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);
    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);
    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);
    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);
    	//anOEFrame.refresh();
    	ThreadSupport.sleep(SLEEP_TIME);
    	montyChars.approach("Robin");
    	//anOEFrame.refresh();
    	//montyChars.approach(montyChars.getArthur());
    	//anOEFrame.refresh();
    	//montyChars.scroll(X_2, Y_2);
    	//int i = 0;
    	//while(i < TALK_LENGTH) {
    	//	ThreadSupport.sleep(MARCH_T);
    	//	montyChars.say("What is the velocity of a gazeel?");
    		//anOEFrame.refresh();
    	//	i++;
    	//}
    	//montyChars.passed();
    	//montyChars.failed();
    	//montyChars.getRobin().getStringShape().setText("Damn");
    	//anOEFrame.refresh();
    	
    	//int i = X;
    	//while (i < MOVE_BY) {
    	//ThreadSupport.sleep(MARCH_T);
    	//montyChars.getArthur().move(MOVE_BY, Y);
    	//montyChars.getGalahad().move(MOVE_BY, Y);
    	//montyChars.getLancelot().move(MOVE_BY, Y);
    	//montyChars.getRobin().move(MOVE_BY, Y);
    	//anOEFrame.refresh();
    	//i++;
    	//}
    	//montyChars.getLancelot().move(X, MOVE_BY);
    	//montyChars.getGalahad().move(X, MOVE_BY);
    	//montyChars.getRobin().move(X, ROB_Y);
    	//montyChars.getRobin().scale(SCALE_BY);
    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);
    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);
    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);
    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);
    	//montyChars.getGuard().getStringShape().setText(GUARD);
    	//anOEFrame.refresh();
    	
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="2" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:13:03 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1701" docExpressionCount="145" docLength="1701" projectName="grailA3" starttimestamp="1623298372811" timestamp="10706">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.awt.Component;


import javax.swing.JFrame;

import grail.MVC.BridgePaintView;
import grail.MVC.BridgeSceneController;
import grail.MVC.ConsoleSceneView;
import grail.MVC.CustomView;
import grail.MVC.SceneView;
import grail.extras.MapStringToObject;
import grail.extras.Tables;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.FACTORY_CLASS)
public class BridgeSceneFactory { 
	static FiveAvatars scene;
	static SceneView sceneView;
	static Tables<Avatars> avatarAndObject;
	static CustomView sceneView2;
	static BridgeSceneController bridgeController;
	
	public static FiveAvatars bridgeSceneFactoryMethod(){
	   if (scene == null) {
			 scene = new FiveChars();
	   } 
	   return scene;		
	}
	
	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {
		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);
	}
	
	public static SceneView consoleSceneViewFactoryMethod() {
		if (sceneView == null) {
			sceneView = new ConsoleSceneView();
		}
		return sceneView;
	}
	
	public static Tables<Avatars> aCollecctionAvatars(){
		if (avatarAndObject == null) {
			avatarAndObject = new MapStringToObject<Avatars>();
		}
		return avatarAndObject;
	}
	
	public static CustomView inheritingBridgeScenePainterFactoryMethod() {
		if (sceneView2 == null) {
			sceneView2 = new BridgePaintView();
		}
		return sceneView2;
	}
	public static BridgeSceneController bridgeSceneControllerFactoryMethod(){
		if (bridgeController == null) {
			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());
		}
		return bridgeController;
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="5" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:13:17 EDT 2021" docASTNodeCount="380" docActiveCodeLength="2607" docExpressionCount="280" docLength="3975" projectName="grailA3" starttimestamp="1623298372811" timestamp="24534">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="14" _type="Insert" date="Thu Jun 10 00:13:49 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" length="2" offset="1803" repeat="2" starttimestamp="1623298372811" timestamp="56242" timestamp2="56411">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="21" _type="Replace" date="Thu Jun 10 00:14:03 EDT 2021" docASTNodeCount="386" docActiveCodeLength="2630" docExpressionCount="285" docLength="4063" endLine="71" insertionLength="88" int_docASTNodeCount="376" int_docActiveCodeLength="2542" int_docExpressionCount="277" int_docLength="3975" length="2" offset="1869" startLine="71" starttimestamp="1623298372811" timestamp="70249">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="25" _type="Delete" date="Thu Jun 10 00:14:08 EDT 2021" docASTNodeCount="382" docActiveCodeLength="2566" docExpressionCount="282" docLength="3999" endLine="71" length="64" offset="1893" repeat="3" startLine="71" starttimestamp="1623298372811" timestamp="75398" timestamp2="77568">
    <text><![CDATA[BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());]]></text>
  </DocumentChange>
  <DocumentChange __id="35" _type="Insert" date="Thu Jun 10 00:14:14 EDT 2021" docASTNodeCount="382" docActiveCodeLength="2567" docExpressionCount="282" docLength="4000" length="1" offset="1948" starttimestamp="1623298372811" timestamp="81234">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="40" _type="Delete" date="Thu Jun 10 00:14:23 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2545" docExpressionCount="277" docLength="3978" endLine="71" length="22" offset="1871" startLine="71" starttimestamp="1623298372811" timestamp="90997">
    <text><![CDATA[frame.add((Component) ]]></text>
  </DocumentChange>
  <DocumentChange __id="44" _type="Delete" date="Thu Jun 10 00:14:27 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" endLine="71" length="1" offset="1926" startLine="71" starttimestamp="1623298372811" timestamp="94575">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="46" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:14:39 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1701" docExpressionCount="145" docLength="1701" projectName="grailA3" starttimestamp="1623298372811" timestamp="106226">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static BridgeSceneController bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static BridgeSceneController bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="49" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:14:45 EDT 2021" docASTNodeCount="297" docActiveCodeLength="1765" docExpressionCount="179" docLength="1765" projectName="grailA3" starttimestamp="1623298372811" timestamp="112988">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/AnObservableHelper.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.MVC;

	import java.beans.PropertyChangeEvent;


	import java.beans.PropertyChangeListener;
	import java.util.List;

public class AnObservableHelper implements ObservableHelp {
		public static final int MAX_SIZE = 50;
		

		PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];
		int size = 0;
		
		@Override
		public PropertyChangeListener[] getPropertyChangeListeners() {
			return contents;
		}
		@Override
		public int size() {
			return size;
		}
		@Override
		public PropertyChangeListener get (int index) {
			return contents[index];
		}
		
		@Override
		public boolean isFull() {
			return size == MAX_SIZE;

		}
		@Override
		public void add(PropertyChangeListener listener) {
			if (isFull())
				System.out.println("Adding item to a full collection");
			else {
				contents[size] = listener;
				size++;
			}
		}
		
		@Override
		public void notifyAllListeners(PropertyChangeEvent event) {
			for (int index = 0; index < size(); index++) {			
				get(index).propertyChange(event);
			}
		}
	
		@Override
		public void remove(PropertyChangeListener element) {
			contents[indexOf(element)] = contents[size - 1];
			size--;
		}
		@Override
		public void remove(int startIndex) {
			shiftUp(startIndex);
			size--;
		}
		
		private void shiftUp(int startIndex) {
			for (int index = startIndex; index + 1 < size; index++)
				contents[index] = contents[index + 1];
		}
		@Override
		public int indexOf(PropertyChangeListener element) {
			int index;
			for (index = 0; index < size && !element.equals(contents[index]); index++)
				;
			return index;
		}
		@Override
		public boolean member(PropertyChangeListener element) {
			return indexOf(element) < size;

		}
		@Override
		public void clear() {
			size = 0;
		}
	}


]]></snapshot>
  </Command>
  <Command __id="52" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:14:46 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="113867">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.beans.PropertyChangeEvent;
import java.awt.BasicStroke;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

import grail.compositeFigs.AngleShapes;
import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.StringShape;

@SuppressWarnings("serial")
public class BridgePaintView extends Component implements CustomView {
		FiveAvatars scene;
		
	
	public BridgePaintView() {
		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getGalahad().getHead().addPropertyChangeListener(this);
		scene.getGalahad().getTorso().addPropertyChangeListener(this);
		scene.getArthur().getStringShape().addPropertyChangeListener(this);
		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getArthur().getHead().addPropertyChangeListener(this);
		scene.getArthur().getTorso().addPropertyChangeListener(this);
		scene.getArthur().getStringShape().addPropertyChangeListener(this);
		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getRobin().getHead().addPropertyChangeListener(this);
		scene.getRobin().getTorso().addPropertyChangeListener(this);
		scene.getRobin().getStringShape().addPropertyChangeListener(this);
		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getLancelot().getHead().addPropertyChangeListener(this);
		scene.getLancelot().getTorso().addPropertyChangeListener(this);
		scene.getLancelot().getStringShape().addPropertyChangeListener(this);
		setFocusable(true);
		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);
	}
	
	@Override
	public void paint(Graphics g) {
		super.paint(g);
		Graphics2D g2 = (Graphics2D) g;
		imagePainter(g, scene.getGalahad());
		linePainter(g, scene.getGalahad().getTorso());
		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());
		stringPainter(g, scene.getGalahad().getStringShape());
		ovalPainter(g, scene.getKnightArea());
		ovalPainter(g, scene.getGuardArea());
		imagePainter(g, scene.getArthur());
		linePainter(g, scene.getArthur().getTorso());
		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());
		stringPainter(g, scene.getArthur().getStringShape());
		imagePainter(g, scene.getRobin());
		linePainter(g, scene.getRobin().getTorso());
		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());
		stringPainter(g, scene.getRobin().getStringShape());
		imagePainter(g, scene.getLancelot());
		linePainter(g, scene.getLancelot().getTorso());
		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());
		stringPainter(g, scene.getLancelot().getStringShape());
		imagePainter(g, scene.getGuard());
		linePainter(g, scene.getGuard().getTorso());
		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());
		stringPainter(g, scene.getGuard().getStringShape());
		linePainter(g, scene.getGorge().getbridgeLLine());
		linePainter(g, scene.getGorge().getbridgeULine());
		linePainter(g, scene.getGorge().getleftLine());
		linePainter(g, scene.getGorge().getrightLine());
		

		
	}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		repaint();
	}
	
	void imagePainter(Graphics g, Avatars avatarHead) {
		ImageShapes headImage = avatarHead.getHead();
		BufferedImage newImage = null;
		try {
			newImage = ImageIO.read(new File(headImage.getImageFileName()));
		} catch (IOException e) {}
		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);
	}
	
	public void linePainter(Graphics g, MovingL line) {
		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());
	}
	public void stringPainter(Graphics g, StringShape quote) {
		g.drawString(quote.getText(), quote.getX(), quote.getY());
	}
	public void ovalPainter(Graphics g, MovingL avatarZone) {
		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());
	}
	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {
		linePainter(g, arms.getLeftLine());
		linePainter(g, arms.getRightLine());
		linePainter(g, legs.getLeftLine());
		linePainter(g, legs.getRightLine());
	}
	
	public static void main(String[] args) {
		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();
		JFrame frame = new JFrame("Monty Scene");
		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());
		frame.setSize(2000, 800);
		frame.setVisible(true);}
}
]]></snapshot>
  </Command>
  <Command __id="54" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:14:50 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="117854">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController implements KeyListener, MouseListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
	FiveAvatars aBridgeScene;
	int newX;
	int newY;
	
	
	
	public BridgeSceneController(Component sceneComponent) {
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		System.out.println ("Mouse clicked:");
		newX = e.getX();
		newY = e.getY();
		
		
	}

	
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	
	public void mouseReleased(MouseEvent e) {}

	
	public void mouseEntered(MouseEvent e) {}

	
	public void mouseExited(MouseEvent e) {}

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println ("Keyboard clicked:");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.moveAvatar(newX, newY);
    		break;
    	case 'g':
    		galahad.moveAvatar(newX, newY);
    		break;
    	case 'l' :
    		lancelot.moveAvatar(newX, newY);
    		break;
    	case 'r':
    		robin.moveAvatar(newX, newY);
    		break;
    	case 'o':
    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.moveAvatar(LANCE_X, LANCE_Y);
    	
    		robin.moveAvatar(ROBIN_X, ROBIN_Y);
		}
		
	}

	
	public void keyPressed(KeyEvent e) {}

	
	public void keyReleased(KeyEvent e) {}
	

}
]]></snapshot>
  </Command>
  <Command __id="62" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:15:47 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="174682">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.Component;

import javax.swing.JFrame;

import bus.uigen.OEFrame;

import bus.uigen.ObjectEditor;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.compositeFigs.FiveChars;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.MovingL;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.misc.ThreadSupport;

//@Tags(Comp301Tags.ROTATING_LINE)
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
//@Tags(Comp301Tags.BRIDGE_SCENE)

		
public class Assignment3 {
	
	static final double
			RADIUS = 400,
			ANGLE = Math.PI/4,
			SCALE_BY = 2.5;
	static final int
			SLEEP_TIME = 3000,
			MARCH_T = 1000,
			X = 0,
			Y = 0,
			X_2 = 50,
			Y_2 = 100,
			ROTATE_BY = 8,
			ARM_ROT = 3,
			MOVE_BY = 20,
			TALK_LENGTH = 6,
			ROB_Y = 60;
	static final String
			KNIGHTS = "We Beat the Guard!!",
			GUARD = "Damn it!!";
			

	public static void main(String[] args) {
		//animateLine();
		demonstrateBridgeScene();
	}
	public static void animateLine() {
		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);
		OEFrame aFrame = ObjectEditor.edit (line1);
		line1.rotate(ROTATE_BY);
		aFrame.refresh();
		line1.setX(X_2);
		line1.setY(Y_2);
		aFrame.refresh();
	}
	public static void demonstrateBridgeScene() {
		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();
    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);
    	//anOEFrame.showTreePanel();
    	//ThreadSupport.sleep(SLEEP_TIME);
		JFrame frame = new JFrame("Monty Scene");
		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());
		frame.setSize(2000, 800);
		frame.setVisible(true);
		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();
		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();
    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);
    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);
    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);
    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);
    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);
    	//anOEFrame.refresh();
    	ThreadSupport.sleep(SLEEP_TIME);
    	montyChars.approach("Robin");
    	//anOEFrame.refresh();
    	//montyChars.approach(montyChars.getArthur());
    	//anOEFrame.refresh();
    	//montyChars.scroll(X_2, Y_2);
    	//int i = 0;
    	//while(i < TALK_LENGTH) {
    	//	ThreadSupport.sleep(MARCH_T);
    	//	montyChars.say("What is the velocity of a gazeel?");
    		//anOEFrame.refresh();
    	//	i++;
    	//}
    	//montyChars.passed();
    	//montyChars.failed();
    	//montyChars.getRobin().getStringShape().setText("Damn");
    	//anOEFrame.refresh();
    	
    	//int i = X;
    	//while (i < MOVE_BY) {
    	//ThreadSupport.sleep(MARCH_T);
    	//montyChars.getArthur().move(MOVE_BY, Y);
    	//montyChars.getGalahad().move(MOVE_BY, Y);
    	//montyChars.getLancelot().move(MOVE_BY, Y);
    	//montyChars.getRobin().move(MOVE_BY, Y);
    	//anOEFrame.refresh();
    	//i++;
    	//}
    	//montyChars.getLancelot().move(X, MOVE_BY);
    	//montyChars.getGalahad().move(X, MOVE_BY);
    	//montyChars.getRobin().move(X, ROB_Y);
    	//montyChars.getRobin().scale(SCALE_BY);
    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);
    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);
    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);
    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);
    	//montyChars.getGuard().getStringShape().setText(GUARD);
    	//anOEFrame.refresh();
    	
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="82" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:15:58 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="185743">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="99" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:16:29 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="216795">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="111" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:16:40 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="227753">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="173" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:17:23 EDT 2021" projectName="null" starttimestamp="1623298372811" timestamp="270693">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="239" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:17:55 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="302645">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="242" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:17:58 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="305371">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="261" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:18:15 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="322563">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="272" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:18:53 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="360905">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="286" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:19:04 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="371920">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="307" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:20:22 EDT 2021" projectName="null" starttimestamp="1623298372811" timestamp="449820">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="351" _type="PauseCommand" date="Thu Jun 10 00:21:10 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="498055">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[4395]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="352" _type="MoveCaretCommand" caretOffset="880" date="Thu Jun 10 00:21:10 EDT 2021" docOffset="1200" starttimestamp="1623298372811" timestamp="498187" />
  <Command __id="354" _type="PauseCommand" date="Thu Jun 10 00:21:15 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="503169">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4982]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="355" _type="MoveCaretCommand" caretOffset="880" date="Thu Jun 10 00:21:16 EDT 2021" docOffset="1200" starttimestamp="1623298372811" timestamp="503366" />
  <Command __id="357" _type="PauseCommand" date="Thu Jun 10 00:21:30 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="517358">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13992]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="356" _type="MoveCaretCommand" caretOffset="797" date="Thu Jun 10 00:21:30 EDT 2021" docOffset="1117" starttimestamp="1623298372811" timestamp="517358" />
  <Command __id="358" _type="MoveCaretCommand" caretOffset="797" date="Thu Jun 10 00:21:30 EDT 2021" docOffset="1117" starttimestamp="1623298372811" timestamp="517358" />
  <Command __id="360" _type="PauseCommand" date="Thu Jun 10 00:21:32 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="519477">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2119]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="359" _type="BreakPointCommand" date="Thu Jun 10 00:21:32 EDT 2021" lineNumber="48" starttimestamp="1623298372811" timestamp="519477" type="BreakPointRemoved" />
  <Command __id="361" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:21:32 EDT 2021" starttimestamp="1623298372811" timestamp="519499" />
  <Command __id="363" _type="PauseCommand" date="Thu Jun 10 00:21:39 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="527092">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7593]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="362" _type="MoveCaretCommand" caretOffset="1423" date="Thu Jun 10 00:21:39 EDT 2021" docOffset="1743" starttimestamp="1623298372811" timestamp="527092" />
  <Command __id="364" _type="MoveCaretCommand" caretOffset="1423" date="Thu Jun 10 00:21:39 EDT 2021" docOffset="1743" starttimestamp="1623298372811" timestamp="527093" />
  <Command __id="366" _type="PauseCommand" date="Thu Jun 10 00:21:42 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="529320">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2227]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="365" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:21:42 EDT 2021" starttimestamp="1623298372811" timestamp="529320" />
  <Command __id="367" _type="BreakPointCommand" date="Thu Jun 10 00:21:42 EDT 2021" lineNumber="78" starttimestamp="1623298372811" timestamp="529321" type="BreakPointAdded" />
  <Command __id="372" _type="PauseCommand" date="Thu Jun 10 00:21:46 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="534099">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1361]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="371" _type="RunCommand" date="Thu Jun 10 00:21:46 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="534099" type="Run" />
  <Command __id="373" _type="RunCommand" date="Thu Jun 10 00:21:47 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="534334" type="Run" />
  <Command __id="374" _type="RunCommand" date="Thu Jun 10 00:21:47 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="534461" type="Run" />
  <Command __id="375" _type="ShellCommand" date="Thu Jun 10 00:21:47 EDT 2021" starttimestamp="1623298372811" timestamp="534619" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="376" _type="RunCommand" date="Thu Jun 10 00:21:47 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="534938" type="Run" />
  <Command __id="463" _type="PauseCommand" date="Thu Jun 10 00:22:52 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="600126">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[10862]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="462" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Thu Jun 10 00:22:52 EDT 2021" starttimestamp="1623298372811" timestamp="600126" />
  <Command __id="464" _type="RunCommand" date="Thu Jun 10 00:22:52 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="600151" type="Debug" />
  <Command __id="465" _type="RunCommand" date="Thu Jun 10 00:22:52 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="600151" type="Run" />
  <Command __id="466" _type="RunCommand" date="Thu Jun 10 00:22:52 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="600151" type="Debug" />
  <Command __id="467" _type="RunCommand" date="Thu Jun 10 00:22:52 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="600151" type="Run" />
  <Command __id="472" _type="PauseCommand" date="Thu Jun 10 00:23:10 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="617296">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2946]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="473" _type="MoveCaretCommand" caretOffset="3013" date="Thu Jun 10 00:23:10 EDT 2021" docOffset="3149" starttimestamp="1623298372811" timestamp="617387" />
  <Command __id="475" _type="MoveCaretCommand" caretOffset="3900" date="Thu Jun 10 00:23:10 EDT 2021" docOffset="4597" starttimestamp="1623298372811" timestamp="618158" />
  <Command __id="477" _type="PauseCommand" date="Thu Jun 10 00:23:12 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="619392">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1234]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="478" _type="MoveCaretCommand" caretOffset="1423" date="Thu Jun 10 00:23:12 EDT 2021" docOffset="1743" starttimestamp="1623298372811" timestamp="619495" />
  <Command __id="480" _type="PauseCommand" date="Thu Jun 10 00:23:31 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="638883">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19387]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="479" _type="BreakPointCommand" date="Thu Jun 10 00:23:31 EDT 2021" lineNumber="78" starttimestamp="1623298372811" timestamp="638882" type="BreakPointRemoved" />
  <Command __id="481" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:23:31 EDT 2021" starttimestamp="1623298372811" timestamp="638903" />
  <Command __id="483" _type="PauseCommand" date="Thu Jun 10 00:23:33 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="640828">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1925]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="482" _type="MoveCaretCommand" caretOffset="1467" date="Thu Jun 10 00:23:33 EDT 2021" docOffset="1787" starttimestamp="1623298372811" timestamp="640828" />
  <Command __id="484" _type="MoveCaretCommand" caretOffset="1467" date="Thu Jun 10 00:23:33 EDT 2021" docOffset="1787" starttimestamp="1623298372811" timestamp="640828" />
  <Command __id="486" _type="PauseCommand" date="Thu Jun 10 00:23:36 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="643244">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2416]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="485" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:23:36 EDT 2021" starttimestamp="1623298372811" timestamp="643244" />
  <Command __id="487" _type="BreakPointCommand" date="Thu Jun 10 00:23:36 EDT 2021" lineNumber="80" starttimestamp="1623298372811" timestamp="643245" type="BreakPointAdded" />
  <Command __id="491" _type="PauseCommand" date="Thu Jun 10 00:23:49 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="656237">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6993]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="490" _type="RunCommand" date="Thu Jun 10 00:23:49 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="656237" type="Debug" />
  <Command __id="492" _type="RunCommand" date="Thu Jun 10 00:23:49 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="656237" type="Run" />
  <Command __id="493" _type="RunCommand" date="Thu Jun 10 00:23:49 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="656237" type="Debug" />
  <Command __id="494" _type="RunCommand" date="Thu Jun 10 00:23:49 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="656237" type="Run" />
  <Command __id="495" _type="ShellCommand" date="Thu Jun 10 00:23:49 EDT 2021" starttimestamp="1623298372811" timestamp="656274" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="500" _type="PauseCommand" date="Thu Jun 10 00:23:57 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="664307">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1873]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="499" _type="RunCommand" date="Thu Jun 10 00:23:57 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="664307" type="Run" />
  <Command __id="501" _type="RunCommand" date="Thu Jun 10 00:23:57 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="664307" type="Run" />
  <Command __id="502" _type="RunCommand" date="Thu Jun 10 00:23:57 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="664517" type="Run" />
  <Command __id="503" _type="RunCommand" date="Thu Jun 10 00:23:57 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="664539" type="Run" />
  <Command __id="504" _type="RunCommand" date="Thu Jun 10 00:23:57 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="664671" type="Run" />
  <Command __id="505" _type="ShellCommand" date="Thu Jun 10 00:23:57 EDT 2021" starttimestamp="1623298372811" timestamp="664840" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="506" _type="RunCommand" date="Thu Jun 10 00:23:57 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="665167" type="Run" />
  <Command __id="508" _type="PauseCommand" date="Thu Jun 10 00:24:03 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="670240">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[5073]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="507" _type="ConsoleOutput" date="Thu Jun 10 00:24:03 EDT 2021" overflow="false" starttimestamp="1623298372811" timestamp="670240" type="ConsoleOutput">
    <outputString><![CDATA[Mouse clicked:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Keyboard"), Diff(INSERT,"Mouse"), Diff(EQUAL," clicked:¶")]]]></diff>
  </Command>
  <Command __id="509" _type="ShellCommand" date="Thu Jun 10 00:24:04 EDT 2021" starttimestamp="1623298372811" timestamp="671196" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="510" _type="ConsoleOutput" date="Thu Jun 10 00:24:04 EDT 2021" overflow="false" starttimestamp="1623298372811" timestamp="671487" type="ConsoleOutput">
    <outputString><![CDATA[Keyboard clicked:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Mouse"), Diff(INSERT,"Keyboard"), Diff(EQUAL," clicked:¶")]]]></diff>
  </Command>
  <Command __id="511" _type="RunCommand" date="Thu Jun 10 00:24:04 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="672103" type="Run" />
  <Command __id="513" _type="MoveCaretCommand" caretOffset="1461" date="Thu Jun 10 00:24:05 EDT 2021" docOffset="1781" starttimestamp="1623298372811" timestamp="672494" />
  <Command __id="515" _type="PauseCommand" date="Thu Jun 10 00:24:19 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="686254">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13760]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="514" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Thu Jun 10 00:24:19 EDT 2021" starttimestamp="1623298372811" timestamp="686254" />
  <Command __id="516" _type="RunCommand" date="Thu Jun 10 00:24:19 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="686255" type="Run" />
  <Command __id="518" _type="MoveCaretCommand" caretOffset="2298" date="Thu Jun 10 00:24:19 EDT 2021" docOffset="2733" starttimestamp="1623298372811" timestamp="686625" />
  <Command __id="543" _type="RunCommand" date="Thu Jun 10 00:24:30 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="697889" type="Run" />
  <Command __id="545" _type="MoveCaretCommand" caretOffset="1498" date="Thu Jun 10 00:24:30 EDT 2021" docOffset="1818" starttimestamp="1623298372811" timestamp="698125" />
  <Command __id="547" _type="PauseCommand" date="Thu Jun 10 00:24:48 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="715933">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17807]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="546" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Thu Jun 10 00:24:48 EDT 2021" starttimestamp="1623298372811" timestamp="715932" />
  <Command __id="548" _type="RunCommand" date="Thu Jun 10 00:24:48 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="715937" type="Run" />
  <Command __id="562" _type="PauseCommand" date="Thu Jun 10 00:25:07 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="734678">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3130]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="563" _type="MoveCaretCommand" caretOffset="177670" date="Thu Jun 10 00:25:07 EDT 2021" docOffset="177806" starttimestamp="1623298372811" timestamp="734900" />
  <Command __id="565" _type="PauseCommand" date="Thu Jun 10 00:25:09 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="736677">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1777]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="566" _type="MoveCaretCommand" caretOffset="1931" date="Thu Jun 10 00:25:09 EDT 2021" docOffset="2251" starttimestamp="1623298372811" timestamp="736807" />
  <Command __id="568" _type="PauseCommand" date="Thu Jun 10 00:25:12 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="739271">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2464]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="567" _type="ShellCommand" date="Thu Jun 10 00:25:12 EDT 2021" starttimestamp="1623298372811" timestamp="739271" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="570" _type="PauseCommand" date="Thu Jun 10 00:25:14 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="741328">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2057]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="569" _type="ShellCommand" date="Thu Jun 10 00:25:14 EDT 2021" starttimestamp="1623298372811" timestamp="741328" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="572" _type="PauseCommand" date="Thu Jun 10 00:25:18 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="746051">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4723]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="573" _type="MoveCaretCommand" caretOffset="1224" date="Thu Jun 10 00:25:18 EDT 2021" docOffset="1545" starttimestamp="1623298372811" timestamp="746159" />
  <Command __id="575" _type="PauseCommand" date="Thu Jun 10 00:25:23 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="750451">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4292]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="576" _type="MoveCaretCommand" caretOffset="0" date="Thu Jun 10 00:25:23 EDT 2021" docOffset="0" starttimestamp="1623298372811" timestamp="750555" />
  <Command __id="578" _type="PauseCommand" date="Thu Jun 10 00:25:30 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="757615">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7060]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="579" _type="MoveCaretCommand" caretOffset="1224" date="Thu Jun 10 00:25:30 EDT 2021" docOffset="1545" starttimestamp="1623298372811" timestamp="757729" />
  <Command __id="581" _type="PauseCommand" date="Thu Jun 10 00:25:33 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="760652">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2923]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="580" _type="ShellCommand" date="Thu Jun 10 00:25:33 EDT 2021" starttimestamp="1623298372811" timestamp="760652" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="583" _type="PauseCommand" date="Thu Jun 10 00:25:38 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="765476">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4824]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="582" _type="ShellCommand" date="Thu Jun 10 00:25:38 EDT 2021" starttimestamp="1623298372811" timestamp="765476" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="585" _type="MoveCaretCommand" caretOffset="3900" date="Thu Jun 10 00:25:38 EDT 2021" docOffset="4597" starttimestamp="1623298372811" timestamp="765719" />
  <Command __id="587" _type="PauseCommand" date="Thu Jun 10 00:25:51 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="779122">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13403]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="586" _type="MoveCaretCommand" caretOffset="3984" date="Thu Jun 10 00:25:51 EDT 2021" docOffset="4681" starttimestamp="1623298372811" timestamp="779122" />
  <Command __id="588" _type="MoveCaretCommand" caretOffset="3984" date="Thu Jun 10 00:25:51 EDT 2021" docOffset="4681" starttimestamp="1623298372811" timestamp="779122" />
  <Command __id="350" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:21:10 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="498055">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="353" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:21:15 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="503169">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="368" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:21:45 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="532607">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="382" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:21:57 EDT 2021" projectName="null" starttimestamp="1623298372811" timestamp="544734">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="468" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:23:07 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="614230">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="471" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:23:10 EDT 2021" projectName="null" starttimestamp="1623298372811" timestamp="617296">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="474" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:23:10 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="618005">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="476" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:23:12 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="619392">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="496" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:23:55 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="662343">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="512" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:24:05 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="672211">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="517" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:24:19 EDT 2021" docASTNodeCount="757" docActiveCodeLength="4361" docExpressionCount="536" docLength="4361" projectName="grailA3" starttimestamp="1623298372811" timestamp="686357">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/MontyAvatar.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import grail.extras.Tables;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MontyString;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.StringShape;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.AVATAR)


public class MontyAvatar implements Avatars {
	
	static final double
		INITIAL_LIMB_RAD = 20,
		USUAL_LLINE_ANG = (Math.PI/4),
		USUAL_RLINE_ANG = 3*(Math.PI/4),
		TORSO_ANGLE = Math.PI/2,
		TORSO_LENGTH = 50;
		;
	static final int
		ORIG_X = 0,
		ORIG_Y = 0;
	static final String AVATAR_SAYS = "Lets Go";
	
	StringShape textSpoken;
	ImageShapes character;
	AngleShapes arms;
	AngleShapes legs;
	MovingL torso;
	
	public MontyAvatar(ImageShapes newHead) {
		character = newHead;
		int attachPointX = character.getX() + ((character.getWidth())/2);
		int attachPointY = character.getY() + (character.getHeight());
		armLegMiniFact();
		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);
		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);
		this.combineFigs(attachPointX, attachPointY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	@Override
	public void armLegMiniFact() {
		arms = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);
		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);
	}
	@Override
	public StringShape getStringShape() {
		return textSpoken;
	}
	@Override
	public ImageShapes getHead() {
		return character;
	}
	@Override
	public AngleShapes getArms() {
		return arms;
	}
	@Override
	public AngleShapes getLegs() {
		return legs;
	}
	@Override
	public MovingL getTorso() {
		return torso;
	}
	@Override
	public void combineFigs(int comunX, int comunY) {
			
		arms.getLeftLine().setX(comunX);
		arms.getLeftLine().setY(comunY);
		arms.getRightLine().setX(comunX);
		arms.getRightLine().setY(comunY);
		
		torso.setX(comunX);
		torso.setY(comunY);
		
		int lowTorsoY = comunY + torso.getHeight();
		int lowTorsoX = comunX + torso.getWidth();
		legs.getLeftLine().setX(lowTorsoX);
		legs.getLeftLine().setY(lowTorsoY);
		legs.getRightLine().setX(lowTorsoX);
		legs.getRightLine().setY(lowTorsoY);
		
		
	}
	@Override
	public void moveAvatar(int newX, int newY) {
		int newAttachX = arms.getLeftLine().getX() + newX;
		int newAttachY = arms.getLeftLine().getY() + newY;
		combineFigs(newAttachX, newAttachY);
		int newPicLocX = character.getX() + newX;
		int newPicLocY = character.getY() + newY;
		character.setX(newPicLocX);
		character.setY(newPicLocY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	
	@Override
	public void scale(double scaleBy) {
		double newRadL = arms.getLeftLine().getRadius()*scaleBy;
		double newRadR = arms.getRightLine().getRadius()*scaleBy;
		double newRadTo = torso.getRadius()*scaleBy;
		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());
		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;
		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;
		int newHeadHeight = (int)(character.getHeight()*scaleBy);
		int newHeadWidth = (int) (character.getWidth()*scaleBy);
		character.setHeight(newHeadHeight);
		character.setWidth(newHeadWidth);
		int attachPointX = character.getX() + ((character.getWidth())/2);
		int attachPointY = character.getY() + (character.getHeight());
		arms.getLeftLine().setRadius(newRadL);
		arms.getRightLine().setRadius(newRadR);
		legs.getLeftLine().setRadius(newRadLegL);
		legs.getRightLine().setRadius(newRadLegR);
		torso.setRadius(newRadTo);
		legs.moveLimbs(ORIG_X, legAttach);
		this.combineFigs(attachPointX, attachPointY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="544" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:24:30 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="697949">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="552" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:24:50 EDT 2021" projectName="null" starttimestamp="1623298372811" timestamp="717482">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="561" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:25:07 EDT 2021" projectName="null" starttimestamp="1623298372811" timestamp="734678">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="564" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:25:09 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="736677">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="571" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:25:18 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1701" docExpressionCount="145" docLength="1701" projectName="grailA3" starttimestamp="1623298372811" timestamp="746051">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static BridgeSceneController bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static BridgeSceneController bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="574" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:25:23 EDT 2021" docASTNodeCount="297" docActiveCodeLength="1765" docExpressionCount="179" docLength="1765" projectName="grailA3" starttimestamp="1623298372811" timestamp="750451">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/AnObservableHelper.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶	import java.beans.PropertyChangeEvent;¶¶¶	import java.beans.PropertyChangeListener;¶	import java.util.List;¶¶public class AnObservableHelper implements ObservableHelp {¶		public static final int MAX_SIZE = 50;¶		¶¶		PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];¶		int size = 0;¶		¶		@Override¶		public PropertyChangeListener[] getPropertyChangeListeners() {¶			return contents;¶		}¶		@Override¶		public int size() {¶			return size;¶		}¶		@Override¶		public PropertyChangeListener get (int index) {¶			return contents[index];¶		}¶		¶		@Override¶		public boolean isFull() {¶			return size == MAX_SIZE;¶¶		}¶		@Override¶		public void add(PropertyChangeListener listener) {¶			if (isFull())¶				System.out.println("Adding item to a full collection");¶			else {¶				contents[size] = listener;¶				size++;¶			}¶		}¶		¶		@Override¶		public void notifyAllListeners(PropertyChangeEvent event) {¶			for (int index = 0; index < size(); index++) {			¶				get(index).propertyChange(event);¶			}¶		}¶	¶		@Override¶		public void remove(PropertyChangeListener element) {¶			contents[indexOf(element)] = contents[size - 1];¶			size--;¶		}¶		@Override¶		public void remove(int startIndex) {¶			shiftUp(startIndex);¶			size--;¶		}¶		¶		private void shiftUp(int startIndex) {¶			for (int index = startIndex; index + 1 < size; index++)¶				contents[index] = contents[index + 1];¶		}¶		@Override¶		public int indexOf(PropertyChangeListener element) {¶			int index;¶			for (index = 0; index < size && !element.equals(contents[index]); index++)¶				;¶			return index;¶		}¶		@Override¶		public boolean member(PropertyChangeListener element) {¶			return indexOf(element) < size;¶¶		}¶		@Override¶		public void clear() {¶			size = 0;¶		}¶	}¶¶¶")]]]></diff>
  </Command>
  <Command __id="577" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:25:30 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1701" docExpressionCount="145" docLength="1701" projectName="grailA3" starttimestamp="1623298372811" timestamp="757615">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static BridgeSceneController bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static BridgeSceneController bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="584" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:25:38 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5957" docExpressionCount="795" docLength="6025" projectName="grailA3" starttimestamp="1623298372811" timestamp="765530">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="590" _type="PauseCommand" date="Thu Jun 10 00:25:53 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="780225">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1103]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="591" _type="InsertStringCommand" date="Thu Jun 10 00:25:53 EDT 2021" starttimestamp="1623298372811" timestamp="780230" timestamp2="780230">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="592" _type="InsertStringCommand" date="Thu Jun 10 00:25:53 EDT 2021" starttimestamp="1623298372811" timestamp="780231" timestamp2="780231">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="594" _type="InsertStringCommand" date="Thu Jun 10 00:25:53 EDT 2021" starttimestamp="1623298372811" timestamp="780876" timestamp2="780876">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="595" _type="InsertStringCommand" date="Thu Jun 10 00:25:53 EDT 2021" starttimestamp="1623298372811" timestamp="780876" timestamp2="780876">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="598" _type="PauseCommand" date="Thu Jun 10 00:25:55 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="782676">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1800]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="597" _type="InsertStringCommand" date="Thu Jun 10 00:25:55 EDT 2021" starttimestamp="1623298372811" timestamp="782676" timestamp2="782676">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="599" _type="InsertStringCommand" date="Thu Jun 10 00:25:55 EDT 2021" starttimestamp="1623298372811" timestamp="782676" timestamp2="782676">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="601" _type="InsertStringCommand" date="Thu Jun 10 00:25:55 EDT 2021" starttimestamp="1623298372811" timestamp="783040" timestamp2="783040">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="602" _type="InsertStringCommand" date="Thu Jun 10 00:25:55 EDT 2021" starttimestamp="1623298372811" timestamp="783040" timestamp2="783040">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="604" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783260" timestamp2="783260">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="605" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783260" timestamp2="783260">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="607" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783453" timestamp2="783453">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="608" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783453" timestamp2="783453">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="610" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783652" timestamp2="783652">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="611" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783652" timestamp2="783652">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="613" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783886" timestamp2="783886">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="614" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="783887" timestamp2="783887">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="616" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="784044" timestamp2="784044">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="617" _type="InsertStringCommand" date="Thu Jun 10 00:25:56 EDT 2021" starttimestamp="1623298372811" timestamp="784044" timestamp2="784044">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="714" _type="PauseCommand" date="Thu Jun 10 00:31:27 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1114719">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3272]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="715" _type="MoveCaretCommand" caretOffset="0" date="Thu Jun 10 00:31:27 EDT 2021" docOffset="0" starttimestamp="1623298372811" timestamp="1114824" />
  <DocumentChange __id="589" _type="Insert" date="Thu Jun 10 00:25:53 EDT 2021" docASTNodeCount="986" docActiveCodeLength="5968" docExpressionCount="795" docLength="6036" length="11" offset="4681" repeat="9" starttimestamp="1623298372811" timestamp="780225" timestamp2="784041">
    <text><![CDATA[
	
	public ]]></text>
  </DocumentChange>
  <DocumentChange __id="618" _type="Delete" date="Thu Jun 10 00:26:00 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5961" docExpressionCount="795" docLength="6029" endLine="106" length="7" offset="4685" repeat="7" startLine="106" starttimestamp="1623298372811" timestamp="787255" timestamp2="788406">
    <text><![CDATA[public ]]></text>
  </DocumentChange>
  <Command __id="640" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:26:39 EDT 2021" docASTNodeCount="154" docActiveCodeLength="1032" docExpressionCount="88" docLength="2879" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="826639">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleKeyController.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.graphics;

import java.awt.Component;


import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import lectures.composite.objects_shapes.PlottedShuttle;

public class APlottedShuttleKeyController 
	implements KeyListener { // Defined by Java
/*
 * APlottedShuttleKeyController IS-A
 *    (a) Component
 *    (b) KeyListener
 *    (c) MouseListener
 *    (d) None of the above
 */
	Component shuttleComponent;
	PlottedShuttle plottedShuttle;
	public static final int TARGET_X = 100;
	public static final int TARGET_Y = 100;	
	/*
	 * Study what this method does
	 */
	public APlottedShuttleKeyController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {
		shuttleComponent = aShuttleComponent;
		plottedShuttle = aPlottedShuttle;
		shuttleComponent.addKeyListener(this);
	}
/*
 * Remember listener == observer
 * 
 * (T/F) APlottedShuttleKeyController is an observer of a widget.
 * 
 */
	
	// This key event our controller cares about
	// This is also a notification method
    public void keyTyped(KeyEvent e) {
    	char typedChar = e.getKeyChar();
    	System.out.println ("Key typed:" + typedChar);
    	switch (typedChar) {
    	case 'x' :
    		plottedShuttle.setShuttleX(TARGET_X);
    		break;
    	case 'y':
    		plottedShuttle.setShuttleY(TARGET_Y);
    		break;
    	}    
	}	
	// These it does not
	public void keyPressed(KeyEvent e) {}
	public void keyReleased(KeyEvent e) {}	
/*
 * Look at the Console output and if necessary, to again:
 *  
 * 
 * (T/F) When the left mouse button is pressed a method in APlottedShuttleKeyController
 * is called.
 * (T/F) When a key is pressed, a method in APlottedShuttleKeyController is called.
 * 
 * To answer the question above, look at keyTyped and if necessary,  again the
 * console
 * 
 * Click the left mouse button somewhere in the custom view and see what happens.
 * Press the x key somewhere in the custom view and see what happens.
 * Press the y key somewhere in the custom view and see what happens.
 *  
 * Look at the constructor.
 * 
 * Listener = Observer
 *  
 * Look at the method keyTyped
 *  
 * (T/F) APlottedShuttleKeyController calls methods in its model in response
 * to the typing of a key.
 *
 * keyTyped is a notification method
 * 
 * What is consistent with this example:
 * 
 * In graphics-based MVC, where the view is a widget(Component), user input causes:
 *  (a) The controller to call notification methods in the view.
 *  (b) The view (widget) to call notification methods in the controller.
 *  (c) The controller to call write methods in the model.
 *  (d) The controller to call read methods in the model.
 *  (e) The model to call notification methods in the controller.
 *  (f) The model to call notification methods in the view.
 *  (g) None of the above
 *  

 *  
 *  
 * 
 *  
 * 
 * Next class APlottedShuttleMouseController
 */
}
]]></snapshot>
  </Command>
  <Command __id="647" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:27:00 EDT 2021" docASTNodeCount="139" docActiveCodeLength="892" docExpressionCount="81" docLength="2052" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="847358">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleMouseController.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.graphics;

import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import lectures.composite.objects_shapes.PlottedShuttle;

public class APlottedShuttleMouseController implements MouseListener {
	Component shuttleComponent;
	PlottedShuttle plottedShuttle;
	public APlottedShuttleMouseController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {
		shuttleComponent = aShuttleComponent;
		plottedShuttle = aPlottedShuttle;
		/*
		 * Instead of making the controller an action listener (observer)
		 * we make it a listener of mouse events
		 */
		shuttleComponent.addMouseListener(this);
	}
/*
 * APlottedShuttleMouseController IS-A
 *    (a) Component
 *    (b) KeyListener
 *    (c) MouseListener
 *    (d) None of the above
 */
	// This mouse event we care about
	// The mouse click notification method
	public void mouseClicked(MouseEvent e) {
    	System.out.println ("Mouse clicked:");

		plottedShuttle.setShuttleX(0);
		plottedShuttle.setShuttleY(0);		
	}    
	public void mouseEntered(MouseEvent e) {}
	public void mouseExited(MouseEvent e) {}
	public void mousePressed(MouseEvent e) {}
	public void mouseReleased(MouseEvent e) {}	
}
/*
 * Look at the Console output and if necessary, to again:
 *  
 * 
 * (T/F) When the left mouse button is pressed a method in APlottedShuttleMouseController
 * is called.
 * (T/F) When a key is pressed, a method in APlottedShuttleMouseController is called
 * 
 * To answer the question above, look at mouseClicked and if necessary,  again:
 * 
 * Click the left mouse button somewhere in the custom view and see what happens.
 * Press the x key somewhere in the custom view and see what happens.
 * Press the y key somewhere in the custom view and see what happens.
 *  
 * (T/F) An instance of APlottedShuttleMouseController knows about, that is,
 * has a reference to an instance of APlottedKeyController.
 * 
 * (T/F) Controllers of the same model can be independent of each other.
 * 
 * Return to PlottedShuttleComposer
 */
]]></snapshot>
  </Command>
  <Command __id="653" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:28:00 EDT 2021" docASTNodeCount="154" docActiveCodeLength="1032" docExpressionCount="105" docLength="1609" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="907553">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleView.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.graphics;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.beans.PropertyChangeListener;

import lectures.composite.objects_shapes_extra.ImageWithHeight;

public class APlottedShuttleView extends ACartesianPlaneView implements PropertyChangeListener { 
/*   
 *  APlottedShuttleView IS-A:
 *     (a) JFrame
 *     (b) Component
 *     (c) None of the above
 *     
 *  (T/F) APlottedShuttleView IS-A PropertyChangeListener.	
 */
	ObservablePlottedShuttle plottedShuttle;	
	public APlottedShuttleView(ObservablePlottedShuttle aPlottedShuttle) {
		// can we get rid of the cast while still doing reuse?
		super((ObservableCartesianPlane) aPlottedShuttle.getCartesianPlane());
		plottedShuttle = aPlottedShuttle;
		setFocusable(true); // allow component to get keyboard focus
	}		
	public void paint(Graphics g) {
		super.paint(g);
		System.out.println ("Paint called in APLottedShuttleView");
		Graphics2D g2 = (Graphics2D) g;
		draw(g2, plottedShuttle.getShuttleImage());
	}
	public  void draw(Graphics2D g, ImageWithHeight anImage) {
		Image img = Toolkit.getDefaultToolkit().getImage(anImage.getImageFileName());
		g.drawImage(img, anImage.getX(), anImage.getY(), this);		
	}
	
}
/*
 * (APlottedShuttleView:
 *  (a) inherits paint()
 *  (b) overrides  paint();
 *  (c) None of the above
 *  
 * 
 * APlottedShuttleView:
 * (a) inherits propertyChange()
 * (b) overrides propertyChange()
 * (c) None of the above
 * 
 *
 * Return to PlottedShuttleComposer (ALT <-)
 */
]]></snapshot>
  </Command>
  <Command __id="656" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:28:12 EDT 2021" docASTNodeCount="244" docActiveCodeLength="1813" docExpressionCount="163" docLength="1996" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="920088">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/AnObservablePlottedShuttle.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.graphics;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import lectures.composite.objects_shapes.APlottedShuttle;
import lectures.mvc.properties.AnObservableImageWithHeight;
import lectures.mvc.properties.PropertyListenerSupport;
import lectures.mvc.properties.atomic.APropertyListenerSupport;
import bus.uigen.ObjectEditor;
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
public class AnObservablePlottedShuttle extends APlottedShuttle implements ObservablePlottedShuttle {
	PropertyListenerSupport propertySupport = new APropertyListenerSupport();	
	public AnObservablePlottedShuttle(int anX, int aY) {
		super(anX, aY);
		cartesianPlane = new AnObservableCartesianPlane (
				AXES_LENGTH, ORIGIN_X, ORIGIN_Y);
		shuttleImage = new AnObservableImageWithHeight(SHUTTLE_IMAGE_FILE_NAME);
//		propertySupport = new APropertyListenerSupport();	
		setShuttleX(anX);
		setShuttleY(aY);
	}
	public void setShuttleX(int newVal) {
		int oldVal = getShuttleX();
		super.setShuttleX(newVal);
		if (propertySupport != null) //why this check? Can we change super class so this check is not made
		  propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ShuttleX", oldVal,
				newVal));
	}
	public void setShuttleY(int newVal) {
		int oldVal = getShuttleY();
		super.setShuttleY(newVal);
		if (propertySupport != null) //why this check?
		  propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ShuttleY", oldVal,
				newVal));
	}
	public void addPropertyChangeListener(PropertyChangeListener listener) {
		propertySupport.add(listener);		
	}
	public static void main (String[] args) {
		ObservablePlottedShuttle shuttleLocation = new AnObservablePlottedShuttle(50, 100);	
		ObjectEditor.edit(shuttleLocation);
		shuttleLocation.setShuttleY(50);
		shuttleLocation.setShuttleX(100);
	}

}
/*
 * Next class PlottedShuttleComposer
 */
]]></snapshot>
  </Command>
  <Command __id="659" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:28:57 EDT 2021" docASTNodeCount="28" docActiveCodeLength="234" docExpressionCount="20" docLength="234" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="965074">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/ObservablePlottedShuttle.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.graphics;

import lectures.composite.objects_shapes.PlottedShuttle;
import util.models.PropertyListenerRegisterer;

public interface ObservablePlottedShuttle extends PlottedShuttle, PropertyListenerRegisterer{

}
]]></snapshot>
  </Command>
  <Command __id="662" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:29:02 EDT 2021" docASTNodeCount="240" docActiveCodeLength="1627" docExpressionCount="140" docLength="3672" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="969259">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/PlottedShuttleComposer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.graphics;

import java.awt.Component;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeListener;

import javax.swing.JFrame;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
/**
 * 
 * WINWDOW-BASED CONTROLLER
 * 
 * Again we will draw our own graphics. 
 * 
 * We will also learn how to intercept raw key and mouse events by defining 
 * two independent window based controllers.
 * 
 * In addition, we will learn to subclass our custom graphics view from the previous exercise.
 * To do so, we will work with a plotted shuttle instead of a Cartesian plane
 * 
 * Study  the program.
 * 
 */

public class PlottedShuttleComposer {
	static final int CUSTOM_FRAME_WIDTH = 400;
	static final int CUSTOM_FRAME_HEIGHT = 300;
	static final int OE_FRAME_WIDTH = 400;
	static final int OE_FRAME_HEIGHT = 600;
	static final int INIT_SHUTTLE_X = 25;
	static final int INIT_SHUTTLE_Y = 50;

	static final int FINAL_SHUTTLE_X = 50;
	static final int FINAL_SHUTTLE_Y = 100;
	
	public static void composeShuttleMVC(ObservablePlottedShuttle aPlottedShuttle) {
		PropertyChangeListener view = new APlottedShuttleView(aPlottedShuttle);
		aPlottedShuttle.addPropertyChangeListener(view);
		/*
		 * This time we create two controllers also
		 * They will listener to events from the view, so they need the views in
		 *  their constructors		  
		 */
		MouseListener aMouseController = new APlottedShuttleMouseController(aPlottedShuttle, (Component) view);
		KeyListener aKeyController = new APlottedShuttleKeyController(aPlottedShuttle, (Component) view);
		JFrame aFrame = new JFrame("Plotted Shuttle");
		aFrame.add((Component) view);
		aFrame.setSize(CUSTOM_FRAME_WIDTH, CUSTOM_FRAME_HEIGHT);
		aFrame.setVisible(true);
	}
	public static void main(String[] args) {		
		ObservablePlottedShuttle aPlottedShuttle = new AnObservablePlottedShuttle(INIT_SHUTTLE_X, INIT_SHUTTLE_Y);		
		composeShuttleMVC(aPlottedShuttle);
		OEFrame anOEFrame = ObjectEditor.edit(aPlottedShuttle);	
		anOEFrame.setSize(OE_FRAME_WIDTH, OE_FRAME_HEIGHT);
		aPlottedShuttle.setShuttleX(FINAL_SHUTTLE_X);
		aPlottedShuttle.setShuttleY(FINAL_SHUTTLE_Y);
	}
}

/*
 * Run the program.
 * Click the left mouse button somewhere in the custom view and see what happens.
 * Press the x key somewhere in the custom view and see what happens.
 * Press the y key somewhere in the custom view and see what happens.
 * 
 * Go to APlottedShuttleView and answer the questions there
 * 
 * Look at the console output
 * 
 * When the plotted shuttle model changes, 
 *    (a) the repaint() method is called by code contained in APlottedShuttleView
 *    (b) the repaint() method is called by code contained in ACartesianPlaneView
 *    (c) the paint() method implemented in APlottedShuttleView is called
 *    (d) the paint method implemented in ACartesianPlaneView is called
 *    (e) None of the above
 *    
 *Given a component c of class C, when the component needs to be redrawn, a paint()
 *methods implemented by 
 *   (a) class C should be called
 *   (b) all superclasses of C should be called
 *   (c) None of the above
 *    
 * Go to APlottedShuttleKeyController and answer the questions there
 * 
 * (T/F) PlottedShuttleComposer attaches the model it creates to a single custom
 *      (non ObjectEditor) view.
 * (T/F) PlottedShuttleComposer attaches the model it creates to a single 
 * 		(non ObjectEditor) controller.
 * 
 * (T/F) APlottedShuttleView is an observer of PlottedShuttleModel.
 * (T/F) APlottedShuttleKeyController is an observer of APlottedShuttleView.
 * 
 * (T/F) An observer cannot be an observable
 * 
 * 
 */

]]></snapshot>
  </Command>
  <Command __id="665" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:29:41 EDT 2021" docASTNodeCount="139" docActiveCodeLength="892" docExpressionCount="81" docLength="2052" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1008500">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleMouseController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleMouseController implements MouseListener {¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public APlottedShuttleMouseController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		/*¶		 * Instead of making the controller an action listener (observer)¶		 * we make it a listener of mouse events¶		 */¶		shuttleComponent.addMouseListener(this);¶	}¶/*¶ * APlottedShuttleMouseController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	// This mouse event we care about¶	// The mouse click notification method¶	public void mouseClicked(MouseEvent e) {¶    	System.out.println ("Mouse clicked:");¶¶		plottedShuttle.setShuttleX(0);¶		plottedShuttle.setShuttleY(0);		¶	}    ¶	public void mouseEntered(MouseEvent e) {}¶	public void mouseExited(MouseEvent e) {}¶	public void mousePressed(MouseEvent e) {}¶	public void mouseReleased(MouseEvent e) {}	¶}¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleMouseController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleMouseController is called¶ * ¶ * To answer the question above, look at mouseClicked and if necessary,  again:¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * (T/F) An instance of APlottedShuttleMouseController knows about, that is,¶ * has a reference to an instance of APlottedKeyController.¶ * ¶ * (T/F) Controllers of the same model can be independent of each other.¶ * ¶ * Return to PlottedShuttleComposer¶ */¶")]]]></diff>
  </Command>
  <Command __id="668" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:29:42 EDT 2021" docASTNodeCount="154" docActiveCodeLength="1032" docExpressionCount="88" docLength="2879" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1009880">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleKeyController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶¶¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleKeyController ¶	implements KeyListener { // Defined by Java¶/*¶ * APlottedShuttleKeyController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public static final int TARGET_X = 100;¶	public static final int TARGET_Y = 100;	¶	/*¶	 * Study what this method does¶	 */¶	public APlottedShuttleKeyController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		shuttleComponent.addKeyListener(this);¶	}¶/*¶ * Remember listener == observer¶ * ¶ * (T/F) APlottedShuttleKeyController is an observer of a widget.¶ * ¶ */¶	¶	// This key event our controller cares about¶	// This is also a notification method¶    public void keyTyped(KeyEvent e) {¶    	char typedChar = e.getKeyChar();¶    	System.out.println ("Key typed:" + typedChar);¶    	switch (typedChar) {¶    	case 'x' :¶    		plottedShuttle.setShuttleX(TARGET_X);¶    		break;¶    	case 'y':¶    		plottedShuttle.setShuttleY(TARGET_Y);¶    		break;¶    	}    ¶	}	¶	// These it does not¶	public void keyPressed(KeyEvent e) {}¶	public void keyReleased(KeyEvent e) {}	¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleKeyController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleKeyController is called.¶ * ¶ * To answer the question above, look at keyTyped and if necessary,  again the¶ * console¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * Look at the constructor.¶ * ¶ * Listener = Observer¶ *  ¶ * Look at the method keyTyped¶ *  ¶ * (T/F) APlottedShuttleKeyController calls methods in its model in response¶ * to the typing of a key.¶ *¶ * keyTyped is a notification method¶ * ¶ * What is consistent with this example:¶ * ¶ * In graphics-based MVC, where the view is a widget(Component), user input causes:¶ *  (a) The controller to call notification methods in the view.¶ *  (b) The view (widget) to call notification methods in the controller.¶ *  (c) The controller to call write methods in the model.¶ *  (d) The controller to call read methods in the model.¶ *  (e) The model to call notification methods in the controller.¶ *  (f) The model to call notification methods in the view.¶ *  (g) None of the above¶ *  ¶¶ *  ¶ *  ¶ * ¶ *  ¶ * ¶ * Next class APlottedShuttleMouseController¶ */¶}¶")]]]></diff>
  </Command>
  <Command __id="671" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:29:47 EDT 2021" docASTNodeCount="244" docActiveCodeLength="1813" docExpressionCount="163" docLength="1996" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1014777">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/AnObservablePlottedShuttle.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import lectures.composite.objects_shapes.APlottedShuttle;¶import lectures.mvc.properties.AnObservableImageWithHeight;¶import lectures.mvc.properties.PropertyListenerSupport;¶import lectures.mvc.properties.atomic.APropertyListenerSupport;¶import bus.uigen.ObjectEditor;¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class AnObservablePlottedShuttle extends APlottedShuttle implements ObservablePlottedShuttle {¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();	¶	public AnObservablePlottedShuttle(int anX, int aY) {¶		super(anX, aY);¶		cartesianPlane = new AnObservableCartesianPlane (¶				AXES_LENGTH, ORIGIN_X, ORIGIN_Y);¶		shuttleImage = new AnObservableImageWithHeight(SHUTTLE_IMAGE_FILE_NAME);¶//		propertySupport = new APropertyListenerSupport();	¶		setShuttleX(anX);¶		setShuttleY(aY);¶	}¶	public void setShuttleX(int newVal) {¶		int oldVal = getShuttleX();¶		super.setShuttleX(newVal);¶		if (propertySupport != null) //why this check? Can we change super class so this check is not made¶		  propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ShuttleX", oldVal,¶				newVal));¶	}¶	public void setShuttleY(int newVal) {¶		int oldVal = getShuttleY();¶		super.setShuttleY(newVal);¶		if (propertySupport != null) //why this check?¶		  propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ShuttleY", oldVal,¶				newVal));¶	}¶	public void addPropertyChangeListener(PropertyChangeListener listener) {¶		propertySupport.add(listener);		¶	}¶	public static void main (String[] args) {¶		ObservablePlottedShuttle shuttleLocation = new AnObservablePlottedShuttle(50, 100);	¶		ObjectEditor.edit(shuttleLocation);¶		shuttleLocation.setShuttleY(50);¶		shuttleLocation.setShuttleX(100);¶	}¶¶}¶/*¶ * Next class PlottedShuttleComposer¶ */¶")]]]></diff>
  </Command>
  <Command __id="674" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:29:54 EDT 2021" docASTNodeCount="154" docActiveCodeLength="1032" docExpressionCount="88" docLength="2879" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1021566">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleKeyController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶¶¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleKeyController ¶	implements KeyListener { // Defined by Java¶/*¶ * APlottedShuttleKeyController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public static final int TARGET_X = 100;¶	public static final int TARGET_Y = 100;	¶	/*¶	 * Study what this method does¶	 */¶	public APlottedShuttleKeyController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		shuttleComponent.addKeyListener(this);¶	}¶/*¶ * Remember listener == observer¶ * ¶ * (T/F) APlottedShuttleKeyController is an observer of a widget.¶ * ¶ */¶	¶	// This key event our controller cares about¶	// This is also a notification method¶    public void keyTyped(KeyEvent e) {¶    	char typedChar = e.getKeyChar();¶    	System.out.println ("Key typed:" + typedChar);¶    	switch (typedChar) {¶    	case 'x' :¶    		plottedShuttle.setShuttleX(TARGET_X);¶    		break;¶    	case 'y':¶    		plottedShuttle.setShuttleY(TARGET_Y);¶    		break;¶    	}    ¶	}	¶	// These it does not¶	public void keyPressed(KeyEvent e) {}¶	public void keyReleased(KeyEvent e) {}	¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleKeyController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleKeyController is called.¶ * ¶ * To answer the question above, look at keyTyped and if necessary,  again the¶ * console¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * Look at the constructor.¶ * ¶ * Listener = Observer¶ *  ¶ * Look at the method keyTyped¶ *  ¶ * (T/F) APlottedShuttleKeyController calls methods in its model in response¶ * to the typing of a key.¶ *¶ * keyTyped is a notification method¶ * ¶ * What is consistent with this example:¶ * ¶ * In graphics-based MVC, where the view is a widget(Component), user input causes:¶ *  (a) The controller to call notification methods in the view.¶ *  (b) The view (widget) to call notification methods in the controller.¶ *  (c) The controller to call write methods in the model.¶ *  (d) The controller to call read methods in the model.¶ *  (e) The model to call notification methods in the controller.¶ *  (f) The model to call notification methods in the view.¶ *  (g) None of the above¶ *  ¶¶ *  ¶ *  ¶ * ¶ *  ¶ * ¶ * Next class APlottedShuttleMouseController¶ */¶}¶")]]]></diff>
  </Command>
  <Command __id="677" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:29:55 EDT 2021" docASTNodeCount="139" docActiveCodeLength="892" docExpressionCount="81" docLength="2052" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1022805">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleMouseController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleMouseController implements MouseListener {¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public APlottedShuttleMouseController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		/*¶		 * Instead of making the controller an action listener (observer)¶		 * we make it a listener of mouse events¶		 */¶		shuttleComponent.addMouseListener(this);¶	}¶/*¶ * APlottedShuttleMouseController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	// This mouse event we care about¶	// The mouse click notification method¶	public void mouseClicked(MouseEvent e) {¶    	System.out.println ("Mouse clicked:");¶¶		plottedShuttle.setShuttleX(0);¶		plottedShuttle.setShuttleY(0);		¶	}    ¶	public void mouseEntered(MouseEvent e) {}¶	public void mouseExited(MouseEvent e) {}¶	public void mousePressed(MouseEvent e) {}¶	public void mouseReleased(MouseEvent e) {}	¶}¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleMouseController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleMouseController is called¶ * ¶ * To answer the question above, look at mouseClicked and if necessary,  again:¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * (T/F) An instance of APlottedShuttleMouseController knows about, that is,¶ * has a reference to an instance of APlottedKeyController.¶ * ¶ * (T/F) Controllers of the same model can be independent of each other.¶ * ¶ * Return to PlottedShuttleComposer¶ */¶")]]]></diff>
  </Command>
  <Command __id="680" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:29:59 EDT 2021" docASTNodeCount="154" docActiveCodeLength="1032" docExpressionCount="105" docLength="1609" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1026598">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.Toolkit;¶import java.beans.PropertyChangeListener;¶¶import lectures.composite.objects_shapes_extra.ImageWithHeight;¶¶public class APlottedShuttleView extends ACartesianPlaneView implements PropertyChangeListener { ¶/*   ¶ *  APlottedShuttleView IS-A:¶ *     (a) JFrame¶ *     (b) Component¶ *     (c) None of the above¶ *     ¶ *  (T/F) APlottedShuttleView IS-A PropertyChangeListener.	¶ */¶	ObservablePlottedShuttle plottedShuttle;	¶	public APlottedShuttleView(ObservablePlottedShuttle aPlottedShuttle) {¶		// can we get rid of the cast while still doing reuse?¶		super((ObservableCartesianPlane) aPlottedShuttle.getCartesianPlane());¶		plottedShuttle = aPlottedShuttle;¶		setFocusable(true); // allow component to get keyboard focus¶	}		¶	public void paint(Graphics g) {¶		super.paint(g);¶		System.out.println ("Paint called in APLottedShuttleView");¶		Graphics2D g2 = (Graphics2D) g;¶		draw(g2, plottedShuttle.getShuttleImage());¶	}¶	public  void draw(Graphics2D g, ImageWithHeight anImage) {¶		Image img = Toolkit.getDefaultToolkit().getImage(anImage.getImageFileName());¶		g.drawImage(img, anImage.getX(), anImage.getY(), this);		¶	}¶	¶}¶/*¶ * (APlottedShuttleView:¶ *  (a) inherits paint()¶ *  (b) overrides  paint();¶ *  (c) None of the above¶ *  ¶ * ¶ * APlottedShuttleView:¶ * (a) inherits propertyChange()¶ * (b) overrides propertyChange()¶ * (c) None of the above¶ * ¶ *¶ * Return to PlottedShuttleComposer (ALT <-)¶ */¶")]]]></diff>
  </Command>
  <Command __id="683" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:30:02 EDT 2021" docASTNodeCount="139" docActiveCodeLength="892" docExpressionCount="81" docLength="2052" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1029827">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleMouseController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleMouseController implements MouseListener {¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public APlottedShuttleMouseController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		/*¶		 * Instead of making the controller an action listener (observer)¶		 * we make it a listener of mouse events¶		 */¶		shuttleComponent.addMouseListener(this);¶	}¶/*¶ * APlottedShuttleMouseController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	// This mouse event we care about¶	// The mouse click notification method¶	public void mouseClicked(MouseEvent e) {¶    	System.out.println ("Mouse clicked:");¶¶		plottedShuttle.setShuttleX(0);¶		plottedShuttle.setShuttleY(0);		¶	}    ¶	public void mouseEntered(MouseEvent e) {}¶	public void mouseExited(MouseEvent e) {}¶	public void mousePressed(MouseEvent e) {}¶	public void mouseReleased(MouseEvent e) {}	¶}¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleMouseController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleMouseController is called¶ * ¶ * To answer the question above, look at mouseClicked and if necessary,  again:¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * (T/F) An instance of APlottedShuttleMouseController knows about, that is,¶ * has a reference to an instance of APlottedKeyController.¶ * ¶ * (T/F) Controllers of the same model can be independent of each other.¶ * ¶ * Return to PlottedShuttleComposer¶ */¶")]]]></diff>
  </Command>
  <Command __id="686" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:30:05 EDT 2021" docASTNodeCount="154" docActiveCodeLength="1032" docExpressionCount="88" docLength="2879" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1032236">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleKeyController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶¶¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleKeyController ¶	implements KeyListener { // Defined by Java¶/*¶ * APlottedShuttleKeyController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public static final int TARGET_X = 100;¶	public static final int TARGET_Y = 100;	¶	/*¶	 * Study what this method does¶	 */¶	public APlottedShuttleKeyController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		shuttleComponent.addKeyListener(this);¶	}¶/*¶ * Remember listener == observer¶ * ¶ * (T/F) APlottedShuttleKeyController is an observer of a widget.¶ * ¶ */¶	¶	// This key event our controller cares about¶	// This is also a notification method¶    public void keyTyped(KeyEvent e) {¶    	char typedChar = e.getKeyChar();¶    	System.out.println ("Key typed:" + typedChar);¶    	switch (typedChar) {¶    	case 'x' :¶    		plottedShuttle.setShuttleX(TARGET_X);¶    		break;¶    	case 'y':¶    		plottedShuttle.setShuttleY(TARGET_Y);¶    		break;¶    	}    ¶	}	¶	// These it does not¶	public void keyPressed(KeyEvent e) {}¶	public void keyReleased(KeyEvent e) {}	¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleKeyController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleKeyController is called.¶ * ¶ * To answer the question above, look at keyTyped and if necessary,  again the¶ * console¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * Look at the constructor.¶ * ¶ * Listener = Observer¶ *  ¶ * Look at the method keyTyped¶ *  ¶ * (T/F) APlottedShuttleKeyController calls methods in its model in response¶ * to the typing of a key.¶ *¶ * keyTyped is a notification method¶ * ¶ * What is consistent with this example:¶ * ¶ * In graphics-based MVC, where the view is a widget(Component), user input causes:¶ *  (a) The controller to call notification methods in the view.¶ *  (b) The view (widget) to call notification methods in the controller.¶ *  (c) The controller to call write methods in the model.¶ *  (d) The controller to call read methods in the model.¶ *  (e) The model to call notification methods in the controller.¶ *  (f) The model to call notification methods in the view.¶ *  (g) None of the above¶ *  ¶¶ *  ¶ *  ¶ * ¶ *  ¶ * ¶ * Next class APlottedShuttleMouseController¶ */¶}¶")]]]></diff>
  </Command>
  <Command __id="689" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:30:06 EDT 2021" docASTNodeCount="139" docActiveCodeLength="892" docExpressionCount="81" docLength="2052" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1033653">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleMouseController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleMouseController implements MouseListener {¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public APlottedShuttleMouseController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		/*¶		 * Instead of making the controller an action listener (observer)¶		 * we make it a listener of mouse events¶		 */¶		shuttleComponent.addMouseListener(this);¶	}¶/*¶ * APlottedShuttleMouseController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	// This mouse event we care about¶	// The mouse click notification method¶	public void mouseClicked(MouseEvent e) {¶    	System.out.println ("Mouse clicked:");¶¶		plottedShuttle.setShuttleX(0);¶		plottedShuttle.setShuttleY(0);		¶	}    ¶	public void mouseEntered(MouseEvent e) {}¶	public void mouseExited(MouseEvent e) {}¶	public void mousePressed(MouseEvent e) {}¶	public void mouseReleased(MouseEvent e) {}	¶}¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleMouseController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleMouseController is called¶ * ¶ * To answer the question above, look at mouseClicked and if necessary,  again:¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * (T/F) An instance of APlottedShuttleMouseController knows about, that is,¶ * has a reference to an instance of APlottedKeyController.¶ * ¶ * (T/F) Controllers of the same model can be independent of each other.¶ * ¶ * Return to PlottedShuttleComposer¶ */¶")]]]></diff>
  </Command>
  <Command __id="692" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:30:09 EDT 2021" docASTNodeCount="240" docActiveCodeLength="1627" docExpressionCount="140" docLength="3672" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1036384">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/PlottedShuttleComposer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶/**¶ * ¶ * WINWDOW-BASED CONTROLLER¶ * ¶ * Again we will draw our own graphics. ¶ * ¶ * We will also learn how to intercept raw key and mouse events by defining ¶ * two independent window based controllers.¶ * ¶ * In addition, we will learn to subclass our custom graphics view from the previous exercise.¶ * To do so, we will work with a plotted shuttle instead of a Cartesian plane¶ * ¶ * Study  the program.¶ * ¶ */¶¶public class PlottedShuttleComposer {¶	static final int CUSTOM_FRAME_WIDTH = 400;¶	static final int CUSTOM_FRAME_HEIGHT = 300;¶	static final int OE_FRAME_WIDTH = 400;¶	static final int OE_FRAME_HEIGHT = 600;¶	static final int INIT_SHUTTLE_X = 25;¶	static final int INIT_SHUTTLE_Y = 50;¶¶	static final int FINAL_SHUTTLE_X = 50;¶	static final int FINAL_SHUTTLE_Y = 100;¶	¶	public static void composeShuttleMVC(ObservablePlottedShuttle aPlottedShuttle) {¶		PropertyChangeListener view = new APlottedShuttleView(aPlottedShuttle);¶		aPlottedShuttle.addPropertyChangeListener(view);¶		/*¶		 * This time we create two controllers also¶		 * They will listener to events from the view, so they need the views in¶		 *  their constructors		  ¶		 */¶		MouseListener aMouseController = new APlottedShuttleMouseController(aPlottedShuttle, (Component) view);¶		KeyListener aKeyController = new APlottedShuttleKeyController(aPlottedShuttle, (Component) view);¶		JFrame aFrame = new JFrame("Plotted Shuttle");¶		aFrame.add((Component) view);¶		aFrame.setSize(CUSTOM_FRAME_WIDTH, CUSTOM_FRAME_HEIGHT);¶		aFrame.setVisible(true);¶	}¶	public static void main(String[] args) {		¶		ObservablePlottedShuttle aPlottedShuttle = new AnObservablePlottedShuttle(INIT_SHUTTLE_X, INIT_SHUTTLE_Y);		¶		composeShuttleMVC(aPlottedShuttle);¶		OEFrame anOEFrame = ObjectEditor.edit(aPlottedShuttle);	¶		anOEFrame.setSize(OE_FRAME_WIDTH, OE_FRAME_HEIGHT);¶		aPlottedShuttle.setShuttleX(FINAL_SHUTTLE_X);¶		aPlottedShuttle.setShuttleY(FINAL_SHUTTLE_Y);¶	}¶}¶¶/*¶ * Run the program.¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ * ¶ * Go to APlottedShuttleView and answer the questions there¶ * ¶ * Look at the console output¶ * ¶ * When the plotted shuttle model changes, ¶ *    (a) the repaint() method is called by code contained in APlottedShuttleView¶ *    (b) the repaint() method is called by code contained in ACartesianPlaneView¶ *    (c) the paint() method implemented in APlottedShuttleView is called¶ *    (d) the paint method implemented in ACartesianPlaneView is called¶ *    (e) None of the above¶ *    ¶ *Given a component c of class C, when the component needs to be redrawn, a paint()¶ *methods implemented by ¶ *   (a) class C should be called¶ *   (b) all superclasses of C should be called¶ *   (c) None of the above¶ *    ¶ * Go to APlottedShuttleKeyController and answer the questions there¶ * ¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single custom¶ *      (non ObjectEditor) view.¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single ¶ * 		(non ObjectEditor) controller.¶ * ¶ * (T/F) APlottedShuttleView is an observer of PlottedShuttleModel.¶ * (T/F) APlottedShuttleKeyController is an observer of APlottedShuttleView.¶ * ¶ * (T/F) An observer cannot be an observable¶ * ¶ * ¶ */¶¶")]]]></diff>
  </Command>
  <Command __id="695" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:30:11 EDT 2021" docASTNodeCount="28" docActiveCodeLength="234" docExpressionCount="20" docLength="234" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1038242">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/ObservablePlottedShuttle.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶import util.models.PropertyListenerRegisterer;¶¶public interface ObservablePlottedShuttle extends PlottedShuttle, PropertyListenerRegisterer{¶¶}¶")]]]></diff>
  </Command>
  <Command __id="698" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:30:12 EDT 2021" docASTNodeCount="240" docActiveCodeLength="1627" docExpressionCount="140" docLength="3672" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1039974">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/PlottedShuttleComposer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶/**¶ * ¶ * WINWDOW-BASED CONTROLLER¶ * ¶ * Again we will draw our own graphics. ¶ * ¶ * We will also learn how to intercept raw key and mouse events by defining ¶ * two independent window based controllers.¶ * ¶ * In addition, we will learn to subclass our custom graphics view from the previous exercise.¶ * To do so, we will work with a plotted shuttle instead of a Cartesian plane¶ * ¶ * Study  the program.¶ * ¶ */¶¶public class PlottedShuttleComposer {¶	static final int CUSTOM_FRAME_WIDTH = 400;¶	static final int CUSTOM_FRAME_HEIGHT = 300;¶	static final int OE_FRAME_WIDTH = 400;¶	static final int OE_FRAME_HEIGHT = 600;¶	static final int INIT_SHUTTLE_X = 25;¶	static final int INIT_SHUTTLE_Y = 50;¶¶	static final int FINAL_SHUTTLE_X = 50;¶	static final int FINAL_SHUTTLE_Y = 100;¶	¶	public static void composeShuttleMVC(ObservablePlottedShuttle aPlottedShuttle) {¶		PropertyChangeListener view = new APlottedShuttleView(aPlottedShuttle);¶		aPlottedShuttle.addPropertyChangeListener(view);¶		/*¶		 * This time we create two controllers also¶		 * They will listener to events from the view, so they need the views in¶		 *  their constructors		  ¶		 */¶		MouseListener aMouseController = new APlottedShuttleMouseController(aPlottedShuttle, (Component) view);¶		KeyListener aKeyController = new APlottedShuttleKeyController(aPlottedShuttle, (Component) view);¶		JFrame aFrame = new JFrame("Plotted Shuttle");¶		aFrame.add((Component) view);¶		aFrame.setSize(CUSTOM_FRAME_WIDTH, CUSTOM_FRAME_HEIGHT);¶		aFrame.setVisible(true);¶	}¶	public static void main(String[] args) {		¶		ObservablePlottedShuttle aPlottedShuttle = new AnObservablePlottedShuttle(INIT_SHUTTLE_X, INIT_SHUTTLE_Y);		¶		composeShuttleMVC(aPlottedShuttle);¶		OEFrame anOEFrame = ObjectEditor.edit(aPlottedShuttle);	¶		anOEFrame.setSize(OE_FRAME_WIDTH, OE_FRAME_HEIGHT);¶		aPlottedShuttle.setShuttleX(FINAL_SHUTTLE_X);¶		aPlottedShuttle.setShuttleY(FINAL_SHUTTLE_Y);¶	}¶}¶¶/*¶ * Run the program.¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ * ¶ * Go to APlottedShuttleView and answer the questions there¶ * ¶ * Look at the console output¶ * ¶ * When the plotted shuttle model changes, ¶ *    (a) the repaint() method is called by code contained in APlottedShuttleView¶ *    (b) the repaint() method is called by code contained in ACartesianPlaneView¶ *    (c) the paint() method implemented in APlottedShuttleView is called¶ *    (d) the paint method implemented in ACartesianPlaneView is called¶ *    (e) None of the above¶ *    ¶ *Given a component c of class C, when the component needs to be redrawn, a paint()¶ *methods implemented by ¶ *   (a) class C should be called¶ *   (b) all superclasses of C should be called¶ *   (c) None of the above¶ *    ¶ * Go to APlottedShuttleKeyController and answer the questions there¶ * ¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single custom¶ *      (non ObjectEditor) view.¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single ¶ * 		(non ObjectEditor) controller.¶ * ¶ * (T/F) APlottedShuttleView is an observer of PlottedShuttleModel.¶ * (T/F) APlottedShuttleKeyController is an observer of APlottedShuttleView.¶ * ¶ * (T/F) An observer cannot be an observable¶ * ¶ * ¶ */¶¶")]]]></diff>
  </Command>
  <Command __id="705" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:30:24 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1701" docExpressionCount="145" docLength="1701" projectName="grailA3" starttimestamp="1623298372811" timestamp="1051792">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static BridgeSceneController bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static BridgeSceneController bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="707" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:12 EDT 2021" docASTNodeCount="240" docActiveCodeLength="1627" docExpressionCount="140" docLength="3672" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1099555">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/PlottedShuttleComposer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶/**¶ * ¶ * WINWDOW-BASED CONTROLLER¶ * ¶ * Again we will draw our own graphics. ¶ * ¶ * We will also learn how to intercept raw key and mouse events by defining ¶ * two independent window based controllers.¶ * ¶ * In addition, we will learn to subclass our custom graphics view from the previous exercise.¶ * To do so, we will work with a plotted shuttle instead of a Cartesian plane¶ * ¶ * Study  the program.¶ * ¶ */¶¶public class PlottedShuttleComposer {¶	static final int CUSTOM_FRAME_WIDTH = 400;¶	static final int CUSTOM_FRAME_HEIGHT = 300;¶	static final int OE_FRAME_WIDTH = 400;¶	static final int OE_FRAME_HEIGHT = 600;¶	static final int INIT_SHUTTLE_X = 25;¶	static final int INIT_SHUTTLE_Y = 50;¶¶	static final int FINAL_SHUTTLE_X = 50;¶	static final int FINAL_SHUTTLE_Y = 100;¶	¶	public static void composeShuttleMVC(ObservablePlottedShuttle aPlottedShuttle) {¶		PropertyChangeListener view = new APlottedShuttleView(aPlottedShuttle);¶		aPlottedShuttle.addPropertyChangeListener(view);¶		/*¶		 * This time we create two controllers also¶		 * They will listener to events from the view, so they need the views in¶		 *  their constructors		  ¶		 */¶		MouseListener aMouseController = new APlottedShuttleMouseController(aPlottedShuttle, (Component) view);¶		KeyListener aKeyController = new APlottedShuttleKeyController(aPlottedShuttle, (Component) view);¶		JFrame aFrame = new JFrame("Plotted Shuttle");¶		aFrame.add((Component) view);¶		aFrame.setSize(CUSTOM_FRAME_WIDTH, CUSTOM_FRAME_HEIGHT);¶		aFrame.setVisible(true);¶	}¶	public static void main(String[] args) {		¶		ObservablePlottedShuttle aPlottedShuttle = new AnObservablePlottedShuttle(INIT_SHUTTLE_X, INIT_SHUTTLE_Y);		¶		composeShuttleMVC(aPlottedShuttle);¶		OEFrame anOEFrame = ObjectEditor.edit(aPlottedShuttle);	¶		anOEFrame.setSize(OE_FRAME_WIDTH, OE_FRAME_HEIGHT);¶		aPlottedShuttle.setShuttleX(FINAL_SHUTTLE_X);¶		aPlottedShuttle.setShuttleY(FINAL_SHUTTLE_Y);¶	}¶}¶¶/*¶ * Run the program.¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ * ¶ * Go to APlottedShuttleView and answer the questions there¶ * ¶ * Look at the console output¶ * ¶ * When the plotted shuttle model changes, ¶ *    (a) the repaint() method is called by code contained in APlottedShuttleView¶ *    (b) the repaint() method is called by code contained in ACartesianPlaneView¶ *    (c) the paint() method implemented in APlottedShuttleView is called¶ *    (d) the paint method implemented in ACartesianPlaneView is called¶ *    (e) None of the above¶ *    ¶ *Given a component c of class C, when the component needs to be redrawn, a paint()¶ *methods implemented by ¶ *   (a) class C should be called¶ *   (b) all superclasses of C should be called¶ *   (c) None of the above¶ *    ¶ * Go to APlottedShuttleKeyController and answer the questions there¶ * ¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single custom¶ *      (non ObjectEditor) view.¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single ¶ * 		(non ObjectEditor) controller.¶ * ¶ * (T/F) APlottedShuttleView is an observer of PlottedShuttleModel.¶ * (T/F) APlottedShuttleKeyController is an observer of APlottedShuttleView.¶ * ¶ * (T/F) An observer cannot be an observable¶ * ¶ * ¶ */¶¶")]]]></diff>
  </Command>
  <Command __id="710" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:24 EDT 2021" docASTNodeCount="139" docActiveCodeLength="892" docExpressionCount="81" docLength="2052" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1111345">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/APlottedShuttleMouseController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import lectures.composite.objects_shapes.PlottedShuttle;¶¶public class APlottedShuttleMouseController implements MouseListener {¶	Component shuttleComponent;¶	PlottedShuttle plottedShuttle;¶	public APlottedShuttleMouseController (PlottedShuttle aPlottedShuttle, Component aShuttleComponent) {¶		shuttleComponent = aShuttleComponent;¶		plottedShuttle = aPlottedShuttle;¶		/*¶		 * Instead of making the controller an action listener (observer)¶		 * we make it a listener of mouse events¶		 */¶		shuttleComponent.addMouseListener(this);¶	}¶/*¶ * APlottedShuttleMouseController IS-A¶ *    (a) Component¶ *    (b) KeyListener¶ *    (c) MouseListener¶ *    (d) None of the above¶ */¶	// This mouse event we care about¶	// The mouse click notification method¶	public void mouseClicked(MouseEvent e) {¶    	System.out.println ("Mouse clicked:");¶¶		plottedShuttle.setShuttleX(0);¶		plottedShuttle.setShuttleY(0);		¶	}    ¶	public void mouseEntered(MouseEvent e) {}¶	public void mouseExited(MouseEvent e) {}¶	public void mousePressed(MouseEvent e) {}¶	public void mouseReleased(MouseEvent e) {}	¶}¶/*¶ * Look at the Console output and if necessary, to again:¶ *  ¶ * ¶ * (T/F) When the left mouse button is pressed a method in APlottedShuttleMouseController¶ * is called.¶ * (T/F) When a key is pressed, a method in APlottedShuttleMouseController is called¶ * ¶ * To answer the question above, look at mouseClicked and if necessary,  again:¶ * ¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ *  ¶ * (T/F) An instance of APlottedShuttleMouseController knows about, that is,¶ * has a reference to an instance of APlottedKeyController.¶ * ¶ * (T/F) Controllers of the same model can be independent of each other.¶ * ¶ * Return to PlottedShuttleComposer¶ */¶")]]]></diff>
  </Command>
  <Command __id="713" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:27 EDT 2021" docASTNodeCount="240" docActiveCodeLength="1627" docExpressionCount="140" docLength="3672" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1114719">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/PlottedShuttleComposer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶/**¶ * ¶ * WINWDOW-BASED CONTROLLER¶ * ¶ * Again we will draw our own graphics. ¶ * ¶ * We will also learn how to intercept raw key and mouse events by defining ¶ * two independent window based controllers.¶ * ¶ * In addition, we will learn to subclass our custom graphics view from the previous exercise.¶ * To do so, we will work with a plotted shuttle instead of a Cartesian plane¶ * ¶ * Study  the program.¶ * ¶ */¶¶public class PlottedShuttleComposer {¶	static final int CUSTOM_FRAME_WIDTH = 400;¶	static final int CUSTOM_FRAME_HEIGHT = 300;¶	static final int OE_FRAME_WIDTH = 400;¶	static final int OE_FRAME_HEIGHT = 600;¶	static final int INIT_SHUTTLE_X = 25;¶	static final int INIT_SHUTTLE_Y = 50;¶¶	static final int FINAL_SHUTTLE_X = 50;¶	static final int FINAL_SHUTTLE_Y = 100;¶	¶	public static void composeShuttleMVC(ObservablePlottedShuttle aPlottedShuttle) {¶		PropertyChangeListener view = new APlottedShuttleView(aPlottedShuttle);¶		aPlottedShuttle.addPropertyChangeListener(view);¶		/*¶		 * This time we create two controllers also¶		 * They will listener to events from the view, so they need the views in¶		 *  their constructors		  ¶		 */¶		MouseListener aMouseController = new APlottedShuttleMouseController(aPlottedShuttle, (Component) view);¶		KeyListener aKeyController = new APlottedShuttleKeyController(aPlottedShuttle, (Component) view);¶		JFrame aFrame = new JFrame("Plotted Shuttle");¶		aFrame.add((Component) view);¶		aFrame.setSize(CUSTOM_FRAME_WIDTH, CUSTOM_FRAME_HEIGHT);¶		aFrame.setVisible(true);¶	}¶	public static void main(String[] args) {		¶		ObservablePlottedShuttle aPlottedShuttle = new AnObservablePlottedShuttle(INIT_SHUTTLE_X, INIT_SHUTTLE_Y);		¶		composeShuttleMVC(aPlottedShuttle);¶		OEFrame anOEFrame = ObjectEditor.edit(aPlottedShuttle);	¶		anOEFrame.setSize(OE_FRAME_WIDTH, OE_FRAME_HEIGHT);¶		aPlottedShuttle.setShuttleX(FINAL_SHUTTLE_X);¶		aPlottedShuttle.setShuttleY(FINAL_SHUTTLE_Y);¶	}¶}¶¶/*¶ * Run the program.¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ * ¶ * Go to APlottedShuttleView and answer the questions there¶ * ¶ * Look at the console output¶ * ¶ * When the plotted shuttle model changes, ¶ *    (a) the repaint() method is called by code contained in APlottedShuttleView¶ *    (b) the repaint() method is called by code contained in ACartesianPlaneView¶ *    (c) the paint() method implemented in APlottedShuttleView is called¶ *    (d) the paint method implemented in ACartesianPlaneView is called¶ *    (e) None of the above¶ *    ¶ *Given a component c of class C, when the component needs to be redrawn, a paint()¶ *methods implemented by ¶ *   (a) class C should be called¶ *   (b) all superclasses of C should be called¶ *   (c) None of the above¶ *    ¶ * Go to APlottedShuttleKeyController and answer the questions there¶ * ¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single custom¶ *      (non ObjectEditor) view.¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single ¶ * 		(non ObjectEditor) controller.¶ * ¶ * (T/F) APlottedShuttleView is an observer of PlottedShuttleModel.¶ * (T/F) APlottedShuttleKeyController is an observer of APlottedShuttleView.¶ * ¶ * (T/F) An observer cannot be an observable¶ * ¶ * ¶ */¶¶")]]]></diff>
  </Command>
  <Command __id="717" _type="PauseCommand" date="Thu Jun 10 00:31:29 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1117128">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2304]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="718" _type="MoveCaretCommand" caretOffset="3988" date="Thu Jun 10 00:31:30 EDT 2021" docOffset="4685" starttimestamp="1623298372811" timestamp="1117251" />
  <Command __id="720" _type="PauseCommand" date="Thu Jun 10 00:31:31 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1119104">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1853]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="721" _type="MoveCaretCommand" caretOffset="1224" date="Thu Jun 10 00:31:32 EDT 2021" docOffset="1545" starttimestamp="1623298372811" timestamp="1119213" />
  <Command __id="723" _type="PauseCommand" date="Thu Jun 10 00:31:34 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1121702">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2489]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="724" _type="MoveCaretCommand" caretOffset="1931" date="Thu Jun 10 00:31:34 EDT 2021" docOffset="2251" starttimestamp="1623298372811" timestamp="1121835" />
  <Command __id="726" _type="MoveCaretCommand" caretOffset="3988" date="Thu Jun 10 00:31:35 EDT 2021" docOffset="4685" starttimestamp="1623298372811" timestamp="1122742" />
  <Command __id="728" _type="MoveCaretCommand" caretOffset="1224" date="Thu Jun 10 00:31:36 EDT 2021" docOffset="1545" starttimestamp="1623298372811" timestamp="1123470" />
  <Command __id="730" _type="PauseCommand" date="Thu Jun 10 00:31:40 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1127673">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4203]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="729" _type="MoveCaretCommand" caretOffset="1160" date="Thu Jun 10 00:31:40 EDT 2021" docOffset="1481" starttimestamp="1623298372811" timestamp="1127673" />
  <Command __id="731" _type="MoveCaretCommand" caretOffset="1160" date="Thu Jun 10 00:31:40 EDT 2021" docOffset="1481" starttimestamp="1623298372811" timestamp="1127674" />
  <Command __id="733" _type="PauseCommand" date="Thu Jun 10 00:31:44 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1131906">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4231]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="734" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:44 EDT 2021" starttimestamp="1623298372811" timestamp="1131910" />
  <Command __id="735" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:44 EDT 2021" starttimestamp="1623298372811" timestamp="1131910" />
  <Command __id="737" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:44 EDT 2021" starttimestamp="1623298372811" timestamp="1132143" />
  <Command __id="738" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:44 EDT 2021" starttimestamp="1623298372811" timestamp="1132143" />
  <Command __id="740" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1132278" />
  <Command __id="741" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1132278" />
  <Command __id="743" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1132449" />
  <Command __id="744" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1132449" />
  <Command __id="746" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1132606" />
  <Command __id="747" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1132607" />
  <Command __id="749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1133108" />
  <Command __id="750" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:45 EDT 2021" starttimestamp="1623298372811" timestamp="1133108" />
  <Command __id="752" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133192" />
  <Command __id="753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133192" />
  <Command __id="755" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133276" />
  <Command __id="756" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133276" />
  <Command __id="758" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133360" />
  <Command __id="759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133360" />
  <Command __id="761" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133444" />
  <Command __id="762" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133444" />
  <Command __id="764" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133528" />
  <Command __id="765" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133529" />
  <Command __id="767" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133612" />
  <Command __id="768" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133612" />
  <Command __id="770" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133696" />
  <Command __id="771" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133696" />
  <Command __id="773" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133779" />
  <Command __id="774" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133779" />
  <Command __id="776" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133975" />
  <Command __id="777" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1133976" />
  <Command __id="779" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1134133" />
  <Command __id="780" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:46 EDT 2021" starttimestamp="1623298372811" timestamp="1134133" />
  <Command __id="782" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:47 EDT 2021" starttimestamp="1623298372811" timestamp="1134361" />
  <Command __id="783" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:47 EDT 2021" starttimestamp="1623298372811" timestamp="1134362" />
  <Command __id="785" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:47 EDT 2021" starttimestamp="1623298372811" timestamp="1134564" />
  <Command __id="786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:47 EDT 2021" starttimestamp="1623298372811" timestamp="1134564" />
  <Command __id="788" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:47 EDT 2021" starttimestamp="1623298372811" timestamp="1134785" />
  <Command __id="789" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:47 EDT 2021" starttimestamp="1623298372811" timestamp="1134786" />
  <Command __id="791" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:48 EDT 2021" starttimestamp="1623298372811" timestamp="1135193" />
  <Command __id="792" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:48 EDT 2021" starttimestamp="1623298372811" timestamp="1135193" />
  <Command __id="794" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:48 EDT 2021" starttimestamp="1623298372811" timestamp="1135596" />
  <Command __id="795" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:31:48 EDT 2021" starttimestamp="1623298372811" timestamp="1135596" />
  <Command __id="797" _type="PauseCommand" date="Thu Jun 10 00:31:50 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1137464">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1868]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="798" _type="InsertStringCommand" date="Thu Jun 10 00:31:50 EDT 2021" starttimestamp="1623298372811" timestamp="1137469" timestamp2="1137469">
    <data><![CDATA[K]]></data>
  </Command>
  <Command __id="799" _type="InsertStringCommand" date="Thu Jun 10 00:31:50 EDT 2021" starttimestamp="1623298372811" timestamp="1137469" timestamp2="1137469">
    <data><![CDATA[K]]></data>
  </Command>
  <Command __id="801" _type="InsertStringCommand" date="Thu Jun 10 00:31:50 EDT 2021" starttimestamp="1623298372811" timestamp="1137848" timestamp2="1137848">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="802" _type="InsertStringCommand" date="Thu Jun 10 00:31:50 EDT 2021" starttimestamp="1623298372811" timestamp="1137848" timestamp2="1137848">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="804" _type="InsertStringCommand" date="Thu Jun 10 00:31:50 EDT 2021" starttimestamp="1623298372811" timestamp="1138030" timestamp2="1138030">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="805" _type="InsertStringCommand" date="Thu Jun 10 00:31:50 EDT 2021" starttimestamp="1623298372811" timestamp="1138030" timestamp2="1138030">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="807" _type="InsertStringCommand" date="Thu Jun 10 00:31:51 EDT 2021" starttimestamp="1623298372811" timestamp="1138972" timestamp2="1138972">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="808" _type="InsertStringCommand" date="Thu Jun 10 00:31:51 EDT 2021" starttimestamp="1623298372811" timestamp="1138972" timestamp2="1138972">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="810" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139268" timestamp2="1139268">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="811" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139268" timestamp2="1139268">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="813" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139515" timestamp2="1139515">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="814" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139515" timestamp2="1139515">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="816" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139672" timestamp2="1139672">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="817" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139672" timestamp2="1139672">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="819" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139961" timestamp2="1139961">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="820" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1139961" timestamp2="1139961">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="822" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1140075" timestamp2="1140075">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="823" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1140076" timestamp2="1140076">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="825" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1140188" timestamp2="1140188">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="826" _type="InsertStringCommand" date="Thu Jun 10 00:31:52 EDT 2021" starttimestamp="1623298372811" timestamp="1140188" timestamp2="1140188">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="828" _type="InsertStringCommand" date="Thu Jun 10 00:31:53 EDT 2021" starttimestamp="1623298372811" timestamp="1140412" timestamp2="1140412">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="829" _type="InsertStringCommand" date="Thu Jun 10 00:31:53 EDT 2021" starttimestamp="1623298372811" timestamp="1140412" timestamp2="1140412">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="831" _type="PauseCommand" date="Thu Jun 10 00:31:59 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1146732">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6320]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="830" _type="SelectTextCommand" caretOffset="262" date="Thu Jun 10 00:31:59 EDT 2021" end="282" start="262" starttimestamp="1623298372811" timestamp="1146732" />
  <Command __id="832" _type="SelectTextCommand" caretOffset="262" date="Thu Jun 10 00:31:59 EDT 2021" end="282" start="262" starttimestamp="1623298372811" timestamp="1146734" />
  <Command __id="834" _type="InsertStringCommand" date="Thu Jun 10 00:32:00 EDT 2021" starttimestamp="1623298372811" timestamp="1147682" timestamp2="1147682">
    <data><![CDATA[K]]></data>
  </Command>
  <Command __id="835" _type="InsertStringCommand" date="Thu Jun 10 00:32:00 EDT 2021" starttimestamp="1623298372811" timestamp="1147682" timestamp2="1147682">
    <data><![CDATA[K]]></data>
  </Command>
  <Command __id="837" _type="InsertStringCommand" date="Thu Jun 10 00:32:00 EDT 2021" starttimestamp="1623298372811" timestamp="1148020" timestamp2="1148020">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="838" _type="InsertStringCommand" date="Thu Jun 10 00:32:00 EDT 2021" starttimestamp="1623298372811" timestamp="1148020" timestamp2="1148020">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="840" _type="InsertStringCommand" date="Thu Jun 10 00:32:01 EDT 2021" starttimestamp="1623298372811" timestamp="1148197" timestamp2="1148197">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="841" _type="InsertStringCommand" date="Thu Jun 10 00:32:01 EDT 2021" starttimestamp="1623298372811" timestamp="1148197" timestamp2="1148197">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="843" _type="InsertStringCommand" date="Thu Jun 10 00:32:01 EDT 2021" starttimestamp="1623298372811" timestamp="1148852" timestamp2="1148852">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="844" _type="InsertStringCommand" date="Thu Jun 10 00:32:01 EDT 2021" starttimestamp="1623298372811" timestamp="1148852" timestamp2="1148852">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="846" _type="InsertStringCommand" date="Thu Jun 10 00:32:01 EDT 2021" starttimestamp="1623298372811" timestamp="1149122" timestamp2="1149122">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="847" _type="InsertStringCommand" date="Thu Jun 10 00:32:01 EDT 2021" starttimestamp="1623298372811" timestamp="1149122" timestamp2="1149122">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="849" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149302" timestamp2="1149302">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="850" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149302" timestamp2="1149302">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="852" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149524" timestamp2="1149524">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="853" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149524" timestamp2="1149524">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="855" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149726" timestamp2="1149726">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="856" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149726" timestamp2="1149726">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="858" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149886" timestamp2="1149886">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="859" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149886" timestamp2="1149886">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="861" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149999" timestamp2="1149999">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="862" _type="InsertStringCommand" date="Thu Jun 10 00:32:02 EDT 2021" starttimestamp="1623298372811" timestamp="1149999" timestamp2="1149999">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="864" _type="InsertStringCommand" date="Thu Jun 10 00:32:03 EDT 2021" starttimestamp="1623298372811" timestamp="1150247" timestamp2="1150247">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="865" _type="InsertStringCommand" date="Thu Jun 10 00:32:03 EDT 2021" starttimestamp="1623298372811" timestamp="1150247" timestamp2="1150247">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="867" _type="PauseCommand" date="Thu Jun 10 00:32:05 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1152382">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2135]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="868" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:32:05 EDT 2021" starttimestamp="1623298372811" timestamp="1152384" />
  <Command __id="869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:32:05 EDT 2021" starttimestamp="1623298372811" timestamp="1152384" />
  <Command __id="871" _type="PauseCommand" date="Thu Jun 10 00:32:07 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1155068">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2684]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="870" _type="MoveCaretCommand" caretOffset="271" date="Thu Jun 10 00:32:07 EDT 2021" docOffset="592" starttimestamp="1623298372811" timestamp="1155068" />
  <Command __id="872" _type="MoveCaretCommand" caretOffset="271" date="Thu Jun 10 00:32:07 EDT 2021" docOffset="592" starttimestamp="1623298372811" timestamp="1155068" />
  <Command __id="874" _type="PauseCommand" date="Thu Jun 10 00:32:09 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1157128">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2060]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="873" _type="ShellCommand" date="Thu Jun 10 00:32:09 EDT 2021" starttimestamp="1623298372811" timestamp="1157128" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="875" _type="ShellCommand" date="Thu Jun 10 00:32:10 EDT 2021" starttimestamp="1623298372811" timestamp="1157284" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="881" _type="PauseCommand" date="Thu Jun 10 00:32:26 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="1173759">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[16432]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="882" _type="MoveCaretCommand" caretOffset="1460" date="Thu Jun 10 00:32:26 EDT 2021" docOffset="1926" starttimestamp="1623298372811" timestamp="1173889" />
  <Command __id="884" _type="PauseCommand" date="Thu Jun 10 00:32:29 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1176306">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2417]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="883" _type="ShellCommand" date="Thu Jun 10 00:32:29 EDT 2021" starttimestamp="1623298372811" timestamp="1176306" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="886" _type="PauseCommand" date="Thu Jun 10 00:32:35 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1182774">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6468]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="885" _type="ShellCommand" date="Thu Jun 10 00:32:35 EDT 2021" starttimestamp="1623298372811" timestamp="1182774" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="888" _type="PauseCommand" date="Thu Jun 10 00:32:37 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1184385">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1611]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="889" _type="MoveCaretCommand" caretOffset="3988" date="Thu Jun 10 00:32:37 EDT 2021" docOffset="4685" starttimestamp="1623298372811" timestamp="1184500" />
  <Command __id="891" _type="PauseCommand" date="Thu Jun 10 00:32:45 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1192205">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7705]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="892" _type="MoveCaretCommand" caretOffset="1460" date="Thu Jun 10 00:32:45 EDT 2021" docOffset="1926" starttimestamp="1623298372811" timestamp="1192304" />
  <Command __id="894" _type="PauseCommand" date="Thu Jun 10 00:32:46 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1193718">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1414]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="893" _type="ShellCommand" date="Thu Jun 10 00:32:46 EDT 2021" starttimestamp="1623298372811" timestamp="1193718" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="896" _type="PauseCommand" date="Thu Jun 10 00:32:48 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1195904">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2186]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="895" _type="ShellCommand" date="Thu Jun 10 00:32:48 EDT 2021" starttimestamp="1623298372811" timestamp="1195904" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="897" _type="EclipseCommand" commandID="" date="Thu Jun 10 00:32:48 EDT 2021" starttimestamp="1623298372811" timestamp="1196034" />
  <Command __id="898" _type="EclipseCommand" commandID="" date="Thu Jun 10 00:32:48 EDT 2021" starttimestamp="1623298372811" timestamp="1196123" />
  <Command __id="899" _type="RunCommand" date="Thu Jun 10 00:32:48 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="1196164" type="Run" />
  <Command __id="900" _type="ShellCommand" date="Thu Jun 10 00:32:49 EDT 2021" starttimestamp="1623298372811" timestamp="1196313" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="901" _type="RunCommand" date="Thu Jun 10 00:32:49 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="1196337" type="Run" />
  <Command __id="920" _type="PauseCommand" date="Thu Jun 10 00:33:34 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1242040">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6963]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="919" _type="ConsoleOutput" date="Thu Jun 10 00:33:34 EDT 2021" overflow="false" starttimestamp="1623298372811" timestamp="1242040" type="ConsoleOutput">
    <outputString><![CDATA[Mouse clicked:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Keyboard"), Diff(INSERT,"Mouse"), Diff(EQUAL," clicked:¶")]]]></diff>
  </Command>
  <Command __id="921" _type="ShellCommand" date="Thu Jun 10 00:33:35 EDT 2021" starttimestamp="1623298372811" timestamp="1242990" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="922" _type="ConsoleOutput" date="Thu Jun 10 00:33:36 EDT 2021" overflow="false" starttimestamp="1623298372811" timestamp="1243401" type="ConsoleOutput">
    <outputString><![CDATA[Keyboard clicked:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Mouse"), Diff(INSERT,"Keyboard"), Diff(EQUAL," clicked:¶")]]]></diff>
  </Command>
  <Command __id="923" _type="RunCommand" date="Thu Jun 10 00:33:36 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="1244113" type="Run" />
  <Command __id="925" _type="PauseCommand" date="Thu Jun 10 00:33:43 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1250201">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6088]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="926" _type="MoveCaretCommand" caretOffset="1461" date="Thu Jun 10 00:33:43 EDT 2021" docOffset="1781" starttimestamp="1623298372811" timestamp="1250299" />
  <Command __id="928" _type="PauseCommand" date="Thu Jun 10 00:33:45 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1252781">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2482]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="927" _type="ShellCommand" date="Thu Jun 10 00:33:45 EDT 2021" starttimestamp="1623298372811" timestamp="1252781" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="930" _type="PauseCommand" date="Thu Jun 10 00:33:46 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1253987">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="929" _type="ShellCommand" date="Thu Jun 10 00:33:46 EDT 2021" starttimestamp="1623298372811" timestamp="1253986" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="931" _type="RunCommand" date="Thu Jun 10 00:33:46 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="1253999" type="Debug" />
  <Command __id="932" _type="RunCommand" date="Thu Jun 10 00:33:46 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="1253999" type="Run" />
  <Command __id="933" _type="RunCommand" date="Thu Jun 10 00:33:46 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="1253999" type="Debug" />
  <Command __id="934" _type="RunCommand" date="Thu Jun 10 00:33:46 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="1253999" type="Run" />
  <Command __id="936" _type="PauseCommand" date="Thu Jun 10 00:33:47 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1255150">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1150]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="935" _type="ShellCommand" date="Thu Jun 10 00:33:47 EDT 2021" starttimestamp="1623298372811" timestamp="1255149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="938" _type="PauseCommand" date="Thu Jun 10 00:33:49 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1256615">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1466]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="937" _type="ShellCommand" date="Thu Jun 10 00:33:49 EDT 2021" starttimestamp="1623298372811" timestamp="1256615" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="939" _type="RunCommand" date="Thu Jun 10 00:33:49 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="1256625" type="Debug" />
  <Command __id="940" _type="RunCommand" date="Thu Jun 10 00:33:49 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="1256625" type="Run" />
  <Command __id="941" _type="RunCommand" date="Thu Jun 10 00:33:49 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1623298372811" timestamp="1256625" type="Debug" />
  <Command __id="942" _type="RunCommand" date="Thu Jun 10 00:33:49 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="1256626" type="Run" />
  <Command __id="944" _type="PauseCommand" date="Thu Jun 10 00:33:53 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1260346">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3720]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="945" _type="MoveCaretCommand" caretOffset="1460" date="Thu Jun 10 00:33:53 EDT 2021" docOffset="1926" starttimestamp="1623298372811" timestamp="1260459" />
  <Command __id="947" _type="PauseCommand" date="Thu Jun 10 00:33:57 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1264421">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3962]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="948" _type="MoveCaretCommand" caretOffset="626" date="Thu Jun 10 00:33:57 EDT 2021" docOffset="626" starttimestamp="1623298372811" timestamp="1264522" />
  <Command __id="950" _type="PauseCommand" date="Thu Jun 10 00:33:58 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1265929">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1407]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="951" _type="MoveCaretCommand" caretOffset="1461" date="Thu Jun 10 00:33:58 EDT 2021" docOffset="1781" starttimestamp="1623298372811" timestamp="1266023" />
  <Command __id="953" _type="PauseCommand" date="Thu Jun 10 00:34:02 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1269783">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3760]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="952" _type="BreakPointCommand" date="Thu Jun 10 00:34:02 EDT 2021" lineNumber="80" starttimestamp="1623298372811" timestamp="1269783" type="BreakPointRemoved" />
  <Command __id="954" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Thu Jun 10 00:34:02 EDT 2021" starttimestamp="1623298372811" timestamp="1269803" />
  <Command __id="959" _type="PauseCommand" date="Thu Jun 10 00:34:12 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1279672">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6753]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="958" _type="RunCommand" date="Thu Jun 10 00:34:12 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="1279672" type="Run" />
  <Command __id="960" _type="RunCommand" date="Thu Jun 10 00:34:12 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="1279673" type="Run" />
  <Command __id="961" _type="ShellCommand" date="Thu Jun 10 00:34:12 EDT 2021" starttimestamp="1623298372811" timestamp="1280012" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="987" _type="PauseCommand" date="Thu Jun 10 00:35:03 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1330873">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6135]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="986" _type="ShellCommand" date="Thu Jun 10 00:35:03 EDT 2021" starttimestamp="1623298372811" timestamp="1330873" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="989" _type="MoveCaretCommand" caretOffset="0" date="Thu Jun 10 00:35:04 EDT 2021" docOffset="0" starttimestamp="1623298372811" timestamp="1331458" />
  <Command __id="991" _type="PauseCommand" date="Thu Jun 10 00:35:10 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1337678">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6220]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="992" _type="MoveCaretCommand" caretOffset="1461" date="Thu Jun 10 00:35:10 EDT 2021" docOffset="1781" starttimestamp="1623298372811" timestamp="1337976" />
  <Command __id="994" _type="PauseCommand" date="Thu Jun 10 00:35:47 EDT 2021" range="30s-1m" starttimestamp="1623298372811" timestamp="1374980">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[37004]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="995" _type="SelectTextCommand" caretOffset="676" date="Thu Jun 10 00:35:48 EDT 2021" end="676" start="662" starttimestamp="1623298372811" timestamp="1375202" />
  <Command __id="997" _type="PauseCommand" date="Thu Jun 10 00:36:10 EDT 2021" range="20s-30s" starttimestamp="1623298372811" timestamp="1397571">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[22369]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="998" _type="MoveCaretCommand" caretOffset="0" date="Thu Jun 10 00:36:11 EDT 2021" docOffset="0" starttimestamp="1623298372811" timestamp="1398370" />
  <Command __id="1000" _type="PauseCommand" date="Thu Jun 10 00:36:30 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="1417770">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19400]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="999" _type="MoveCaretCommand" caretOffset="2335" date="Thu Jun 10 00:36:30 EDT 2021" docOffset="2770" starttimestamp="1623298372811" timestamp="1417770" />
  <Command __id="716" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:29 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5961" docExpressionCount="795" docLength="6029" projectName="grailA3" starttimestamp="1623298372811" timestamp="1117128">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	"), Diff(INSERT,"¶	¶	"), Diff(EQUAL,"void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.beans.PropertyChangeEvent;
import java.awt.BasicStroke;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

import grail.compositeFigs.AngleShapes;
import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.StringShape;

@SuppressWarnings("serial")
public class BridgePaintView extends Component implements CustomView {
		FiveAvatars scene;
		
	
	public BridgePaintView() {
		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getGalahad().getHead().addPropertyChangeListener(this);
		scene.getGalahad().getTorso().addPropertyChangeListener(this);
		scene.getArthur().getStringShape().addPropertyChangeListener(this);
		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getArthur().getHead().addPropertyChangeListener(this);
		scene.getArthur().getTorso().addPropertyChangeListener(this);
		scene.getArthur().getStringShape().addPropertyChangeListener(this);
		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getRobin().getHead().addPropertyChangeListener(this);
		scene.getRobin().getTorso().addPropertyChangeListener(this);
		scene.getRobin().getStringShape().addPropertyChangeListener(this);
		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getLancelot().getHead().addPropertyChangeListener(this);
		scene.getLancelot().getTorso().addPropertyChangeListener(this);
		scene.getLancelot().getStringShape().addPropertyChangeListener(this);
		setFocusable(true);
		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);
	}
	
	@Override
	public void paint(Graphics g) {
		super.paint(g);
		Graphics2D g2 = (Graphics2D) g;
		imagePainter(g, scene.getGalahad());
		linePainter(g, scene.getGalahad().getTorso());
		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());
		stringPainter(g, scene.getGalahad().getStringShape());
		ovalPainter(g, scene.getKnightArea());
		ovalPainter(g, scene.getGuardArea());
		imagePainter(g, scene.getArthur());
		linePainter(g, scene.getArthur().getTorso());
		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());
		stringPainter(g, scene.getArthur().getStringShape());
		imagePainter(g, scene.getRobin());
		linePainter(g, scene.getRobin().getTorso());
		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());
		stringPainter(g, scene.getRobin().getStringShape());
		imagePainter(g, scene.getLancelot());
		linePainter(g, scene.getLancelot().getTorso());
		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());
		stringPainter(g, scene.getLancelot().getStringShape());
		imagePainter(g, scene.getGuard());
		linePainter(g, scene.getGuard().getTorso());
		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());
		stringPainter(g, scene.getGuard().getStringShape());
		linePainter(g, scene.getGorge().getbridgeLLine());
		linePainter(g, scene.getGorge().getbridgeULine());
		linePainter(g, scene.getGorge().getleftLine());
		linePainter(g, scene.getGorge().getrightLine());
		

		
	}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		repaint();
	}
	
	
	
	void imagePainter(Graphics g, Avatars avatarHead) {
		ImageShapes headImage = avatarHead.getHead();
		BufferedImage newImage = null;
		try {
			newImage = ImageIO.read(new File(headImage.getImageFileName()));
		} catch (IOException e) {}
		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);
	}
	
	public void linePainter(Graphics g, MovingL line) {
		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());
	}
	public void stringPainter(Graphics g, StringShape quote) {
		g.drawString(quote.getText(), quote.getX(), quote.getY());
	}
	public void ovalPainter(Graphics g, MovingL avatarZone) {
		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());
	}
	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {
		linePainter(g, arms.getLeftLine());
		linePainter(g, arms.getRightLine());
		linePainter(g, legs.getLeftLine());
		linePainter(g, legs.getRightLine());
	}
	
	public static void main(String[] args) {
		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();
		JFrame frame = new JFrame("Monty Scene");
		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());
		frame.setSize(2000, 800);
		frame.setVisible(true);}
}
]]></snapshot>
  </Command>
  <Command __id="719" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:31 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1701" docExpressionCount="145" docLength="1701" projectName="grailA3" starttimestamp="1623298372811" timestamp="1119104">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static BridgeSceneController bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static BridgeSceneController bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="722" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:34 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="1121702">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="725" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:35 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5961" docExpressionCount="795" docLength="6029" projectName="grailA3" starttimestamp="1623298372811" timestamp="1122648">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="727" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:31:36 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1701" docExpressionCount="145" docLength="1701" projectName="grailA3" starttimestamp="1623298372811" timestamp="1123378">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static BridgeSceneController bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static BridgeSceneController bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="732" _type="Delete" date="Thu Jun 10 00:31:44 EDT 2021" docASTNodeCount="254" docActiveCodeLength="1680" docExpressionCount="144" docLength="1680" endLine="56" length="21" offset="1460" repeat="21" startLine="56" starttimestamp="1623298372811" timestamp="1131905" timestamp2="1135593">
    <text><![CDATA[BridgeSceneController]]></text>
  </DocumentChange>
  <DocumentChange __id="796" _type="Insert" date="Thu Jun 10 00:31:50 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1691" docExpressionCount="145" docLength="1691" length="11" offset="1460" repeat="11" starttimestamp="1623298372811" timestamp="1137464" timestamp2="1140408">
    <text><![CDATA[KeyListener]]></text>
  </DocumentChange>
  <DocumentChange __id="833" _type="Replace" date="Thu Jun 10 00:32:00 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1672" docExpressionCount="145" docLength="1672" endLine="23" insertionLength="1" int_docASTNodeCount="256" int_docActiveCodeLength="1671" int_docExpressionCount="145" int_docLength="1671" length="20" offset="583" startLine="23" starttimestamp="1623298372811" timestamp="1147677">
    <deletedText><![CDATA[BridgeSceneControlle]]></deletedText>
    <insertedText><![CDATA[K]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="836" _type="Insert" date="Thu Jun 10 00:32:00 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1682" docExpressionCount="145" docLength="1682" length="10" offset="584" repeat="10" starttimestamp="1623298372811" timestamp="1148017" timestamp2="1150244">
    <text><![CDATA[eyListener]]></text>
  </DocumentChange>
  <DocumentChange __id="866" _type="Delete" date="Thu Jun 10 00:32:05 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1681" docExpressionCount="145" docLength="1681" endLine="23" length="1" offset="593" startLine="23" starttimestamp="1623298372811" timestamp="1152382">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="876" _type="Delete" date="Thu Jun 10 00:32:10 EDT 2021" docASTNodeCount="256" docActiveCodeLength="1678" docExpressionCount="145" docLength="1678" endLine="5" length="3" offset="56" startLine="2" starttimestamp="1623298372811" timestamp="1157325">
    <text><![CDATA[


]]></text>
  </DocumentChange>
  <DocumentChange __id="877" _type="Insert" date="Thu Jun 10 00:32:10 EDT 2021" docASTNodeCount="264" docActiveCodeLength="1715" docExpressionCount="152" docLength="1715" length="37" offset="56" repeat="3" starttimestamp="1623298372811" timestamp="1157327" timestamp2="1157329">
    <text><![CDATA[
import java.awt.event.KeyListener;

]]></text>
  </DocumentChange>
  <Command __id="880" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:32:26 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="1173759">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="887" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:32:37 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5961" docExpressionCount="795" docLength="6029" projectName="grailA3" starttimestamp="1623298372811" timestamp="1184385">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="890" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:32:45 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="1192205">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="924" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:33:43 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="1250201">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="943" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:33:53 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="1260346">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="946" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:33:57 EDT 2021" docASTNodeCount="264" docActiveCodeLength="1715" docExpressionCount="152" docLength="1715" projectName="grailA3" starttimestamp="1623298372811" timestamp="1264421">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶"), Diff(INSERT,"import java.awt.event.KeyListener;"), Diff(EQUAL,"¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static "), Diff(DELETE,"BridgeSceneControll"), Diff(INSERT,"KeyListen"), Diff(EQUAL,"er bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static "), Diff(DELETE,"BridgeSceneControll"), Diff(INSERT,"KeyListen"), Diff(EQUAL,"er bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.awt.Component;
import java.awt.event.KeyListener;

import javax.swing.JFrame;

import grail.MVC.BridgePaintView;
import grail.MVC.BridgeSceneController;
import grail.MVC.ConsoleSceneView;
import grail.MVC.CustomView;
import grail.MVC.SceneView;
import grail.extras.MapStringToObject;
import grail.extras.Tables;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.FACTORY_CLASS)
public class BridgeSceneFactory { 
	static FiveAvatars scene;
	static SceneView sceneView;
	static Tables<Avatars> avatarAndObject;
	static CustomView sceneView2;
	static KeyListener bridgeController;
	
	public static FiveAvatars bridgeSceneFactoryMethod(){
	   if (scene == null) {
			 scene = new FiveChars();
	   } 
	   return scene;		
	}
	
	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {
		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);
	}
	
	public static SceneView consoleSceneViewFactoryMethod() {
		if (sceneView == null) {
			sceneView = new ConsoleSceneView();
		}
		return sceneView;
	}
	
	public static Tables<Avatars> aCollecctionAvatars(){
		if (avatarAndObject == null) {
			avatarAndObject = new MapStringToObject<Avatars>();
		}
		return avatarAndObject;
	}
	
	public static CustomView inheritingBridgeScenePainterFactoryMethod() {
		if (sceneView2 == null) {
			sceneView2 = new BridgePaintView();
		}
		return sceneView2;
	}
	public static KeyListener bridgeSceneControllerFactoryMethod(){
		if (bridgeController == null) {
			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());
		}
		return bridgeController;
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="949" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:33:58 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="1265929">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="955" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:34:05 EDT 2021" docASTNodeCount="376" docActiveCodeLength="2544" docExpressionCount="277" docLength="3977" projectName="grailA3" starttimestamp="1623298372811" timestamp="1272814">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.Component;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment3 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		line1.setX(X_2);¶		line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶    	//OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶    	//anOEFrame.showTreePanel();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);¶		//BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶    	montyChars.getArthur().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    	//anOEFrame.refresh();¶    	ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//montyChars.approach(montyChars.getArthur());¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶    	//montyChars.passed();¶    	//montyChars.failed();¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="988" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:35:03 EDT 2021" docASTNodeCount="240" docActiveCodeLength="1627" docExpressionCount="140" docLength="3672" projectName="JavaTeaching" starttimestamp="1623298372811" timestamp="1331039">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/graphics/PlottedShuttleComposer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.graphics;¶¶import java.awt.Component;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JFrame;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶/**¶ * ¶ * WINWDOW-BASED CONTROLLER¶ * ¶ * Again we will draw our own graphics. ¶ * ¶ * We will also learn how to intercept raw key and mouse events by defining ¶ * two independent window based controllers.¶ * ¶ * In addition, we will learn to subclass our custom graphics view from the previous exercise.¶ * To do so, we will work with a plotted shuttle instead of a Cartesian plane¶ * ¶ * Study  the program.¶ * ¶ */¶¶public class PlottedShuttleComposer {¶	static final int CUSTOM_FRAME_WIDTH = 400;¶	static final int CUSTOM_FRAME_HEIGHT = 300;¶	static final int OE_FRAME_WIDTH = 400;¶	static final int OE_FRAME_HEIGHT = 600;¶	static final int INIT_SHUTTLE_X = 25;¶	static final int INIT_SHUTTLE_Y = 50;¶¶	static final int FINAL_SHUTTLE_X = 50;¶	static final int FINAL_SHUTTLE_Y = 100;¶	¶	public static void composeShuttleMVC(ObservablePlottedShuttle aPlottedShuttle) {¶		PropertyChangeListener view = new APlottedShuttleView(aPlottedShuttle);¶		aPlottedShuttle.addPropertyChangeListener(view);¶		/*¶		 * This time we create two controllers also¶		 * They will listener to events from the view, so they need the views in¶		 *  their constructors		  ¶		 */¶		MouseListener aMouseController = new APlottedShuttleMouseController(aPlottedShuttle, (Component) view);¶		KeyListener aKeyController = new APlottedShuttleKeyController(aPlottedShuttle, (Component) view);¶		JFrame aFrame = new JFrame("Plotted Shuttle");¶		aFrame.add((Component) view);¶		aFrame.setSize(CUSTOM_FRAME_WIDTH, CUSTOM_FRAME_HEIGHT);¶		aFrame.setVisible(true);¶	}¶	public static void main(String[] args) {		¶		ObservablePlottedShuttle aPlottedShuttle = new AnObservablePlottedShuttle(INIT_SHUTTLE_X, INIT_SHUTTLE_Y);		¶		composeShuttleMVC(aPlottedShuttle);¶		OEFrame anOEFrame = ObjectEditor.edit(aPlottedShuttle);	¶		anOEFrame.setSize(OE_FRAME_WIDTH, OE_FRAME_HEIGHT);¶		aPlottedShuttle.setShuttleX(FINAL_SHUTTLE_X);¶		aPlottedShuttle.setShuttleY(FINAL_SHUTTLE_Y);¶	}¶}¶¶/*¶ * Run the program.¶ * Click the left mouse button somewhere in the custom view and see what happens.¶ * Press the x key somewhere in the custom view and see what happens.¶ * Press the y key somewhere in the custom view and see what happens.¶ * ¶ * Go to APlottedShuttleView and answer the questions there¶ * ¶ * Look at the console output¶ * ¶ * When the plotted shuttle model changes, ¶ *    (a) the repaint() method is called by code contained in APlottedShuttleView¶ *    (b) the repaint() method is called by code contained in ACartesianPlaneView¶ *    (c) the paint() method implemented in APlottedShuttleView is called¶ *    (d) the paint method implemented in ACartesianPlaneView is called¶ *    (e) None of the above¶ *    ¶ *Given a component c of class C, when the component needs to be redrawn, a paint()¶ *methods implemented by ¶ *   (a) class C should be called¶ *   (b) all superclasses of C should be called¶ *   (c) None of the above¶ *    ¶ * Go to APlottedShuttleKeyController and answer the questions there¶ * ¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single custom¶ *      (non ObjectEditor) view.¶ * (T/F) PlottedShuttleComposer attaches the model it creates to a single ¶ * 		(non ObjectEditor) controller.¶ * ¶ * (T/F) APlottedShuttleView is an observer of PlottedShuttleModel.¶ * (T/F) APlottedShuttleKeyController is an observer of APlottedShuttleView.¶ * ¶ * (T/F) An observer cannot be an observable¶ * ¶ * ¶ */¶¶")]]]></diff>
  </Command>
  <Command __id="990" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:35:10 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="1337678">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="993" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:35:47 EDT 2021" docASTNodeCount="832" docActiveCodeLength="5375" docExpressionCount="544" docLength="5397" projectName="grailA3" starttimestamp="1623298372811" timestamp="1374980">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.aCollecctionAvatars();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	public void approach(Avatars anAvatar) {
		if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		occupationState = true;
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	
	@Override
	public void say(String question) {
		if(!occupationState) {return;}
		else if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			knightsTurn = true;
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			knightsTurn = false;	
			}
	}
	@Override
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	@Override
	public void passed() {
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			occupationState = false;
			//avatarInZone = null;
		}
	}
	@Override
	public void failed() {
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			occupationState = false;
		}
		else if(knightsTurn && occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}
	
	
}	
]]></snapshot>
  </Command>
  <Command __id="996" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:36:10 EDT 2021" docASTNodeCount="757" docActiveCodeLength="4361" docExpressionCount="536" docLength="4361" projectName="grailA3" starttimestamp="1623298372811" timestamp="1397571">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/MontyAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import grail.extras.Tables;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MontyString;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.AVATAR)¶¶¶public class MontyAvatar implements Avatars {¶	¶	static final double¶		INITIAL_LIMB_RAD = 20,¶		USUAL_LLINE_ANG = (Math.PI/4),¶		USUAL_RLINE_ANG = 3*(Math.PI/4),¶		TORSO_ANGLE = Math.PI/2,¶		TORSO_LENGTH = 50;¶		;¶	static final int¶		ORIG_X = 0,¶		ORIG_Y = 0;¶	static final String AVATAR_SAYS = "Lets Go";¶	¶	StringShape textSpoken;¶	ImageShapes character;¶	AngleShapes arms;¶	AngleShapes legs;¶	MovingL torso;¶	¶	public MontyAvatar(ImageShapes newHead) {¶		character = newHead;¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		armLegMiniFact();¶		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);¶		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	@Override¶	public void armLegMiniFact() {¶		arms = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶	}¶	@Override¶	public StringShape getStringShape() {¶		return textSpoken;¶	}¶	@Override¶	public ImageShapes getHead() {¶		return character;¶	}¶	@Override¶	public AngleShapes getArms() {¶		return arms;¶	}¶	@Override¶	public AngleShapes getLegs() {¶		return legs;¶	}¶	@Override¶	public MovingL getTorso() {¶		return torso;¶	}¶	@Override¶	public void combineFigs(int comunX, int comunY) {¶			¶		arms.getLeftLine().setX(comunX);¶		arms.getLeftLine().setY(comunY);¶		arms.getRightLine().setX(comunX);¶		arms.getRightLine().setY(comunY);¶		¶		torso.setX(comunX);¶		torso.setY(comunY);¶		¶		int lowTorsoY = comunY + torso.getHeight();¶		int lowTorsoX = comunX + torso.getWidth();¶		legs.getLeftLine().setX(lowTorsoX);¶		legs.getLeftLine().setY(lowTorsoY);¶		legs.getRightLine().setX(lowTorsoX);¶		legs.getRightLine().setY(lowTorsoY);¶		¶		¶	}¶	@Override¶	public void moveAvatar(int newX, int newY) {¶		int newAttachX = arms.getLeftLine().getX() + newX;¶		int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newAttachX, newAttachY);¶		int newPicLocX = character.getX() + newX;¶		int newPicLocY = character.getY() + newY;¶		character.setX(newPicLocX);¶		character.setY(newPicLocY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	@Override¶	public void scale(double scaleBy) {¶		double newRadL = arms.getLeftLine().getRadius()*scaleBy;¶		double newRadR = arms.getRightLine().getRadius()*scaleBy;¶		double newRadTo = torso.getRadius()*scaleBy;¶		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());¶		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;¶		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;¶		int newHeadHeight = (int)(character.getHeight()*scaleBy);¶		int newHeadWidth = (int) (character.getWidth()*scaleBy);¶		character.setHeight(newHeadHeight);¶		character.setWidth(newHeadWidth);¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		arms.getLeftLine().setRadius(newRadL);¶		arms.getRightLine().setRadius(newRadR);¶		legs.getLeftLine().setRadius(newRadLegL);¶		legs.getRightLine().setRadius(newRadLegR);¶		torso.setRadius(newRadTo);¶		legs.moveLimbs(ORIG_X, legAttach);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="1002" _type="PauseCommand" date="Thu Jun 10 00:37:25 EDT 2021" range="30s-1m" starttimestamp="1623298372811" timestamp="1472474">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[54704]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1003" _type="MoveCaretCommand" caretOffset="626" date="Thu Jun 10 00:37:25 EDT 2021" docOffset="626" starttimestamp="1623298372811" timestamp="1472590" />
  <Command __id="1005" _type="PauseCommand" date="Thu Jun 10 00:37:27 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1475164">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2574]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1006" _type="MoveCaretCommand" caretOffset="3988" date="Thu Jun 10 00:37:28 EDT 2021" docOffset="4685" starttimestamp="1623298372811" timestamp="1475273" />
  <Command __id="1008" _type="PauseCommand" date="Thu Jun 10 00:37:30 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1477909">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2636]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1009" _type="MoveCaretCommand" caretOffset="1461" date="Thu Jun 10 00:37:30 EDT 2021" docOffset="1781" starttimestamp="1623298372811" timestamp="1478012" />
  <Command __id="1011" _type="PauseCommand" date="Thu Jun 10 00:37:46 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="1493999">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15987]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1010" _type="MoveCaretCommand" caretOffset="1485" date="Thu Jun 10 00:37:46 EDT 2021" docOffset="1805" starttimestamp="1623298372811" timestamp="1493999" />
  <Command __id="1012" _type="MoveCaretCommand" caretOffset="1485" date="Thu Jun 10 00:37:46 EDT 2021" docOffset="1805" starttimestamp="1623298372811" timestamp="1493999" />
  <Command __id="1013" _type="MoveCaretCommand" caretOffset="1489" date="Thu Jun 10 00:37:47 EDT 2021" docOffset="1809" starttimestamp="1623298372811" timestamp="1494955" />
  <Command __id="1014" _type="MoveCaretCommand" caretOffset="1489" date="Thu Jun 10 00:37:47 EDT 2021" docOffset="1809" starttimestamp="1623298372811" timestamp="1494955" />
  <Command __id="1016" _type="PauseCommand" date="Thu Jun 10 00:37:51 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1498430">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3475]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1017" _type="InsertStringCommand" date="Thu Jun 10 00:37:51 EDT 2021" starttimestamp="1623298372811" timestamp="1498433" timestamp2="1498433">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1018" _type="InsertStringCommand" date="Thu Jun 10 00:37:51 EDT 2021" starttimestamp="1623298372811" timestamp="1498433" timestamp2="1498433">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1020" _type="PauseCommand" date="Thu Jun 10 00:37:54 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1501445">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3012]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1021" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1501448" timestamp2="1501448">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1022" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1501448" timestamp2="1501448">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1024" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1501606" timestamp2="1501606">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1025" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1501606" timestamp2="1501606">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1027" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1501847" timestamp2="1501847">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1028" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1501847" timestamp2="1501847">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1030" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1502098" timestamp2="1502098">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1031" _type="InsertStringCommand" date="Thu Jun 10 00:37:54 EDT 2021" starttimestamp="1623298372811" timestamp="1502098" timestamp2="1502098">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1033" _type="InsertStringCommand" date="Thu Jun 10 00:37:55 EDT 2021" starttimestamp="1623298372811" timestamp="1502341" timestamp2="1502341">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1034" _type="InsertStringCommand" date="Thu Jun 10 00:37:55 EDT 2021" starttimestamp="1623298372811" timestamp="1502342" timestamp2="1502342">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1036" _type="InsertStringCommand" date="Thu Jun 10 00:37:55 EDT 2021" starttimestamp="1623298372811" timestamp="1502454" timestamp2="1502454">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1037" _type="InsertStringCommand" date="Thu Jun 10 00:37:55 EDT 2021" starttimestamp="1623298372811" timestamp="1502454" timestamp2="1502454">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1039" _type="PauseCommand" date="Thu Jun 10 00:37:58 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1505760">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3306]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1040" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:58 EDT 2021" starttimestamp="1623298372811" timestamp="1505763" />
  <Command __id="1041" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:58 EDT 2021" starttimestamp="1623298372811" timestamp="1505763" />
  <Command __id="1043" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:58 EDT 2021" starttimestamp="1623298372811" timestamp="1505944" />
  <Command __id="1044" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:58 EDT 2021" starttimestamp="1623298372811" timestamp="1505944" />
  <Command __id="1046" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:58 EDT 2021" starttimestamp="1623298372811" timestamp="1506124" />
  <Command __id="1047" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:58 EDT 2021" starttimestamp="1623298372811" timestamp="1506125" />
  <Command __id="1049" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1506305" />
  <Command __id="1050" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1506305" />
  <Command __id="1052" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1506481" />
  <Command __id="1053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1506481" />
  <Command __id="1055" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1506639" />
  <Command __id="1056" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1506640" />
  <Command __id="1058" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1507132" />
  <Command __id="1059" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:37:59 EDT 2021" starttimestamp="1623298372811" timestamp="1507133" />
  <Command __id="1061" _type="InsertStringCommand" date="Thu Jun 10 00:38:00 EDT 2021" starttimestamp="1623298372811" timestamp="1507718" timestamp2="1507718">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1062" _type="InsertStringCommand" date="Thu Jun 10 00:38:00 EDT 2021" starttimestamp="1623298372811" timestamp="1507718" timestamp2="1507718">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1064" _type="InsertStringCommand" date="Thu Jun 10 00:38:00 EDT 2021" starttimestamp="1623298372811" timestamp="1507856" timestamp2="1507856">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="1065" _type="InsertStringCommand" date="Thu Jun 10 00:38:00 EDT 2021" starttimestamp="1623298372811" timestamp="1507856" timestamp2="1507856">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="1067" _type="InsertStringCommand" date="Thu Jun 10 00:38:00 EDT 2021" starttimestamp="1623298372811" timestamp="1507993" timestamp2="1507993">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1068" _type="InsertStringCommand" date="Thu Jun 10 00:38:00 EDT 2021" starttimestamp="1623298372811" timestamp="1507993" timestamp2="1507993">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1070" _type="InsertStringCommand" date="Thu Jun 10 00:38:01 EDT 2021" starttimestamp="1623298372811" timestamp="1508890" timestamp2="1508890">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1071" _type="InsertStringCommand" date="Thu Jun 10 00:38:01 EDT 2021" starttimestamp="1623298372811" timestamp="1508890" timestamp2="1508890">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1073" _type="InsertStringCommand" date="Thu Jun 10 00:38:01 EDT 2021" starttimestamp="1623298372811" timestamp="1509025" timestamp2="1509025">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1001" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:37:25 EDT 2021" docASTNodeCount="264" docActiveCodeLength="1715" docExpressionCount="152" docLength="1715" projectName="grailA3" starttimestamp="1623298372811" timestamp="1472474">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶import java.awt.event.KeyListener;¶¶import javax.swing.JFrame;¶¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.SceneView;¶import grail.extras.MapStringToObject;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static KeyListener bridgeController;¶	¶	public static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	public static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	¶	public static Tables<Avatars> aCollecctionAvatars(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public static KeyListener bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod());¶		}¶		return bridgeController;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1004" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:37:27 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5961" docExpressionCount="795" docLength="6029" projectName="grailA3" starttimestamp="1623298372811" timestamp="1475164">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.beans.PropertyChangeEvent;¶import java.awt.BasicStroke;¶¶import java.awt.Color;¶import java.awt.Component;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶¶import javax.imageio.ImageIO;¶import javax.swing.JFrame;¶¶import grail.compositeFigs.AngleShapes;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶¶@SuppressWarnings("serial")¶public class BridgePaintView extends Component implements CustomView {¶		FiveAvatars scene;¶		¶	¶	public BridgePaintView() {¶		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getGalahad().getHead().addPropertyChangeListener(this);¶		scene.getGalahad().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getArthur().getHead().addPropertyChangeListener(this);¶		scene.getArthur().getTorso().addPropertyChangeListener(this);¶		scene.getArthur().getStringShape().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getRobin().getHead().addPropertyChangeListener(this);¶		scene.getRobin().getTorso().addPropertyChangeListener(this);¶		scene.getRobin().getStringShape().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);¶		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);¶		scene.getLancelot().getHead().addPropertyChangeListener(this);¶		scene.getLancelot().getTorso().addPropertyChangeListener(this);¶		scene.getLancelot().getStringShape().addPropertyChangeListener(this);¶		setFocusable(true);¶		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		super.paint(g);¶		Graphics2D g2 = (Graphics2D) g;¶		imagePainter(g, scene.getGalahad());¶		linePainter(g, scene.getGalahad().getTorso());¶		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());¶		stringPainter(g, scene.getGalahad().getStringShape());¶		ovalPainter(g, scene.getKnightArea());¶		ovalPainter(g, scene.getGuardArea());¶		imagePainter(g, scene.getArthur());¶		linePainter(g, scene.getArthur().getTorso());¶		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());¶		stringPainter(g, scene.getArthur().getStringShape());¶		imagePainter(g, scene.getRobin());¶		linePainter(g, scene.getRobin().getTorso());¶		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());¶		stringPainter(g, scene.getRobin().getStringShape());¶		imagePainter(g, scene.getLancelot());¶		linePainter(g, scene.getLancelot().getTorso());¶		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());¶		stringPainter(g, scene.getLancelot().getStringShape());¶		imagePainter(g, scene.getGuard());¶		linePainter(g, scene.getGuard().getTorso());¶		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());¶		stringPainter(g, scene.getGuard().getStringShape());¶		linePainter(g, scene.getGorge().getbridgeLLine());¶		linePainter(g, scene.getGorge().getbridgeULine());¶		linePainter(g, scene.getGorge().getleftLine());¶		linePainter(g, scene.getGorge().getrightLine());¶		¶¶		¶	}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶	¶	¶	¶	void imagePainter(Graphics g, Avatars avatarHead) {¶		ImageShapes headImage = avatarHead.getHead();¶		BufferedImage newImage = null;¶		try {¶			newImage = ImageIO.read(new File(headImage.getImageFileName()));¶		} catch (IOException e) {}¶		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);¶	}¶	¶	public void linePainter(Graphics g, MovingL line) {¶		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());¶	}¶	public void stringPainter(Graphics g, StringShape quote) {¶		g.drawString(quote.getText(), quote.getX(), quote.getY());¶	}¶	public void ovalPainter(Graphics g, MovingL avatarZone) {¶		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());¶	}¶	public void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {¶		linePainter(g, arms.getLeftLine());¶		linePainter(g, arms.getRightLine());¶		linePainter(g, legs.getLeftLine());¶		linePainter(g, legs.getRightLine());¶	}¶	¶	public static void main(String[] args) {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());¶		frame.setSize(2000, 800);¶		frame.setVisible(true);}¶}¶")]]]></diff>
  </Command>
  <Command __id="1007" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 00:37:30 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" projectName="grailA3" starttimestamp="1623298372811" timestamp="1477909">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController implements KeyListener, MouseListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶	FiveAvatars aBridgeScene;¶	int newX;¶	int newY;¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent) {¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶	}¶¶	@Override¶	public void mouseClicked(MouseEvent e) {¶		System.out.println ("Mouse clicked:");¶		newX = e.getX();¶		newY = e.getY();¶		¶		¶	}¶¶	¶	public void mousePressed(MouseEvent e) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	¶	public void mouseReleased(MouseEvent e) {}¶¶	¶	public void mouseEntered(MouseEvent e) {}¶¶	¶	public void mouseExited(MouseEvent e) {}¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println ("Keyboard clicked:");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.moveAvatar(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.moveAvatar(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.moveAvatar(newX, newY);¶    		break;¶    	case 'r':¶    		robin.moveAvatar(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.moveAvatar(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.moveAvatar(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.moveAvatar(LANCE_X, LANCE_Y);¶    	¶    		robin.moveAvatar(ROBIN_X, ROBIN_Y);¶		}¶		¶	}¶¶	¶	public void keyPressed(KeyEvent e) {}¶¶	¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1015" _type="Insert" date="Thu Jun 10 00:37:51 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2282" docExpressionCount="232" docLength="2345" length="1" offset="1809" starttimestamp="1623298372811" timestamp="1498430">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="1019" _type="Insert" date="Thu Jun 10 00:37:54 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2288" docExpressionCount="232" docLength="2351" length="6" offset="1810" repeat="6" starttimestamp="1623298372811" timestamp="1501445" timestamp2="1502450">
    <text><![CDATA[arthur]]></text>
  </DocumentChange>
  <DocumentChange __id="1038" _type="Delete" date="Thu Jun 10 00:37:58 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" endLine="79" length="7" offset="1809" repeat="7" startLine="79" starttimestamp="1623298372811" timestamp="1505760" timestamp2="1507130">
    <text><![CDATA[ arthur]]></text>
  </DocumentChange>
  <Command __id="1074" _type="InsertStringCommand" date="Thu Jun 10 00:38:01 EDT 2021" starttimestamp="1623298372811" timestamp="1509026" timestamp2="1509026">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1076" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509203" timestamp2="1509203">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1077" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509203" timestamp2="1509203">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1079" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509361" timestamp2="1509361">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1080" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509361" timestamp2="1509361">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1082" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509589" timestamp2="1509589">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1083" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509589" timestamp2="1509589">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1085" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509746" timestamp2="1509746">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1086" _type="InsertStringCommand" date="Thu Jun 10 00:38:02 EDT 2021" starttimestamp="1623298372811" timestamp="1509746" timestamp2="1509746">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1089" _type="PauseCommand" date="Thu Jun 10 00:38:04 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="1511617">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1871]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1088" _type="InsertStringCommand" date="Thu Jun 10 00:38:04 EDT 2021" starttimestamp="1623298372811" timestamp="1511617" timestamp2="1511617">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1090" _type="InsertStringCommand" date="Thu Jun 10 00:38:04 EDT 2021" starttimestamp="1623298372811" timestamp="1511618" timestamp2="1511618">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1091" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Jun 10 00:38:04 EDT 2021" start_end="START" starttimestamp="1623298372811" timestamp="1511642" />
  <Command __id="1096" _type="PauseCommand" date="Thu Jun 10 00:38:10 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="1517686">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[6044]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1097" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Jun 10 00:38:10 EDT 2021" start_end="END" starttimestamp="1623298372811" timestamp="1517700" />
  <Command __id="1099" _type="PauseCommand" date="Thu Jun 10 00:38:13 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1520250">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2550]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1100" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520253" />
  <Command __id="1101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520253" />
  <Command __id="1103" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520754" />
  <Command __id="1104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520754" />
  <Command __id="1106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520838" />
  <Command __id="1107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520838" />
  <Command __id="1109" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520924" />
  <Command __id="1110" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1520924" />
  <Command __id="1112" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1521005" />
  <Command __id="1113" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:13 EDT 2021" starttimestamp="1623298372811" timestamp="1521006" />
  <Command __id="1115" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:14 EDT 2021" starttimestamp="1623298372811" timestamp="1521264" />
  <Command __id="1116" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:14 EDT 2021" starttimestamp="1623298372811" timestamp="1521264" />
  <Command __id="1118" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:14 EDT 2021" starttimestamp="1623298372811" timestamp="1521766" />
  <Command __id="1119" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:14 EDT 2021" starttimestamp="1623298372811" timestamp="1521766" />
  <Command __id="1121" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:14 EDT 2021" starttimestamp="1623298372811" timestamp="1522030" />
  <Command __id="1122" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:14 EDT 2021" starttimestamp="1623298372811" timestamp="1522031" />
  <Command __id="1124" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:15 EDT 2021" starttimestamp="1623298372811" timestamp="1522409" />
  <Command __id="1125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:15 EDT 2021" starttimestamp="1623298372811" timestamp="1522409" />
  <Command __id="1127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:15 EDT 2021" starttimestamp="1623298372811" timestamp="1522679" />
  <Command __id="1128" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:15 EDT 2021" starttimestamp="1623298372811" timestamp="1522679" />
  <Command __id="1130" _type="PauseCommand" date="Thu Jun 10 00:38:18 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1525719">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3040]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1131" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:18 EDT 2021" starttimestamp="1623298372811" timestamp="1525723" />
  <Command __id="1132" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:18 EDT 2021" starttimestamp="1623298372811" timestamp="1525723" />
  <Command __id="1134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:18 EDT 2021" starttimestamp="1623298372811" timestamp="1525969" />
  <Command __id="1135" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:18 EDT 2021" starttimestamp="1623298372811" timestamp="1525969" />
  <Command __id="1137" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:19 EDT 2021" starttimestamp="1623298372811" timestamp="1526211" />
  <Command __id="1138" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:19 EDT 2021" starttimestamp="1623298372811" timestamp="1526211" />
  <Command __id="1140" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:19 EDT 2021" starttimestamp="1623298372811" timestamp="1526707" />
  <Command __id="1141" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 00:38:19 EDT 2021" starttimestamp="1623298372811" timestamp="1526707" />
  <Command __id="1143" _type="PauseCommand" date="Thu Jun 10 00:38:22 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="1529959">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3252]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1142" _type="ShellCommand" date="Thu Jun 10 00:38:22 EDT 2021" starttimestamp="1623298372811" timestamp="1529959" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1144" _type="ShellCommand" date="Thu Jun 10 00:38:22 EDT 2021" starttimestamp="1623298372811" timestamp="1529964" type="ECLIPSE_MINIMIZED" />
  <Command __id="1146" _type="PauseCommand" date="Thu Jun 10 02:02:46 EDT 2021" range=">1h" starttimestamp="1623298372811" timestamp="6593632">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5063667]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="1145" _type="BalloonCommand" date="Thu Jun 10 02:02:46 EDT 2021" message="*******************************************
Worked 25 minutes(fixed)/25 minutes(context based) from
Thu Jun 10 00:13:00 EDT 2021 to Thu Jun 10 00:38:22 EDT 2021
Edited 1 Projects: 
	grailA3
Edited 4 Files: 
	/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/BridgeSceneFactory.java
	/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgeSceneController.java
	/Users/gabomm99/eclipse-workspace/grailA3/src/main/Assignment3.java
	/Users/gabomm99/eclipse-workspace/grailA3/src/grail/MVC/BridgePaintView.java
Number of insert: 93
Number of delete: 140
" starttimestamp="1623298372811" timestamp="6593631">
    <fineGrainedWorkTime><![CDATA[25]]></fineGrainedWorkTime>
    <insert><![CDATA[93]]></insert>
    <startTime><![CDATA[1623298380514]]></startTime>
    <endTime><![CDATA[1623299902775]]></endTime>
    <workTime><![CDATA[25]]></workTime>
    <delete><![CDATA[140]]></delete>
  </Command>
  <Command __id="1148" _type="PauseCommand" date="Thu Jun 10 08:20:46 EDT 2021" range=">1h" starttimestamp="1623298372811" timestamp="29273887">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[22680256]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1147" _type="ShellCommand" date="Thu Jun 10 08:20:46 EDT 2021" starttimestamp="1623298372811" timestamp="29273887" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1149" _type="ShellCommand" date="Thu Jun 10 08:20:46 EDT 2021" starttimestamp="1623298372811" timestamp="29273905" type="ECLIPSE_MAXIMIZED" />
  <Command __id="1151" _type="PauseCommand" date="Thu Jun 10 08:21:01 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="29288940">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15034]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1152" _type="SelectTextCommand" caretOffset="676" date="Thu Jun 10 08:21:01 EDT 2021" end="676" start="662" starttimestamp="1623298372811" timestamp="29289082" />
  <Command __id="1154" _type="PauseCommand" date="Thu Jun 10 08:21:08 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29295808">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6726]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1155" _type="MoveCaretCommand" caretOffset="2335" date="Thu Jun 10 08:21:08 EDT 2021" docOffset="2770" starttimestamp="1623298372811" timestamp="29295960" />
  <Command __id="1157" _type="PauseCommand" date="Thu Jun 10 08:21:16 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29303661">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7701]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1156" _type="SelectTextCommand" caretOffset="2740" date="Thu Jun 10 08:21:16 EDT 2021" end="2740" start="2253" starttimestamp="1623298372811" timestamp="29303661" />
  <Command __id="1159" _type="PauseCommand" date="Thu Jun 10 08:21:18 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29305587">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1926]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1158" _type="MoveCaretCommand" caretOffset="2740" date="Thu Jun 10 08:21:18 EDT 2021" docOffset="3175" starttimestamp="1623298372811" timestamp="29305587" />
  <Command __id="1161" _type="InsertStringCommand" date="Thu Jun 10 08:21:19 EDT 2021" starttimestamp="1623298372811" timestamp="29306525" timestamp2="29306525">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1163" _type="InsertStringCommand" date="Thu Jun 10 08:21:19 EDT 2021" starttimestamp="1623298372811" timestamp="29307079" timestamp2="29307079">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1167" _type="PasteCommand" date="Thu Jun 10 08:21:20 EDT 2021" starttimestamp="1623298372811" timestamp="29308097" />
  <Command __id="1169" _type="PauseCommand" date="Thu Jun 10 08:21:23 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29310250">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2153]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1172" _type="UndoCommand" date="Thu Jun 10 08:21:23 EDT 2021" starttimestamp="1623298372811" timestamp="29310341" />
  <Command __id="1174" _type="PauseCommand" date="Thu Jun 10 08:21:25 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29313003">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2662]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1173" _type="SelectTextCommand" caretOffset="2677" date="Thu Jun 10 08:21:25 EDT 2021" end="3175" start="2677" starttimestamp="1623298372811" timestamp="29313003" />
  <Command __id="1176" _type="PauseCommand" date="Thu Jun 10 08:21:27 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29314440">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1437]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1175" _type="CopyCommand" date="Thu Jun 10 08:21:27 EDT 2021" starttimestamp="1623298372811" timestamp="29314440" />
  <Command __id="1178" _type="PauseCommand" date="Thu Jun 10 08:21:28 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29315583">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1143]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1177" _type="MoveCaretCommand" caretOffset="3177" date="Thu Jun 10 08:21:28 EDT 2021" docOffset="3177" starttimestamp="1623298372811" timestamp="29315583" />
  <Command __id="1180" _type="PauseCommand" date="Thu Jun 10 08:21:29 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29316636">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1053]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1181" _type="PasteCommand" date="Thu Jun 10 08:21:29 EDT 2021" starttimestamp="1623298372811" timestamp="29316658" />
  <Command __id="1183" _type="PauseCommand" date="Thu Jun 10 08:21:36 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29323773">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7115]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1182" _type="MoveCaretCommand" caretOffset="3210" date="Thu Jun 10 08:21:36 EDT 2021" docOffset="3210" starttimestamp="1623298372811" timestamp="29323773" />
  <Command __id="1185" _type="PauseCommand" date="Thu Jun 10 08:21:40 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29327653">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3880]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1186" _type="InsertStringCommand" date="Thu Jun 10 08:21:40 EDT 2021" starttimestamp="1623298372811" timestamp="29327661" timestamp2="29327661">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1188" _type="InsertStringCommand" date="Thu Jun 10 08:21:40 EDT 2021" starttimestamp="1623298372811" timestamp="29327930" timestamp2="29327930">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1190" _type="PauseCommand" date="Thu Jun 10 08:21:42 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29329983">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2053]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1189" _type="MoveCaretCommand" caretOffset="3497" date="Thu Jun 10 08:21:42 EDT 2021" docOffset="3497" starttimestamp="1623298372811" timestamp="29329983" />
  <Command __id="1192" _type="PauseCommand" date="Thu Jun 10 08:21:48 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29336154">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6171]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1193" _type="MoveCaretCommand" caretOffset="0" date="Thu Jun 10 08:21:49 EDT 2021" docOffset="0" starttimestamp="1623298372811" timestamp="29336668" />
  <Command __id="1195" _type="PauseCommand" date="Thu Jun 10 08:21:58 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29345867">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9199]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1196" _type="MoveCaretCommand" caretOffset="3497" date="Thu Jun 10 08:21:58 EDT 2021" docOffset="3497" starttimestamp="1623298372811" timestamp="29346028" />
  <Command __id="1198" _type="PauseCommand" date="Thu Jun 10 08:22:08 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29355559">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9531]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1199" _type="MoveCaretCommand" caretOffset="0" date="Thu Jun 10 08:22:08 EDT 2021" docOffset="0" starttimestamp="1623298372811" timestamp="29356031" />
  <Command __id="1201" _type="PauseCommand" date="Thu Jun 10 08:22:18 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29365767">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9736]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1200" _type="SelectTextCommand" caretOffset="337" date="Thu Jun 10 08:22:18 EDT 2021" end="380" start="337" starttimestamp="1623298372811" timestamp="29365767" />
  <Command __id="1202" _type="CopyCommand" date="Thu Jun 10 08:22:19 EDT 2021" starttimestamp="1623298372811" timestamp="29366583" />
  <Command __id="1204" _type="PauseCommand" date="Thu Jun 10 08:22:20 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29367837">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1254]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1203" _type="MoveCaretCommand" caretOffset="380" date="Thu Jun 10 08:22:20 EDT 2021" docOffset="512" starttimestamp="1623298372811" timestamp="29367837" />
  <Command __id="1206" _type="InsertStringCommand" date="Thu Jun 10 08:22:21 EDT 2021" starttimestamp="1623298372811" timestamp="29368571" timestamp2="29368571">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1208" _type="PasteCommand" date="Thu Jun 10 08:22:21 EDT 2021" starttimestamp="1623298372811" timestamp="29369016" />
  <Command __id="1210" _type="PauseCommand" date="Thu Jun 10 08:22:23 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29370749">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1733]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1209" _type="MoveCaretCommand" caretOffset="404" date="Thu Jun 10 08:22:23 EDT 2021" docOffset="536" starttimestamp="1623298372811" timestamp="29370749" />
  <Command __id="1212" _type="PauseCommand" date="Thu Jun 10 08:22:24 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29371842">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1093]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1213" _type="InsertStringCommand" date="Thu Jun 10 08:22:24 EDT 2021" starttimestamp="1623298372811" timestamp="29371849" timestamp2="29371849">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1215" _type="InsertStringCommand" date="Thu Jun 10 08:22:24 EDT 2021" starttimestamp="1623298372811" timestamp="29372147" timestamp2="29372147">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1217" _type="PauseCommand" date="Thu Jun 10 08:22:26 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29373981">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1834]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1216" _type="MoveCaretCommand" caretOffset="502" date="Thu Jun 10 08:22:26 EDT 2021" docOffset="634" starttimestamp="1623298372811" timestamp="29373981" />
  <Command __id="1219" _type="PauseCommand" date="Thu Jun 10 08:22:28 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29375347">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1366]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1220" _type="MoveCaretCommand" caretOffset="3497" date="Thu Jun 10 08:22:28 EDT 2021" docOffset="3497" starttimestamp="1623298372811" timestamp="29375483" />
  <Command __id="1222" _type="PauseCommand" date="Thu Jun 10 08:22:42 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="29389505">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14022]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1221" _type="MoveCaretCommand" caretOffset="3237" date="Thu Jun 10 08:22:42 EDT 2021" docOffset="3237" starttimestamp="1623298372811" timestamp="29389505" />
  <Command __id="1223" _type="MoveCaretCommand" caretOffset="3237" date="Thu Jun 10 08:22:42 EDT 2021" docOffset="3237" starttimestamp="1623298372811" timestamp="29389505" />
  <Command __id="1225" _type="InsertStringCommand" date="Thu Jun 10 08:22:43 EDT 2021" starttimestamp="1623298372811" timestamp="29390347" timestamp2="29390347">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1226" _type="InsertStringCommand" date="Thu Jun 10 08:22:43 EDT 2021" starttimestamp="1623298372811" timestamp="29390347" timestamp2="29390347">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1228" _type="InsertStringCommand" date="Thu Jun 10 08:22:43 EDT 2021" starttimestamp="1623298372811" timestamp="29390503" timestamp2="29390503">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1229" _type="InsertStringCommand" date="Thu Jun 10 08:22:43 EDT 2021" starttimestamp="1623298372811" timestamp="29390504" timestamp2="29390504">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1230" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Jun 10 08:22:43 EDT 2021" starttimestamp="1623298372811" timestamp="29390949" />
  <Command __id="1231" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Jun 10 08:22:43 EDT 2021" starttimestamp="1623298372811" timestamp="29390949" />
  <Command __id="1232" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:22:44 EDT 2021" starttimestamp="1623298372811" timestamp="29391217" />
  <Command __id="1233" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:22:44 EDT 2021" starttimestamp="1623298372811" timestamp="29391218" />
  <Command __id="1234" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:22:44 EDT 2021" starttimestamp="1623298372811" timestamp="29391530" />
  <Command __id="1235" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:22:44 EDT 2021" starttimestamp="1623298372811" timestamp="29391531" />
  <Command __id="1237" _type="InsertStringCommand" date="Thu Jun 10 08:22:45 EDT 2021" starttimestamp="1623298372811" timestamp="29392463" timestamp2="29392463">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1238" _type="InsertStringCommand" date="Thu Jun 10 08:22:45 EDT 2021" starttimestamp="1623298372811" timestamp="29392463" timestamp2="29392463">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1240" _type="InsertStringCommand" date="Thu Jun 10 08:22:45 EDT 2021" starttimestamp="1623298372811" timestamp="29392664" timestamp2="29392664">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1241" _type="InsertStringCommand" date="Thu Jun 10 08:22:45 EDT 2021" starttimestamp="1623298372811" timestamp="29392664" timestamp2="29392664">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1243" _type="PauseCommand" date="Thu Jun 10 08:22:50 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29397774">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5110]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1242" _type="MoveCaretCommand" caretOffset="3368" date="Thu Jun 10 08:22:50 EDT 2021" docOffset="3368" starttimestamp="1623298372811" timestamp="29397774" />
  <Command __id="1244" _type="MoveCaretCommand" caretOffset="3368" date="Thu Jun 10 08:22:50 EDT 2021" docOffset="3368" starttimestamp="1623298372811" timestamp="29397776" />
  <Command __id="1246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398375" />
  <Command __id="1247" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398375" />
  <Command __id="1249" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398557" />
  <Command __id="1250" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398558" />
  <Command __id="1252" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398738" />
  <Command __id="1253" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398738" />
  <Command __id="1255" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398872" />
  <Command __id="1256" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29398872" />
  <Command __id="1258" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29399007" />
  <Command __id="1259" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:51 EDT 2021" starttimestamp="1623298372811" timestamp="29399007" />
  <Command __id="1261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:52 EDT 2021" starttimestamp="1623298372811" timestamp="29399434" />
  <Command __id="1262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:52 EDT 2021" starttimestamp="1623298372811" timestamp="29399435" />
  <Command __id="1264" _type="PauseCommand" date="Thu Jun 10 08:22:54 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29401887">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2452]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1263" _type="MoveCaretCommand" caretOffset="3374" date="Thu Jun 10 08:22:54 EDT 2021" docOffset="3374" starttimestamp="1623298372811" timestamp="29401887" />
  <Command __id="1265" _type="MoveCaretCommand" caretOffset="3374" date="Thu Jun 10 08:22:54 EDT 2021" docOffset="3374" starttimestamp="1623298372811" timestamp="29401890" />
  <Command __id="1267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402537" />
  <Command __id="1268" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402537" />
  <Command __id="1270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402714" />
  <Command __id="1271" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402715" />
  <Command __id="1273" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402849" />
  <Command __id="1274" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402849" />
  <Command __id="1276" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402985" />
  <Command __id="1277" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:55 EDT 2021" starttimestamp="1623298372811" timestamp="29402985" />
  <Command __id="1279" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:56 EDT 2021" starttimestamp="1623298372811" timestamp="29403348" />
  <Command __id="1280" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:56 EDT 2021" starttimestamp="1623298372811" timestamp="29403348" />
  <Command __id="1282" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:56 EDT 2021" starttimestamp="1623298372811" timestamp="29404026" />
  <Command __id="1283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:22:56 EDT 2021" starttimestamp="1623298372811" timestamp="29404026" />
  <DocumentChange __id="1060" _type="Insert" date="Thu Jun 10 00:38:00 EDT 2021" docASTNodeCount="372" docActiveCodeLength="2294" docExpressionCount="236" docLength="2357" length="13" offset="1809" repeat="13" starttimestamp="1623298372811" timestamp="1507715" timestamp2="1512645">
    <text><![CDATA[ - arthur.get]]></text>
  </DocumentChange>
  <DocumentChange __id="1095" _type="Insert" date="Thu Jun 10 00:38:10 EDT 2021" docASTNodeCount="372" docActiveCodeLength="2295" docExpressionCount="236" docLength="2358" length="1" offset="1822" starttimestamp="1623298372811" timestamp="1517686">
    <text><![CDATA[X]]></text>
  </DocumentChange>
  <DocumentChange __id="1098" _type="Delete" date="Thu Jun 10 00:38:13 EDT 2021" docASTNodeCount="370" docActiveCodeLength="2285" docExpressionCount="234" docLength="2348" endLine="79" length="10" offset="1813" repeat="10" startLine="79" starttimestamp="1623298372811" timestamp="1520250" timestamp2="1522676">
    <text><![CDATA[rthur.getX]]></text>
  </DocumentChange>
  <DocumentChange __id="1129" _type="Delete" date="Thu Jun 10 00:38:18 EDT 2021" docASTNodeCount="368" docActiveCodeLength="2281" docExpressionCount="232" docLength="2344" endLine="79" length="4" offset="1809" repeat="4" startLine="79" starttimestamp="1623298372811" timestamp="1525719" timestamp2="1526704">
    <text><![CDATA[ - a]]></text>
  </DocumentChange>
  <Command __id="1150" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 08:21:01 EDT 2021" docASTNodeCount="832" docActiveCodeLength="5375" docExpressionCount="544" docLength="5397" projectName="grailA3" starttimestamp="1623298372811" timestamp="29288939">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.aCollecctionAvatars();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		occupationState = true;¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	¶	@Override¶	public void say(String question) {¶		if(!occupationState) {return;}¶		else if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			knightsTurn = true;¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			knightsTurn = false;	¶			}¶	}¶	@Override¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	@Override¶	public void passed() {¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			occupationState = false;¶			//avatarInZone = null;¶		}¶	}¶	@Override¶	public void failed() {¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			occupationState = false;¶		}¶		else if(knightsTurn && occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="1153" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 08:21:08 EDT 2021" docASTNodeCount="757" docActiveCodeLength="4361" docExpressionCount="536" docLength="4361" projectName="grailA3" starttimestamp="1623298372811" timestamp="29295808">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/MontyAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import grail.extras.Tables;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MontyString;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.AVATAR)¶¶¶public class MontyAvatar implements Avatars {¶	¶	static final double¶		INITIAL_LIMB_RAD = 20,¶		USUAL_LLINE_ANG = (Math.PI/4),¶		USUAL_RLINE_ANG = 3*(Math.PI/4),¶		TORSO_ANGLE = Math.PI/2,¶		TORSO_LENGTH = 50;¶		;¶	static final int¶		ORIG_X = 0,¶		ORIG_Y = 0;¶	static final String AVATAR_SAYS = "Lets Go";¶	¶	StringShape textSpoken;¶	ImageShapes character;¶	AngleShapes arms;¶	AngleShapes legs;¶	MovingL torso;¶	¶	public MontyAvatar(ImageShapes newHead) {¶		character = newHead;¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		armLegMiniFact();¶		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);¶		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	@Override¶	public void armLegMiniFact() {¶		arms = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶	}¶	@Override¶	public StringShape getStringShape() {¶		return textSpoken;¶	}¶	@Override¶	public ImageShapes getHead() {¶		return character;¶	}¶	@Override¶	public AngleShapes getArms() {¶		return arms;¶	}¶	@Override¶	public AngleShapes getLegs() {¶		return legs;¶	}¶	@Override¶	public MovingL getTorso() {¶		return torso;¶	}¶	@Override¶	public void combineFigs(int comunX, int comunY) {¶			¶		arms.getLeftLine().setX(comunX);¶		arms.getLeftLine().setY(comunY);¶		arms.getRightLine().setX(comunX);¶		arms.getRightLine().setY(comunY);¶		¶		torso.setX(comunX);¶		torso.setY(comunY);¶		¶		int lowTorsoY = comunY + torso.getHeight();¶		int lowTorsoX = comunX + torso.getWidth();¶		legs.getLeftLine().setX(lowTorsoX);¶		legs.getLeftLine().setY(lowTorsoY);¶		legs.getRightLine().setX(lowTorsoX);¶		legs.getRightLine().setY(lowTorsoY);¶		¶		¶	}¶	@Override¶	public void moveAvatar(int newX, int newY) {¶		int newAttachX = arms.getLeftLine().getX() + newX;¶		int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newAttachX, newAttachY);¶		int newPicLocX = character.getX() + newX;¶		int newPicLocY = character.getY() + newY;¶		character.setX(newPicLocX);¶		character.setY(newPicLocY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	@Override¶	public void scale(double scaleBy) {¶		double newRadL = arms.getLeftLine().getRadius()*scaleBy;¶		double newRadR = arms.getRightLine().getRadius()*scaleBy;¶		double newRadTo = torso.getRadius()*scaleBy;¶		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());¶		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;¶		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;¶		int newHeadHeight = (int)(character.getHeight()*scaleBy);¶		int newHeadWidth = (int) (character.getWidth()*scaleBy);¶		character.setHeight(newHeadHeight);¶		character.setWidth(newHeadWidth);¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		arms.getLeftLine().setRadius(newRadL);¶		arms.getRightLine().setRadius(newRadR);¶		legs.getLeftLine().setRadius(newRadLegL);¶		legs.getRightLine().setRadius(newRadLegR);¶		torso.setRadius(newRadTo);¶		legs.moveLimbs(ORIG_X, legAttach);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1160" _type="Insert" date="Thu Jun 10 08:21:19 EDT 2021" docASTNodeCount="757" docActiveCodeLength="4365" docExpressionCount="536" docLength="4365" length="4" offset="3175" repeat="2" starttimestamp="1623298372811" timestamp="29306520" timestamp2="29307074">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1164" _type="Replace" date="Thu Jun 10 08:21:20 EDT 2021" docASTNodeCount="757" docActiveCodeLength="4451" docExpressionCount="536" docLength="4451" endLine="114" insertionLength="87" int_docASTNodeCount="757" int_docActiveCodeLength="4364" int_docExpressionCount="536" int_docLength="4364" length="1" offset="3178" startLine="114" starttimestamp="1623298372811" timestamp="29307921">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1165" _type="Insert" date="Thu Jun 10 08:21:20 EDT 2021" docASTNodeCount="763" docActiveCodeLength="4479" docExpressionCount="541" docLength="4479" length="28" offset="31" repeat="2" starttimestamp="1623298372811" timestamp="29307986" timestamp2="29307989">
    <text><![CDATA[import java.awt.Component;

]]></text>
  </DocumentChange>
  <DocumentChange __id="1168" _type="Delete" date="Thu Jun 10 08:21:23 EDT 2021" docASTNodeCount="757" docActiveCodeLength="4451" docExpressionCount="536" docLength="4451" endLine="5" length="28" offset="31" repeat="2" startLine="3" starttimestamp="1623298372811" timestamp="29310250" timestamp2="29310257">
    <text><![CDATA[import java.awt.Component;

]]></text>
  </DocumentChange>
  <DocumentChange __id="1171" _type="Replace" date="Thu Jun 10 08:21:23 EDT 2021" docASTNodeCount="757" docActiveCodeLength="4365" docExpressionCount="536" docLength="4365" endLine="114" insertionLength="1" int_docASTNodeCount="757" int_docActiveCodeLength="4364" int_docExpressionCount="536" int_docLength="4364" length="87" offset="3178" startLine="114" starttimestamp="1623298372811" timestamp="29310263">
    <deletedText><![CDATA[	frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1179" _type="Replace" date="Thu Jun 10 08:21:29 EDT 2021" docASTNodeCount="853" docActiveCodeLength="4863" docExpressionCount="601" docLength="4863" endLine="113" insertionLength="499" int_docASTNodeCount="757" int_docActiveCodeLength="4364" int_docExpressionCount="536" int_docLength="4364" length="1" offset="3176" startLine="113" starttimestamp="1623298372811" timestamp="29316636">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public void moveAvatar(int newX, int newY) {
		int newAttachX = arms.getLeftLine().getX() + newX;
		int newAttachY = arms.getLeftLine().getY() + newY;
		combineFigs(newAttachX, newAttachY);
		int newPicLocX = character.getX() + newX;
		int newPicLocY = character.getY() + newY;
		character.setX(newPicLocX);
		character.setY(newPicLocY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1184" _type="Insert" date="Thu Jun 10 08:21:40 EDT 2021" docASTNodeCount="853" docActiveCodeLength="4865" docExpressionCount="601" docLength="4865" length="2" offset="3210" repeat="2" starttimestamp="1623298372811" timestamp="29327653" timestamp2="29327923">
    <text><![CDATA[To]]></text>
  </DocumentChange>
  <Command __id="1191" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 08:21:48 EDT 2021" docASTNodeCount="133" docActiveCodeLength="788" docExpressionCount="64" docLength="788" projectName="grailA3" starttimestamp="1623298372811" timestamp="29336154">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/FiveAvatars.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import grail.geometryFigs.MovingL;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.annotations.Visible;

@Tags(Comp301Tags.BRIDGE_SCENE)

public interface FiveAvatars {
	
	public Avatars getArthur();
	public Avatars getGalahad();
	public Avatars getGuard();
	public Avatars getLancelot();
	public Avatars getRobin();
	public Gorges getGorge();
	public MovingL getGuardArea();
	public MovingL getKnightArea();
	public void approach(Avatars anAvatar);
	public boolean getOccupied();
	public boolean getKnightTurn();
	public void say(String question);
	public void passed();
	public void failed();
	public void scroll(int moveInX, int moveInY);
	@Visible(false)
	public Avatars getInteractingKnight();
	public void approach(String name);
}]]></snapshot>
  </Command>
  <Command __id="1194" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 08:21:58 EDT 2021" docASTNodeCount="853" docActiveCodeLength="4865" docExpressionCount="601" docLength="4865" projectName="grailA3" starttimestamp="1623298372811" timestamp="29345867">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/MontyAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import grail.extras.Tables;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MontyString;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.AVATAR)¶¶¶public class MontyAvatar implements Avatars {¶	¶	static final double¶		INITIAL_LIMB_RAD = 20,¶		USUAL_LLINE_ANG = (Math.PI/4),¶		USUAL_RLINE_ANG = 3*(Math.PI/4),¶		TORSO_ANGLE = Math.PI/2,¶		TORSO_LENGTH = 50;¶		;¶	static final int¶		ORIG_X = 0,¶		ORIG_Y = 0;¶	static final String AVATAR_SAYS = "Lets Go";¶	¶	StringShape textSpoken;¶	ImageShapes character;¶	AngleShapes arms;¶	AngleShapes legs;¶	MovingL torso;¶	¶	public MontyAvatar(ImageShapes newHead) {¶		character = newHead;¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		armLegMiniFact();¶		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);¶		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	@Override¶	public void armLegMiniFact() {¶		arms = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶	}¶	@Override¶	public StringShape getStringShape() {¶		return textSpoken;¶	}¶	@Override¶	public ImageShapes getHead() {¶		return character;¶	}¶	@Override¶	public AngleShapes getArms() {¶		return arms;¶	}¶	@Override¶	public AngleShapes getLegs() {¶		return legs;¶	}¶	@Override¶	public MovingL getTorso() {¶		return torso;¶	}¶	@Override¶	public void combineFigs(int comunX, int comunY) {¶			¶		arms.getLeftLine().setX(comunX);¶		arms.getLeftLine().setY(comunY);¶		arms.getRightLine().setX(comunX);¶		arms.getRightLine().setY(comunY);¶		¶		torso.setX(comunX);¶		torso.setY(comunY);¶		¶		int lowTorsoY = comunY + torso.getHeight();¶		int lowTorsoX = comunX + torso.getWidth();¶		legs.getLeftLine().setX(lowTorsoX);¶		legs.getLeftLine().setY(lowTorsoY);¶		legs.getRightLine().setX(lowTorsoX);¶		legs.getRightLine().setY(lowTorsoY);¶		¶		¶	}¶	@Override¶	public void moveAvatar(int newX, int newY) {¶		int newAttachX = arms.getLeftLine().getX() + newX;¶		int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newAttachX, newAttachY);¶		int newPicLocX = character.getX() + newX;¶		int newPicLocY = character.getY() + newY;¶		character.setX(newPicLocX);¶		character.setY(newPicLocY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	"), Diff(INSERT,"@Override¶	public void moveAvatarTo(int newX, int newY) {¶		int newAttachX = arms.getLeftLine().getX() + newX;¶		int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newAttachX, newAttachY);¶		int newPicLocX = character.getX() + newX;¶		int newPicLocY = character.getY() + newY;¶		character.setX(newPicLocX);¶		character.setY(newPicLocY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	"), Diff(EQUAL,"¶	@Override¶	public void scale(double scaleBy) {¶		double newRadL = arms.getLeftLine().getRadius()*scaleBy;¶		double newRadR = arms.getRightLine().getRadius()*scaleBy;¶		double newRadTo = torso.getRadius()*scaleBy;¶		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());¶		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;¶		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;¶		int newHeadHeight = (int)(character.getHeight()*scaleBy);¶		int newHeadWidth = (int) (character.getWidth()*scaleBy);¶		character.setHeight(newHeadHeight);¶		character.setWidth(newHeadWidth);¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		arms.getLeftLine().setRadius(newRadL);¶		arms.getRightLine().setRadius(newRadR);¶		legs.getLeftLine().setRadius(newRadLegL);¶		legs.getRightLine().setRadius(newRadLegR);¶		torso.setRadius(newRadTo);¶		legs.moveLimbs(ORIG_X, legAttach);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import grail.extras.Tables;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MontyString;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.StringShape;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.AVATAR)


public class MontyAvatar implements Avatars {
	
	static final double
		INITIAL_LIMB_RAD = 20,
		USUAL_LLINE_ANG = (Math.PI/4),
		USUAL_RLINE_ANG = 3*(Math.PI/4),
		TORSO_ANGLE = Math.PI/2,
		TORSO_LENGTH = 50;
		;
	static final int
		ORIG_X = 0,
		ORIG_Y = 0;
	static final String AVATAR_SAYS = "Lets Go";
	
	StringShape textSpoken;
	ImageShapes character;
	AngleShapes arms;
	AngleShapes legs;
	MovingL torso;
	
	public MontyAvatar(ImageShapes newHead) {
		character = newHead;
		int attachPointX = character.getX() + ((character.getWidth())/2);
		int attachPointY = character.getY() + (character.getHeight());
		armLegMiniFact();
		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);
		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);
		this.combineFigs(attachPointX, attachPointY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	@Override
	public void armLegMiniFact() {
		arms = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);
		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);
	}
	@Override
	public StringShape getStringShape() {
		return textSpoken;
	}
	@Override
	public ImageShapes getHead() {
		return character;
	}
	@Override
	public AngleShapes getArms() {
		return arms;
	}
	@Override
	public AngleShapes getLegs() {
		return legs;
	}
	@Override
	public MovingL getTorso() {
		return torso;
	}
	@Override
	public void combineFigs(int comunX, int comunY) {
			
		arms.getLeftLine().setX(comunX);
		arms.getLeftLine().setY(comunY);
		arms.getRightLine().setX(comunX);
		arms.getRightLine().setY(comunY);
		
		torso.setX(comunX);
		torso.setY(comunY);
		
		int lowTorsoY = comunY + torso.getHeight();
		int lowTorsoX = comunX + torso.getWidth();
		legs.getLeftLine().setX(lowTorsoX);
		legs.getLeftLine().setY(lowTorsoY);
		legs.getRightLine().setX(lowTorsoX);
		legs.getRightLine().setY(lowTorsoY);
		
		
	}
	@Override
	public void moveAvatar(int newX, int newY) {
		int newAttachX = arms.getLeftLine().getX() + newX;
		int newAttachY = arms.getLeftLine().getY() + newY;
		combineFigs(newAttachX, newAttachY);
		int newPicLocX = character.getX() + newX;
		int newPicLocY = character.getY() + newY;
		character.setX(newPicLocX);
		character.setY(newPicLocY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	@Override
	public void moveAvatarTo(int newX, int newY) {
		int newAttachX = arms.getLeftLine().getX() + newX;
		int newAttachY = arms.getLeftLine().getY() + newY;
		combineFigs(newAttachX, newAttachY);
		int newPicLocX = character.getX() + newX;
		int newPicLocY = character.getY() + newY;
		character.setX(newPicLocX);
		character.setY(newPicLocY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	
	
	@Override
	public void scale(double scaleBy) {
		double newRadL = arms.getLeftLine().getRadius()*scaleBy;
		double newRadR = arms.getRightLine().getRadius()*scaleBy;
		double newRadTo = torso.getRadius()*scaleBy;
		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());
		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;
		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;
		int newHeadHeight = (int)(character.getHeight()*scaleBy);
		int newHeadWidth = (int) (character.getWidth()*scaleBy);
		character.setHeight(newHeadHeight);
		character.setWidth(newHeadWidth);
		int attachPointX = character.getX() + ((character.getWidth())/2);
		int attachPointY = character.getY() + (character.getHeight());
		arms.getLeftLine().setRadius(newRadL);
		arms.getRightLine().setRadius(newRadR);
		legs.getLeftLine().setRadius(newRadLegL);
		legs.getRightLine().setRadius(newRadLegR);
		torso.setRadius(newRadTo);
		legs.moveLimbs(ORIG_X, legAttach);
		this.combineFigs(attachPointX, attachPointY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="1197" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 08:22:08 EDT 2021" docASTNodeCount="97" docActiveCodeLength="587" docExpressionCount="51" docLength="587" projectName="grailA3" starttimestamp="1623298372811" timestamp="29355559">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/Avatars.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.StringShape;
import tags301.Comp301Tags;
import util.annotations.Tags;
@Tags(Comp301Tags.AVATAR)

public interface Avatars {
	
	public StringShape getStringShape();
	public ImageShapes getHead();
	public AngleShapes getArms();
	public AngleShapes getLegs();
	public MovingL getTorso();
	public void combineFigs(int commonX, int commonY);
	public void moveAvatar(int newX, int newY);
	public void scale(double scaleBy);
	public void armLegMiniFact();
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1205" _type="Insert" date="Thu Jun 10 08:22:21 EDT 2021" docASTNodeCount="97" docActiveCodeLength="589" docExpressionCount="51" docLength="589" length="2" offset="512" starttimestamp="1623298372811" timestamp="29368564">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1207" _type="Replace" date="Thu Jun 10 08:22:21 EDT 2021" docASTNodeCount="107" docActiveCodeLength="632" docExpressionCount="54" docLength="632" endLine="18" insertionLength="44" int_docASTNodeCount="97" int_docActiveCodeLength="588" int_docExpressionCount="51" int_docLength="588" length="1" offset="513" startLine="18" starttimestamp="1623298372811" timestamp="29369011">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public void moveAvatar(int newX, int newY);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1211" _type="Insert" date="Thu Jun 10 08:22:24 EDT 2021" docASTNodeCount="107" docActiveCodeLength="634" docExpressionCount="54" docLength="634" length="2" offset="536" repeat="2" starttimestamp="1623298372811" timestamp="29371842" timestamp2="29372140">
    <text><![CDATA[To]]></text>
  </DocumentChange>
  <Command __id="1218" _type="DiffBasedFileOpenCommand" date="Thu Jun 10 08:22:28 EDT 2021" docASTNodeCount="853" docActiveCodeLength="4865" docExpressionCount="601" docLength="4865" projectName="grailA3" starttimestamp="1623298372811" timestamp="29375347">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA3/src/grail/compositeFigs/MontyAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import grail.extras.Tables;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MontyString;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.AVATAR)¶¶¶public class MontyAvatar implements Avatars {¶	¶	static final double¶		INITIAL_LIMB_RAD = 20,¶		USUAL_LLINE_ANG = (Math.PI/4),¶		USUAL_RLINE_ANG = 3*(Math.PI/4),¶		TORSO_ANGLE = Math.PI/2,¶		TORSO_LENGTH = 50;¶		;¶	static final int¶		ORIG_X = 0,¶		ORIG_Y = 0;¶	static final String AVATAR_SAYS = "Lets Go";¶	¶	StringShape textSpoken;¶	ImageShapes character;¶	AngleShapes arms;¶	AngleShapes legs;¶	MovingL torso;¶	¶	public MontyAvatar(ImageShapes newHead) {¶		character = newHead;¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		armLegMiniFact();¶		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);¶		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	@Override¶	public void armLegMiniFact() {¶		arms = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶	}¶	@Override¶	public StringShape getStringShape() {¶		return textSpoken;¶	}¶	@Override¶	public ImageShapes getHead() {¶		return character;¶	}¶	@Override¶	public AngleShapes getArms() {¶		return arms;¶	}¶	@Override¶	public AngleShapes getLegs() {¶		return legs;¶	}¶	@Override¶	public MovingL getTorso() {¶		return torso;¶	}¶	@Override¶	public void combineFigs(int comunX, int comunY) {¶			¶		arms.getLeftLine().setX(comunX);¶		arms.getLeftLine().setY(comunY);¶		arms.getRightLine().setX(comunX);¶		arms.getRightLine().setY(comunY);¶		¶		torso.setX(comunX);¶		torso.setY(comunY);¶		¶		int lowTorsoY = comunY + torso.getHeight();¶		int lowTorsoX = comunX + torso.getWidth();¶		legs.getLeftLine().setX(lowTorsoX);¶		legs.getLeftLine().setY(lowTorsoY);¶		legs.getRightLine().setX(lowTorsoX);¶		legs.getRightLine().setY(lowTorsoY);¶		¶		¶	}¶	@Override¶	public void moveAvatar(int newX, int newY) {¶		int newAttachX = arms.getLeftLine().getX() + newX;¶		int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newAttachX, newAttachY);¶		int newPicLocX = character.getX() + newX;¶		int newPicLocY = character.getY() + newY;¶		character.setX(newPicLocX);¶		character.setY(newPicLocY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	@Override¶	public void moveAvatarTo(int newX, int newY) {¶		int newAttachX = arms.getLeftLine().getX() + newX;¶		int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newAttachX, newAttachY);¶		int newPicLocX = character.getX() + newX;¶		int newPicLocY = character.getY() + newY;¶		character.setX(newPicLocX);¶		character.setY(newPicLocY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	¶	@Override¶	public void scale(double scaleBy) {¶		double newRadL = arms.getLeftLine().getRadius()*scaleBy;¶		double newRadR = arms.getRightLine().getRadius()*scaleBy;¶		double newRadTo = torso.getRadius()*scaleBy;¶		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());¶		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;¶		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;¶		int newHeadHeight = (int)(character.getHeight()*scaleBy);¶		int newHeadWidth = (int) (character.getWidth()*scaleBy);¶		character.setHeight(newHeadHeight);¶		character.setWidth(newHeadWidth);¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		arms.getLeftLine().setRadius(newRadL);¶		arms.getRightLine().setRadius(newRadR);¶		legs.getLeftLine().setRadius(newRadLegL);¶		legs.getRightLine().setRadius(newRadLegR);¶		torso.setRadius(newRadTo);¶		legs.moveLimbs(ORIG_X, legAttach);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1224" _type="Insert" date="Thu Jun 10 08:22:43 EDT 2021" docASTNodeCount="842" docActiveCodeLength="4815" docExpressionCount="593" docLength="4867" length="2" offset="3237" repeat="2" starttimestamp="1623298372811" timestamp="29390343" timestamp2="29390499">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1236" _type="Insert" date="Thu Jun 10 08:22:45 EDT 2021" docASTNodeCount="831" docActiveCodeLength="4765" docExpressionCount="585" docLength="4869" length="2" offset="3292" repeat="2" starttimestamp="1623298372811" timestamp="29392459" timestamp2="29392660">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1245" _type="Delete" date="Thu Jun 10 08:22:51 EDT 2021" docASTNodeCount="831" docActiveCodeLength="4759" docExpressionCount="585" docLength="4863" endLine="117" length="6" offset="3362" repeat="6" startLine="117" starttimestamp="1623298372811" timestamp="29398374" timestamp2="29399432">
    <text><![CDATA[Attach]]></text>
  </DocumentChange>
  <DocumentChange __id="1266" _type="Delete" date="Thu Jun 10 08:22:55 EDT 2021" docASTNodeCount="831" docActiveCodeLength="4753" docExpressionCount="585" docLength="4857" endLine="117" length="6" offset="3368" repeat="6" startLine="117" starttimestamp="1623298372811" timestamp="29402534" timestamp2="29404023">
    <text><![CDATA[Attach]]></text>
  </DocumentChange>
  <Command __id="1285" _type="PauseCommand" date="Thu Jun 10 08:23:34 EDT 2021" range="30s-1m" starttimestamp="1623298372811" timestamp="29441299">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[37273]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1284" _type="MoveCaretCommand" caretOffset="3374" date="Thu Jun 10 08:23:34 EDT 2021" docOffset="3374" starttimestamp="1623298372811" timestamp="29441299" />
  <Command __id="1286" _type="MoveCaretCommand" caretOffset="3374" date="Thu Jun 10 08:23:34 EDT 2021" docOffset="3374" starttimestamp="1623298372811" timestamp="29441302" />
  <DocumentChange __id="1287" _type="Insert" date="Thu Jun 10 08:23:35 EDT 2021" docASTNodeCount="822" docActiveCodeLength="4712" docExpressionCount="579" docLength="4859" length="2" offset="3374" repeat="2" starttimestamp="1623298372811" timestamp="29442251" timestamp2="29442404">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1288" _type="InsertStringCommand" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442256" timestamp2="29442256">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1289" _type="InsertStringCommand" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442256" timestamp2="29442256">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1291" _type="InsertStringCommand" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442407" timestamp2="29442407">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1292" _type="InsertStringCommand" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442407" timestamp2="29442407">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1293" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442542" />
  <Command __id="1294" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442542" />
  <Command __id="1295" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442789" />
  <Command __id="1296" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:23:35 EDT 2021" starttimestamp="1623298372811" timestamp="29442789" />
  <Command __id="1297" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:23:36 EDT 2021" starttimestamp="1623298372811" timestamp="29443281" />
  <Command __id="1298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:23:36 EDT 2021" starttimestamp="1623298372811" timestamp="29443281" />
  <Command __id="1300" _type="InsertStringCommand" date="Thu Jun 10 08:23:36 EDT 2021" starttimestamp="1623298372811" timestamp="29443646" timestamp2="29443646">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1301" _type="InsertStringCommand" date="Thu Jun 10 08:23:36 EDT 2021" starttimestamp="1623298372811" timestamp="29443647" timestamp2="29443647">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1303" _type="InsertStringCommand" date="Thu Jun 10 08:23:37 EDT 2021" starttimestamp="1623298372811" timestamp="29444269" timestamp2="29444269">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1304" _type="InsertStringCommand" date="Thu Jun 10 08:23:37 EDT 2021" starttimestamp="1623298372811" timestamp="29444269" timestamp2="29444269">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="1299" _type="Insert" date="Thu Jun 10 08:23:36 EDT 2021" docASTNodeCount="813" docActiveCodeLength="4671" docExpressionCount="573" docLength="4861" length="2" offset="3420" repeat="2" starttimestamp="1623298372811" timestamp="29443642" timestamp2="29444266">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1306" _type="PauseCommand" date="Thu Jun 10 08:23:38 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29446178">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1909]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1305" _type="MoveCaretCommand" caretOffset="3491" date="Thu Jun 10 08:23:38 EDT 2021" docOffset="3491" starttimestamp="1623298372811" timestamp="29446178" />
  <Command __id="1307" _type="MoveCaretCommand" caretOffset="3491" date="Thu Jun 10 08:23:38 EDT 2021" docOffset="3491" starttimestamp="1623298372811" timestamp="29446179" />
  <Command __id="1308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:23:39 EDT 2021" starttimestamp="1623298372811" timestamp="29446824" />
  <Command __id="1309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Jun 10 08:23:39 EDT 2021" starttimestamp="1623298372811" timestamp="29446824" />
  <Command __id="1311" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:40 EDT 2021" starttimestamp="1623298372811" timestamp="29447808" />
  <Command __id="1312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:40 EDT 2021" starttimestamp="1623298372811" timestamp="29447808" />
  <Command __id="1314" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:40 EDT 2021" starttimestamp="1623298372811" timestamp="29447988" />
  <Command __id="1315" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:40 EDT 2021" starttimestamp="1623298372811" timestamp="29447988" />
  <Command __id="1317" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:40 EDT 2021" starttimestamp="1623298372811" timestamp="29448145" />
  <Command __id="1318" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:40 EDT 2021" starttimestamp="1623298372811" timestamp="29448145" />
  <Command __id="1320" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:41 EDT 2021" starttimestamp="1623298372811" timestamp="29448296" />
  <Command __id="1321" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:41 EDT 2021" starttimestamp="1623298372811" timestamp="29448296" />
  <Command __id="1323" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:41 EDT 2021" starttimestamp="1623298372811" timestamp="29448483" />
  <Command __id="1324" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:41 EDT 2021" starttimestamp="1623298372811" timestamp="29448483" />
  <Command __id="1327" _type="PauseCommand" date="Thu Jun 10 08:23:42 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29450059">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1576]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1326" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:42 EDT 2021" starttimestamp="1623298372811" timestamp="29450059" />
  <Command __id="1328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:42 EDT 2021" starttimestamp="1623298372811" timestamp="29450060" />
  <Command __id="1330" _type="PauseCommand" date="Thu Jun 10 08:23:44 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29451739">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1679]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1329" _type="MoveCaretCommand" caretOffset="3514" date="Thu Jun 10 08:23:44 EDT 2021" docOffset="3514" starttimestamp="1623298372811" timestamp="29451739" />
  <Command __id="1331" _type="MoveCaretCommand" caretOffset="3514" date="Thu Jun 10 08:23:44 EDT 2021" docOffset="3514" starttimestamp="1623298372811" timestamp="29451740" />
  <Command __id="1333" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452287" />
  <Command __id="1334" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452287" />
  <Command __id="1336" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452444" />
  <Command __id="1337" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452444" />
  <Command __id="1339" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452621" />
  <Command __id="1340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452622" />
  <Command __id="1342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452780" />
  <Command __id="1343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452780" />
  <Command __id="1345" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452935" />
  <Command __id="1346" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29452935" />
  <Command __id="1348" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29453118" />
  <Command __id="1349" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Jun 10 08:23:45 EDT 2021" starttimestamp="1623298372811" timestamp="29453118" />
  <Command __id="1351" _type="PauseCommand" date="Thu Jun 10 08:24:04 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="29471934">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[18816]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1352" _type="MoveCaretCommand" caretOffset="1460" date="Thu Jun 10 08:24:04 EDT 2021" docOffset="1926" starttimestamp="1623298372811" timestamp="29472114" />
  <Command __id="1354" _type="PauseCommand" date="Thu Jun 10 08:24:10 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29477612">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5498]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1355" _type="MoveCaretCommand" caretOffset="1489" date="Thu Jun 10 08:24:10 EDT 2021" docOffset="1809" starttimestamp="1623298372811" timestamp="29477786" />
  <Command __id="1357" _type="PauseCommand" date="Thu Jun 10 08:24:15 EDT 2021" range="5s-10s" starttimestamp="1623298372811" timestamp="29482909">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5123]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1356" _type="MoveCaretCommand" caretOffset="1484" date="Thu Jun 10 08:24:15 EDT 2021" docOffset="1804" starttimestamp="1623298372811" timestamp="29482909" />
  <Command __id="1358" _type="MoveCaretCommand" caretOffset="1484" date="Thu Jun 10 08:24:15 EDT 2021" docOffset="1804" starttimestamp="1623298372811" timestamp="29482909" />
  <Command __id="1360" _type="PauseCommand" date="Thu Jun 10 08:24:16 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29484051">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1142]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1361" _type="InsertStringCommand" date="Thu Jun 10 08:24:16 EDT 2021" starttimestamp="1623298372811" timestamp="29484057" timestamp2="29484057">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1362" _type="InsertStringCommand" date="Thu Jun 10 08:24:16 EDT 2021" starttimestamp="1623298372811" timestamp="29484057" timestamp2="29484057">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1364" _type="InsertStringCommand" date="Thu Jun 10 08:24:17 EDT 2021" starttimestamp="1623298372811" timestamp="29484374" timestamp2="29484374">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1365" _type="InsertStringCommand" date="Thu Jun 10 08:24:17 EDT 2021" starttimestamp="1623298372811" timestamp="29484374" timestamp2="29484374">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1367" _type="PauseCommand" date="Thu Jun 10 08:24:18 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29485680">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1306]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1366" _type="MoveCaretCommand" caretOffset="1552" date="Thu Jun 10 08:24:18 EDT 2021" docOffset="1872" starttimestamp="1623298372811" timestamp="29485680" />
  <Command __id="1368" _type="MoveCaretCommand" caretOffset="1552" date="Thu Jun 10 08:24:18 EDT 2021" docOffset="1872" starttimestamp="1623298372811" timestamp="29485680" />
  <Command __id="1370" _type="PauseCommand" date="Thu Jun 10 08:24:19 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29486998">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1318]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1371" _type="InsertStringCommand" date="Thu Jun 10 08:24:19 EDT 2021" starttimestamp="1623298372811" timestamp="29487004" timestamp2="29487004">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1372" _type="InsertStringCommand" date="Thu Jun 10 08:24:19 EDT 2021" starttimestamp="1623298372811" timestamp="29487004" timestamp2="29487004">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1374" _type="InsertStringCommand" date="Thu Jun 10 08:24:20 EDT 2021" starttimestamp="1623298372811" timestamp="29487343" timestamp2="29487343">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1375" _type="InsertStringCommand" date="Thu Jun 10 08:24:20 EDT 2021" starttimestamp="1623298372811" timestamp="29487343" timestamp2="29487343">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1377" _type="PauseCommand" date="Thu Jun 10 08:24:22 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29489224">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1881]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1376" _type="MoveCaretCommand" caretOffset="1622" date="Thu Jun 10 08:24:22 EDT 2021" docOffset="1942" starttimestamp="1623298372811" timestamp="29489224" />
  <Command __id="1378" _type="MoveCaretCommand" caretOffset="1622" date="Thu Jun 10 08:24:22 EDT 2021" docOffset="1942" starttimestamp="1623298372811" timestamp="29489224" />
  <Command __id="1380" _type="InsertStringCommand" date="Thu Jun 10 08:24:22 EDT 2021" starttimestamp="1623298372811" timestamp="29490083" timestamp2="29490083">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1381" _type="InsertStringCommand" date="Thu Jun 10 08:24:22 EDT 2021" starttimestamp="1623298372811" timestamp="29490083" timestamp2="29490083">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1383" _type="InsertStringCommand" date="Thu Jun 10 08:24:23 EDT 2021" starttimestamp="1623298372811" timestamp="29490421" timestamp2="29490421">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1384" _type="InsertStringCommand" date="Thu Jun 10 08:24:23 EDT 2021" starttimestamp="1623298372811" timestamp="29490421" timestamp2="29490421">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1386" _type="PauseCommand" date="Thu Jun 10 08:24:25 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29492304">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1883]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1385" _type="MoveCaretCommand" caretOffset="1688" date="Thu Jun 10 08:24:25 EDT 2021" docOffset="2008" starttimestamp="1623298372811" timestamp="29492304" />
  <Command __id="1387" _type="MoveCaretCommand" caretOffset="1688" date="Thu Jun 10 08:24:25 EDT 2021" docOffset="2008" starttimestamp="1623298372811" timestamp="29492304" />
  <Command __id="1389" _type="InsertStringCommand" date="Thu Jun 10 08:24:26 EDT 2021" starttimestamp="1623298372811" timestamp="29493260" timestamp2="29493260">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1390" _type="InsertStringCommand" date="Thu Jun 10 08:24:26 EDT 2021" starttimestamp="1623298372811" timestamp="29493261" timestamp2="29493261">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1392" _type="InsertStringCommand" date="Thu Jun 10 08:24:26 EDT 2021" starttimestamp="1623298372811" timestamp="29493664" timestamp2="29493664">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1393" _type="InsertStringCommand" date="Thu Jun 10 08:24:26 EDT 2021" starttimestamp="1623298372811" timestamp="29493664" timestamp2="29493664">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1395" _type="PauseCommand" date="Thu Jun 10 08:24:28 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29495872">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2208]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1394" _type="MoveCaretCommand" caretOffset="1754" date="Thu Jun 10 08:24:28 EDT 2021" docOffset="2074" starttimestamp="1623298372811" timestamp="29495872" />
  <Command __id="1396" _type="MoveCaretCommand" caretOffset="1754" date="Thu Jun 10 08:24:28 EDT 2021" docOffset="2074" starttimestamp="1623298372811" timestamp="29495872" />
  <Command __id="1397" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Jun 10 08:24:29 EDT 2021" starttimestamp="1623298372811" timestamp="29496833" />
  <Command __id="1398" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Jun 10 08:24:29 EDT 2021" starttimestamp="1623298372811" timestamp="29496833" />
  <Command __id="1400" _type="InsertStringCommand" date="Thu Jun 10 08:24:30 EDT 2021" starttimestamp="1623298372811" timestamp="29497423" timestamp2="29497423">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1401" _type="InsertStringCommand" date="Thu Jun 10 08:24:30 EDT 2021" starttimestamp="1623298372811" timestamp="29497423" timestamp2="29497423">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1403" _type="InsertStringCommand" date="Thu Jun 10 08:24:30 EDT 2021" starttimestamp="1623298372811" timestamp="29497916" timestamp2="29497916">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1404" _type="InsertStringCommand" date="Thu Jun 10 08:24:30 EDT 2021" starttimestamp="1623298372811" timestamp="29497916" timestamp2="29497916">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1406" _type="PauseCommand" date="Thu Jun 10 08:24:32 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29499841">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1925]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1405" _type="MoveCaretCommand" caretOffset="1810" date="Thu Jun 10 08:24:32 EDT 2021" docOffset="2130" starttimestamp="1623298372811" timestamp="29499841" />
  <Command __id="1407" _type="MoveCaretCommand" caretOffset="1810" date="Thu Jun 10 08:24:32 EDT 2021" docOffset="2130" starttimestamp="1623298372811" timestamp="29499841" />
  <Command __id="1409" _type="InsertStringCommand" date="Thu Jun 10 08:24:33 EDT 2021" starttimestamp="1623298372811" timestamp="29500820" timestamp2="29500820">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1410" _type="InsertStringCommand" date="Thu Jun 10 08:24:33 EDT 2021" starttimestamp="1623298372811" timestamp="29500820" timestamp2="29500820">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1412" _type="InsertStringCommand" date="Thu Jun 10 08:24:33 EDT 2021" starttimestamp="1623298372811" timestamp="29501155" timestamp2="29501155">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1413" _type="InsertStringCommand" date="Thu Jun 10 08:24:33 EDT 2021" starttimestamp="1623298372811" timestamp="29501155" timestamp2="29501155">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1415" _type="PauseCommand" date="Thu Jun 10 08:24:35 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29502933">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1778]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1414" _type="MoveCaretCommand" caretOffset="1868" date="Thu Jun 10 08:24:35 EDT 2021" docOffset="2188" starttimestamp="1623298372811" timestamp="29502933" />
  <Command __id="1416" _type="MoveCaretCommand" caretOffset="1868" date="Thu Jun 10 08:24:35 EDT 2021" docOffset="2188" starttimestamp="1623298372811" timestamp="29502934" />
  <Command __id="1418" _type="InsertStringCommand" date="Thu Jun 10 08:24:36 EDT 2021" starttimestamp="1623298372811" timestamp="29503699" timestamp2="29503699">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1419" _type="InsertStringCommand" date="Thu Jun 10 08:24:36 EDT 2021" starttimestamp="1623298372811" timestamp="29503699" timestamp2="29503699">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1421" _type="InsertStringCommand" date="Thu Jun 10 08:24:36 EDT 2021" starttimestamp="1623298372811" timestamp="29504034" timestamp2="29504034">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1422" _type="InsertStringCommand" date="Thu Jun 10 08:24:36 EDT 2021" starttimestamp="1623298372811" timestamp="29504034" timestamp2="29504034">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1424" _type="PauseCommand" date="Thu Jun 10 08:24:38 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29506096">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2062]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1423" _type="MoveCaretCommand" caretOffset="1918" date="Thu Jun 10 08:24:38 EDT 2021" docOffset="2238" starttimestamp="1623298372811" timestamp="29506096" />
  <Command __id="1425" _type="MoveCaretCommand" caretOffset="1918" date="Thu Jun 10 08:24:38 EDT 2021" docOffset="2238" starttimestamp="1623298372811" timestamp="29506096" />
  <Command __id="1427" _type="PauseCommand" date="Thu Jun 10 08:24:39 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29507158">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1062]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1428" _type="InsertStringCommand" date="Thu Jun 10 08:24:39 EDT 2021" starttimestamp="1623298372811" timestamp="29507164" timestamp2="29507164">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1429" _type="InsertStringCommand" date="Thu Jun 10 08:24:39 EDT 2021" starttimestamp="1623298372811" timestamp="29507164" timestamp2="29507164">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1431" _type="InsertStringCommand" date="Thu Jun 10 08:24:40 EDT 2021" starttimestamp="1623298372811" timestamp="29507525" timestamp2="29507525">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1432" _type="InsertStringCommand" date="Thu Jun 10 08:24:40 EDT 2021" starttimestamp="1623298372811" timestamp="29507525" timestamp2="29507525">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1434" _type="PauseCommand" date="Thu Jun 10 08:24:56 EDT 2021" range="10s-20s" starttimestamp="1623298372811" timestamp="29523768">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[16243]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1435" _type="MoveCaretCommand" caretOffset="1460" date="Thu Jun 10 08:24:56 EDT 2021" docOffset="1926" starttimestamp="1623298372811" timestamp="29523910" />
  <Command __id="1437" _type="PauseCommand" date="Thu Jun 10 08:24:58 EDT 2021" range="2s-5s" starttimestamp="1623298372811" timestamp="29526026">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2116]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1436" _type="ShellCommand" date="Thu Jun 10 08:24:58 EDT 2021" starttimestamp="1623298372811" timestamp="29526026" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1439" _type="PauseCommand" date="Thu Jun 10 08:25:00 EDT 2021" range="1s-2s" starttimestamp="1623298372811" timestamp="29527552">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1526]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1438" _type="ShellCommand" date="Thu Jun 10 08:25:00 EDT 2021" starttimestamp="1623298372811" timestamp="29527552" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1440" _type="EclipseCommand" commandID="" date="Thu Jun 10 08:25:00 EDT 2021" starttimestamp="1623298372811" timestamp="29527701" />
  <Command __id="1441" _type="EclipseCommand" commandID="" date="Thu Jun 10 08:25:00 EDT 2021" starttimestamp="1623298372811" timestamp="29527763" />
  <Command __id="1442" _type="RunCommand" date="Thu Jun 10 08:25:01 EDT 2021" kind="HitBreakPoint" projectName="grailA3" starttimestamp="1623298372811" timestamp="29528437" type="Run" />
  <Command __id="1443" _type="ShellCommand" date="Thu Jun 10 08:25:01 EDT 2021" starttimestamp="1623298372811" timestamp="29528978" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1448" _type="PauseCommand" date="Thu Jun 10 08:51:32 EDT 2021" range="20m-30m" starttimestamp="1623298372811" timestamp="31119958">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1582274]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1447" _type="ShellCommand" date="Thu Jun 10 08:51:32 EDT 2021" starttimestamp="1623298372811" timestamp="31119957" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1450" _type="PauseCommand" date="Thu Jun 10 08:55:20 EDT 2021" range="2m-5m" starttimestamp="1623298372811" timestamp="31347767">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[227810]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1451" _type="MoveCaretCommand" caretOffset="502" date="Thu Jun 10 08:55:20 EDT 2021" docOffset="634" starttimestamp="1623298372811" timestamp="31347910" />
</Events>
