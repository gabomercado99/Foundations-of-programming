<Events startTimestamp="1624232406782" logVersion="1.0.0.202106071651">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="3022" date="Sun Jun 20 19:40:07 EDT 2021" docOffset="3891" starttimestamp="1624232406782" timestamp="420" />
  <Command __id="3" _type="PauseCommand" date="Sun Jun 20 19:40:15 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="8978">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8553]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2" _type="ShellCommand" date="Sun Jun 20 19:40:15 EDT 2021" starttimestamp="1624232406782" timestamp="8973" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5" _type="PauseCommand" date="Sun Jun 20 19:40:40 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="34046">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25073]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4" _type="ShellCommand" date="Sun Jun 20 19:40:40 EDT 2021" starttimestamp="1624232406782" timestamp="34046" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="10" _type="PauseCommand" date="Sun Jun 20 19:40:49 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="43148">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5187]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="9" _type="RunCommand" date="Sun Jun 20 19:40:49 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="43147" type="Run" />
  <Command __id="11" _type="RunCommand" date="Sun Jun 20 19:40:49 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="43148" type="Run" />
  <Command __id="12" _type="ShellCommand" date="Sun Jun 20 19:40:50 EDT 2021" starttimestamp="1624232406782" timestamp="43585" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="14" _type="PauseCommand" date="Sun Jun 20 19:41:06 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="60057">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16472]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="13" _type="ConsoleOutput" date="Sun Jun 20 19:41:06 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="60057" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 19:41:06 EDT 2021
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="16" _type="PauseCommand" date="Sun Jun 20 19:41:08 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="61815">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1758]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="15" _type="ConsoleOutput" date="Sun Jun 20 19:41:08 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="61815" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:121
Running second pass checks Sun Jun 20 19:41:08 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 19:41:08 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:121¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Sun Jun 20 19:41:08 EDT 2021¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Sun Jun 20 19:41:0"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="17" _type="ConsoleOutput" date="Sun Jun 20 19:41:08 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="61903" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 19:41:08 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:121¶Running second pass checks Sun Jun 20 19:41:08 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 19:41:08 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="18" _type="ConsoleOutput" date="Sun Jun 20 19:41:09 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="62509" type="ConsoleOutput">
    <outputString><![CDATA[Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method calls:Sun Jun 20 19:41:08 EDT 2021"), Diff(INSERT,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="19" _type="ConsoleOutput" date="Sun Jun 20 19:41:09 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="63128" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 19:41:09 EDT 2021
Generating checks:Sun Jun 20 19:41:09 EDT 2021
Finished Generating checks:Sun Jun 20 19:41:09 EDT 2021
Generating externals:Sun Jun 20 19:41:09 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 19:41:09 EDT 2021¶Generating checks:Sun Jun 20 19:41:09 EDT 2021¶Finished Generating checks:Sun Jun 20 19:41:09 EDT 2021¶Generating externals:Sun Jun 20 19:41:09 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="20" _type="ConsoleOutput" date="Sun Jun 20 19:41:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="63436" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 19:41:10 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 19:41:09 EDT 2021¶Generating checks:Sun Jun 20 19:41:09 EDT 2021¶Finished Generating checks:Sun Jun 20 19:41:09 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 19:41:"), Diff(INSERT,"1"), Diff(EQUAL,"0"), Diff(DELETE,"9"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="21" _type="ConsoleOutput" date="Sun Jun 20 19:41:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="63538" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-5,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 19:41:10 EDT 2021"), Diff(INSERT,"Thread[Thread-5,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="22" _type="ConsoleOutput" date="Sun Jun 20 19:41:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="63600" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-6,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="23" _type="ConsoleOutput" date="Sun Jun 20 19:41:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="63656" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-7,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="24" _type="ConsoleOutput" date="Sun Jun 20 19:41:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="63710" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-8,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="26" _type="PauseCommand" date="Sun Jun 20 19:41:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="64769">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1058]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="25" _type="ConsoleOutput" date="Sun Jun 20 19:41:11 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="64768" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-5,5,main]: after wait
Thread[Thread-8,5,main]: after wait
Thread[Thread-7,5,main]: after wait
Thread[Thread-6,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"Thread-8,5,main]: before"), Diff(INSERT,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-8,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="28" _type="PauseCommand" date="Sun Jun 20 19:41:22 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="75303">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10535]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="27" _type="ExceptionCommand" date="Sun Jun 20 19:41:22 EDT 2021" starttimestamp="1624232406782" timestamp="75303" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Method matching lockstepArthur not found in class: class grail.compositeFigs.FiveChars
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.project.AGradedClassProxyInvocationHandler.invoke(AGradedClassProxyInvocationHandler.java:25)
	at com.sun.proxy.$Proxy22.lockstepArthur(Unknown Source)
	at gradingTools.comp301ss21.assignment4.coordination.LockstepAvatars.doLockstepArthur(LockstepAvatars.java:37)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.executeOperations(LockstepAvatarsAnimationTestCase.java:176)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:241)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="29" _type="ConsoleOutput" date="Sun Jun 20 19:41:22 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="75333" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Method matching lockstepArthur not found in class: class grail.compositeFigs.FiveChars
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.project.AGradedClassProxyInvocationHandler.invoke(AGradedClassProxyInvocationHandler.java:25)
	at com.sun.proxy.$Proxy22.lockstepArthur(Unknown Source)
	at gradingTools.comp301ss21.assignment4.coordination.LockstepAvatars.doLockstepArthur(LockstepAvatars.java:37)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.executeOperations(LockstepAvatarsAnimationTestCase.java:176)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:241)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-8,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait"), Diff(INSERT,"java.lang.AssertionError: Method matching lockstepArthur not found in class: class grail.compositeFigs.FiveChars¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.project.AGradedClassProxyInvocationHandler.invoke(AGradedClassProxyInvocationHandler.java:25)¶	at com.sun.proxy.$Proxy22.lockstepArthur(Unknown Source)¶	at gradingTools.comp301ss21.assignment4.coordination.LockstepAvatars.doLockstepArthur(LockstepAvatars.java:37)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.executeOperations(LockstepAvatarsAnimationTestCase.java:176)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:241)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="31" _type="PauseCommand" date="Sun Jun 20 19:41:55 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="108437">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[33104]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="30" _type="ConsoleOutput" date="Sun Jun 20 19:41:55 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="108437" type="ConsoleOutput">
    <outputString><![CDATA[
SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Method matching lockstepArthur not found in class: class grail.compositeFigs.FiveChars¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.project.AGradedClassProxyInvocationHandler.invoke(AGradedClassProxyInvocationHandler.java:25)¶	at com.sun.proxy.$Proxy22.lockstepArthur(Unknown Source)¶	at gradingTools.comp301ss21.assignment4.coordination.LockstepAvatars.doLockstepArthur(LockstepAvatars.java:37)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.executeOperations(LockstepAvatarsAnimationTestCase.java:176)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:241)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)"), Diff(INSERT,"¶SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="32" _type="ExceptionCommand" date="Sun Jun 20 19:41:55 EDT 2021" starttimestamp="1624232406782" timestamp="108462" type="Exception">
    <exceptionString><![CDATA[
SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0
java.beans.PropertyChangeEvent[propertyName=X; oldValue=360; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@15788231]
Execution exception caused by invocation exception caused by:
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
SceneControllerButtonDynamics did not pass completely:java.lang.ClassCastException class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="34" _type="PauseCommand" date="Sun Jun 20 19:42:55 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="168544">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[60082]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="33" _type="ExceptionCommand" date="Sun Jun 20 19:42:55 EDT 2021" starttimestamp="1624232406782" timestamp="168544" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=410; propagationId=null; source=grail.geometryFigs.RotatingLine@15788231]
Exception in thread "Thread-9" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.beans.PropertyChangeEvent[propertyName=X; oldValue=410; newValue=420; propagationId=null; source=grail.geometryFigs.RotatingLine@15788231]
Exception in thread "Thread-10" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="36" _type="PauseCommand" date="Sun Jun 20 19:42:59 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="173121">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[4577]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="35" _type="ExceptionCommand" date="Sun Jun 20 19:42:59 EDT 2021" starttimestamp="1624232406782" timestamp="173121" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="37" _type="ConsoleOutput" date="Sun Jun 20 19:42:59 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="173183" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyCh"), Diff(INSERT,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationM"), Diff(EQUAL,"an"), Diff(INSERT,"a"), Diff(EQUAL,"ge"), Diff(DELETE,"Listener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0"), Diff(INSERT,"r.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="38" _type="ExceptionCommand" date="Sun Jun 20 19:43:00 EDT 2021" starttimestamp="1624232406782" timestamp="173631" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=360; newValue=370; propagationId=null; source=grail.geometryFigs.RotatingLine@6da78517]
Exception in thread "Thread-11" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.beans.PropertyChangeEvent[propertyName=X; oldValue=370; newValue=380; propagationId=null; source=grail.geometryFigs.RotatingLine@6da78517]
Exception in thread "Thread-12" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="39" _type="ConsoleOutput" date="Sun Jun 20 19:43:00 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="173815" type="ConsoleOutput">
    <outputString><![CDATA[	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCas"), Diff(INSERT,"	at grail.geometryFigs.Alocatable.setX(Alocatabl"), Diff(EQUAL,"e.java:"), Diff(DELETE,"246"), Diff(INSERT,"40"), Diff(EQUAL,")¶	at gra"), Diff(DELETE,"dingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"il.compositeFigs.MontyAvatar.combineFigs(MontyAvatar"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"92"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)¶	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"17"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"1538"), Diff(INSERT,"30"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011"), Diff(INSERT,"java.base/java.lang.Thread.run(Thread.java:834"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="41" _type="PauseCommand" date="Sun Jun 20 19:43:06 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="179244">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5429]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="40" _type="ExceptionCommand" date="Sun Jun 20 19:43:06 EDT 2021" starttimestamp="1624232406782" timestamp="179244" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="42" _type="ConsoleOutput" date="Sun Jun 20 19:43:06 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="179288" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)¶	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)¶	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar"), Diff(INSERT,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"113"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at "), Diff(DELETE,"AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimato"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManage"), Diff(EQUAL,"r.java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"30"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.Thread.run(Thread"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"834"), Diff(INSERT,"5011"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="43" _type="ExceptionCommand" date="Sun Jun 20 19:43:06 EDT 2021" starttimestamp="1624232406782" timestamp="179754" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=430; propagationId=null; source=grail.geometryFigs.RotatingLine@79bc4acf]
Exception in thread "Thread-13" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.beans.PropertyChangeEvent[propertyName=X; oldValue=430; newValue=440; propagationId=null; source=grail.geometryFigs.RotatingLine@79bc4acf]
Exception in thread "Thread-14" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="44" _type="ConsoleOutput" date="Sun Jun 20 19:43:06 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="179915" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶"), Diff(EQUAL,"	at gradingTools.comp"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,"01"), Diff(DELETE,"f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics"), Diff(EQUAL,".java:12"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelp"), Diff(EQUAL,"er.java:"), Diff(DELETE,"28"), Diff(INSERT,"4"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"grail.geometryFigs.Alocatable.setX(Alocatabl"), Diff(EQUAL,"e.java:"), Diff(DELETE,"187"), Diff(INSERT,"40"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar"), Diff(EQUAL,".java:"), Diff(DELETE,"21"), Diff(EQUAL,"9"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManage"), Diff(INSERT,"grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvata"), Diff(EQUAL,"r.java:1"), Diff(DELETE,"70"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManage"), Diff(INSERT,"AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimato"), Diff(EQUAL,"r.java:1"), Diff(DELETE,"531"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(INSERT,"AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand"), Diff(EQUAL,".java:3"), Diff(DELETE,"342"), Diff(INSERT,"0"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(INSERT,"base/java.lang.Thread.run(Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"5011"), Diff(INSERT,"834"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="46" _type="PauseCommand" date="Sun Jun 20 19:43:12 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="185370">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5455]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="45" _type="ExceptionCommand" date="Sun Jun 20 19:43:12 EDT 2021" starttimestamp="1624232406782" timestamp="185370" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="47" _type="ConsoleOutput" date="Sun Jun 20 19:43:12 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="185407" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶"), Diff(EQUAL,"	at gradingTools.comp"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"01"), Diff(DELETE,"ss21"), Diff(INSERT,"f16"), Diff(EQUAL,".assignment"), Diff(DELETE,"4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics"), Diff(INSERT,"11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:12"), Diff(DELETE,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelp"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"48"), Diff(INSERT,"71"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grail.geometryFigs.Alocatable.setX(Alocatabl"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"40"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at gra"), Diff(DELETE,"il.compositeFigs.MontyAvatar.combineFigs(MontyAvatar"), Diff(INSERT,"der.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvata"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManage"), Diff(EQUAL,"r.java:1"), Diff(DELETE,"13"), Diff(INSERT,"444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimato"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManage"), Diff(EQUAL,"r.java:1"), Diff(DELETE,"7"), Diff(INSERT,"538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"30"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.Thread.run(Thread"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"834"), Diff(INSERT,"5011"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="48" _type="ExceptionCommand" date="Sun Jun 20 19:43:12 EDT 2021" starttimestamp="1624232406782" timestamp="185881" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=430; propagationId=null; source=grail.geometryFigs.RotatingLine@3c1ea50c]
Exception in thread "Thread-15" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="49" _type="ExceptionCommand" date="Sun Jun 20 19:43:12 EDT 2021" starttimestamp="1624232406782" timestamp="185903" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=430; newValue=440; propagationId=null; source=grail.geometryFigs.RotatingLine@3c1ea50c]
Exception in thread "Thread-16" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="51" _type="PauseCommand" date="Sun Jun 20 19:43:18 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="191487">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5584]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="50" _type="ExceptionCommand" date="Sun Jun 20 19:43:18 EDT 2021" starttimestamp="1624232406782" timestamp="191487" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="52" _type="ConsoleOutput" date="Sun Jun 20 19:43:18 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="191488" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶")]]]></diff>
  </Command>
  <Command __id="54" _type="PauseCommand" date="Sun Jun 20 19:43:42 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="216033">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[24545]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="53" _type="ShellCommand" date="Sun Jun 20 19:43:42 EDT 2021" starttimestamp="1624232406782" timestamp="216033" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="56" _type="PauseCommand" date="Sun Jun 20 19:44:31 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="264430">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[48397]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="57" _type="MoveCaretCommand" caretOffset="3022" date="Sun Jun 20 19:44:31 EDT 2021" docOffset="3891" starttimestamp="1624232406782" timestamp="264560" />
  <Command __id="59" _type="PauseCommand" date="Sun Jun 20 19:44:55 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="288471">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23911]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="58" _type="ShellCommand" date="Sun Jun 20 19:44:55 EDT 2021" starttimestamp="1624232406782" timestamp="288471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="67" _type="PauseCommand" date="Sun Jun 20 19:46:56 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="409701">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[28196]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="66" _type="RunCommand" date="Sun Jun 20 19:46:56 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="409701" type="Run" />
  <Command __id="68" _type="RunCommand" date="Sun Jun 20 19:46:56 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="409703" type="Run" />
  <Command __id="69" _type="ShellCommand" date="Sun Jun 20 19:46:56 EDT 2021" starttimestamp="1624232406782" timestamp="409856" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="71" _type="PauseCommand" date="Sun Jun 20 19:47:02 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="416187">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6331]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="70" _type="ShellCommand" date="Sun Jun 20 19:47:02 EDT 2021" starttimestamp="1624232406782" timestamp="416187" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="73" _type="PauseCommand" date="Sun Jun 20 19:58:17 EDT 2021" range="10m-20m" starttimestamp="1624232406782" timestamp="1090317">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[674130]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="72" _type="ShellCommand" date="Sun Jun 20 19:58:17 EDT 2021" starttimestamp="1624232406782" timestamp="1090317" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="75" _type="MoveCaretCommand" caretOffset="510" date="Sun Jun 20 19:58:17 EDT 2021" docOffset="994" starttimestamp="1624232406782" timestamp="1091007" />
  <Command __id="77" _type="PauseCommand" date="Sun Jun 20 19:58:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1093815">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2808]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="78" _type="MoveCaretCommand" caretOffset="3022" date="Sun Jun 20 19:58:20 EDT 2021" docOffset="3891" starttimestamp="1624232406782" timestamp="1093939" />
  <Command __id="80" _type="PauseCommand" date="Sun Jun 20 19:58:22 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1095249">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1310]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="81" _type="MoveCaretCommand" caretOffset="2424" date="Sun Jun 20 19:58:22 EDT 2021" docOffset="3291" starttimestamp="1624232406782" timestamp="1095484" />
  <Command __id="83" _type="PauseCommand" date="Sun Jun 20 19:58:25 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1098526">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3042]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="84" _type="MoveCaretCommand" caretOffset="216" date="Sun Jun 20 19:58:25 EDT 2021" docOffset="274" starttimestamp="1624232406782" timestamp="1098718" />
  <Command __id="86" _type="PauseCommand" date="Sun Jun 20 19:58:26 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1100078">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1359]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="87" _type="MoveCaretCommand" caretOffset="247" date="Sun Jun 20 19:58:27 EDT 2021" docOffset="337" starttimestamp="1624232406782" timestamp="1100278" />
  <Command __id="89" _type="PauseCommand" date="Sun Jun 20 19:58:33 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="1107061">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6783]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="90" _type="MoveCaretCommand" caretOffset="442" date="Sun Jun 20 19:58:34 EDT 2021" docOffset="547" starttimestamp="1624232406782" timestamp="1107267" />
  <Command __id="92" _type="PauseCommand" date="Sun Jun 20 20:03:40 EDT 2021" range="5m-10m" starttimestamp="1624232406782" timestamp="1413713">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[306446]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="93" _type="MoveCaretCommand" caretOffset="3022" date="Sun Jun 20 20:03:40 EDT 2021" docOffset="3891" starttimestamp="1624232406782" timestamp="1413899" />
  <Command __id="95" _type="PauseCommand" date="Sun Jun 20 20:03:44 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1417871">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3972]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="94" _type="SelectTextCommand" caretOffset="9535" date="Sun Jun 20 20:03:44 EDT 2021" end="9535" start="8731" starttimestamp="1624232406782" timestamp="1417871" />
  <Command __id="97" _type="PauseCommand" date="Sun Jun 20 20:03:46 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1419779">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1908]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="96" _type="MoveCaretCommand" caretOffset="9539" date="Sun Jun 20 20:03:46 EDT 2021" docOffset="10408" starttimestamp="1624232406782" timestamp="1419779" />
  <Command __id="99" _type="PauseCommand" date="Sun Jun 20 20:03:49 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1422360">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2580]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="100" _type="PasteCommand" date="Sun Jun 20 20:03:49 EDT 2021" starttimestamp="1624232406782" timestamp="1422375" />
  <Command __id="102" _type="PauseCommand" date="Sun Jun 20 20:03:51 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1424368">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1993]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="103" _type="UndoCommand" date="Sun Jun 20 20:03:51 EDT 2021" starttimestamp="1624232406782" timestamp="1424377" />
  <Command __id="105" _type="PauseCommand" date="Sun Jun 20 20:03:56 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1429275">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[4897]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="104" _type="SelectTextCommand" caretOffset="8508" date="Sun Jun 20 20:03:56 EDT 2021" end="9535" start="8508" starttimestamp="1624232406782" timestamp="1429274" />
  <Command __id="106" _type="CopyCommand" date="Sun Jun 20 20:03:57 EDT 2021" starttimestamp="1624232406782" timestamp="1430265" />
  <Command __id="108" _type="PauseCommand" date="Sun Jun 20 20:03:58 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1431351">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1085]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="107" _type="MoveCaretCommand" caretOffset="9541" date="Sun Jun 20 20:03:58 EDT 2021" docOffset="10410" starttimestamp="1624232406782" timestamp="1431350" />
  <Command __id="110" _type="PasteCommand" date="Sun Jun 20 20:03:59 EDT 2021" starttimestamp="1624232406782" timestamp="1432263" />
  <Command __id="112" _type="PauseCommand" date="Sun Jun 20 20:04:04 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="1437403">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[5140]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="111" _type="SelectTextCommand" caretOffset="9577" date="Sun Jun 20 20:04:04 EDT 2021" end="9584" start="9577" starttimestamp="1624232406782" timestamp="1437403" />
  <Command __id="114" _type="PauseCommand" date="Sun Jun 20 20:04:05 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1439116">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1712]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="115" _type="InsertStringCommand" date="Sun Jun 20 20:04:05 EDT 2021" starttimestamp="1624232406782" timestamp="1439122" timestamp2="1439122">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="117" _type="InsertStringCommand" date="Sun Jun 20 20:04:06 EDT 2021" starttimestamp="1624232406782" timestamp="1439261" timestamp2="1439261">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="119" _type="InsertStringCommand" date="Sun Jun 20 20:04:06 EDT 2021" starttimestamp="1624232406782" timestamp="1439492" timestamp2="1439492">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="121" _type="InsertStringCommand" date="Sun Jun 20 20:04:06 EDT 2021" starttimestamp="1624232406782" timestamp="1439620" timestamp2="1439620">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:40:06 EDT 2021" docASTNodeCount="1479" docActiveCodeLength="10076" docExpressionCount="965" docLength="10434" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="121">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <Command __id="6" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:40:44 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="37702">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;



import grader.basics.execution.BasicProjectExecution;




import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
import util.trace.Tracer;

public class RunSummer21A4Tests {
	static final int
			MAX_PRINT = 600,
			MAX_TRACE = 2000,
			TIME_OUT = 5;
	public static void main(String[] args) {
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(TIME_OUT);
		// You need to always call such a method
		SS21Assignment4Suite.main(args);
		}
	}
]]></snapshot>
  </Command>
  <Command __id="55" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:44:31 EDT 2021" docASTNodeCount="1479" docActiveCodeLength="10076" docExpressionCount="965" docLength="10434" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="264430">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="74" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:58:17 EDT 2021" docASTNodeCount="507" docActiveCodeLength="3240" docExpressionCount="346" docLength="3340" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1090688">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	

}
]]></snapshot>
  </Command>
  <Command __id="76" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:58:20 EDT 2021" docASTNodeCount="1479" docActiveCodeLength="10076" docExpressionCount="965" docLength="10434" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1093815">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="79" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:58:22 EDT 2021" docASTNodeCount="446" docActiveCodeLength="3242" docExpressionCount="258" docLength="3303" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1095249">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.awt.Component;

import java.awt.event.KeyListener;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFrame;

import AnimationMethods.ABroadcastingClearanceManager;
import AnimationMethods.BroadcastingClearanceManager;
import grail.MVC.AnObservableHelper;
import grail.MVC.BridgePaintView;
import grail.MVC.BridgeSceneController;
import grail.MVC.ConsoleSceneView;
import grail.MVC.CustomView;
import grail.MVC.KeyController;
import grail.MVC.ObservableHelp;
import grail.MVC.SceneView;
import grail.MVCDelegate.DelegatingScene;
import grail.MVCDelegate.DelegatingScenes;
import grail.MVCDelegate.ObservableBridgeScene;
import grail.MVCDelegate.ObservableScenePainter;
import grail.extras.Buttons;
import grail.extras.MapStringToObject;
import grail.extras.PanelButton;
import grail.extras.Tables;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.FACTORY_CLASS)
public class BridgeSceneFactory { 
	static FiveAvatars scene;
	static SceneView sceneView;
	static Tables<Avatars> avatarAndObject;
	static CustomView sceneView2;
	static KeyController bridgeController;
	static ObservableBridgeScene delegateScene;
	static DelegatingScenes sceneShowed;
	static BroadcastingClearanceManager clearanceManager;

	
	public synchronized static FiveAvatars bridgeSceneFactoryMethod(){
	   if (scene == null) {
			 scene = new FiveChars();
	   } 
	   return scene;		
	}
	
	
	public synchronized  static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {
		return new RealisticLegs(rad, ang, radR, angR, valX, valY);
//		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);
	}
	
	public synchronized  static SceneView consoleSceneViewFactoryMethod() {
		if (sceneView == null) {
			sceneView = new ConsoleSceneView();
		}
		return sceneView;
	}
	public synchronized  static ObservableHelp helperFactoryMethod() {
		return new AnObservableHelper();
	}
	
	public synchronized static Tables<Avatars> avatarTableFactoryMethod(){
		if (avatarAndObject == null) {
			avatarAndObject = new MapStringToObject<Avatars>();
		}
		return avatarAndObject;
	}
	
	public synchronized static CustomView inheritingBridgeScenePainterFactoryMethod() {
		if (sceneView2 == null) {
			sceneView2 = new BridgePaintView();
		}
		return sceneView2;
	}
	public synchronized static KeyController bridgeSceneControllerFactoryMethod(){
		if (bridgeController == null) {
			PanelButton buttons = new Buttons();
			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod(), buttons);
		}
		return bridgeController;
		
	}
	public synchronized static ObservableBridgeScene observableBridgeScenePainterFactoryMethod() {
		if (delegateScene == null) {
			delegateScene = new ObservableScenePainter();
		}
		return delegateScene;
	}
	public synchronized static DelegatingScenes delegatingBridgeSceneViewFactoryMethod(){
		if (sceneShowed == null) {
			sceneShowed = new DelegatingScene();
		}
		return sceneShowed;
	}
	
	public synchronized static BroadcastingClearanceManager broadcastingClearanceManagerFactoryMethod() {
		if (clearanceManager == null) {
			clearanceManager = new ABroadcastingClearanceManager();
		}
		return clearanceManager;
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="82" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:58:25 EDT 2021" docASTNodeCount="42" docActiveCodeLength="278" docExpressionCount="26" docLength="278" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1098526">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import tags301.Comp301Tags;
import util.annotations.Tags;
@Tags(Comp301Tags.ANIMATOR)
public interface BridgeSceneAnimator {
	
	public void animateAvatar(Avatars anAvatar);

	void animateGuard(Avatars anAvatar);

}
]]></snapshot>
  </Command>
  <Command __id="85" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:58:26 EDT 2021" docASTNodeCount="165" docActiveCodeLength="981" docExpressionCount="114" docLength="981" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1100077">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.misc.ThreadSupport;
@Tags(Comp301Tags.ANIMATOR)
public class ABridgeSceneAnimator implements BridgeSceneAnimator {
	static final int START = 0,
					MOVE_BY = 10,
					MARCH_TIME = 500;
	@Override
	public void  animateAvatar(Avatars anAvatar) {
		int i = START;
    	while (i < MOVE_BY) {
    	ThreadSupport.sleep(MARCH_TIME);
    	anAvatar.moveAvatar(MOVE_BY, START);    	
    	i++;
    	}
	}
	@Override
	public void  animateGuard(Avatars anAvatar) {
		int i = START;
    	while (i < MOVE_BY) {
    		if(i%2 == 0) {	
		    	ThreadSupport.sleep(MARCH_TIME);
		    	anAvatar.getArms().getRightLine().rotate(-7);
		    	anAvatar.getArms().getLeftLine().rotate(7);
		    	i++;
    			}
    		ThreadSupport.sleep(MARCH_TIME);
	    	anAvatar.getArms().getRightLine().rotate(7);
	    	anAvatar.getArms().getLeftLine().rotate(-7);
	    	i++;
    	}
	}

}
]]></snapshot>
  </Command>
  <Command __id="88" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 19:58:33 EDT 2021" docASTNodeCount="104" docActiveCodeLength="790" docExpressionCount="64" docLength="832" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1107061">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimationCommand.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import tags301.Comp301Tags;
import util.annotations.Tags;
@Tags(Comp301Tags.ANIMATING_COMMAND)

public class BridgeSceneAnimationCommand implements Runnable {
	
	Avatars anAvatar;
	static BridgeSceneAnimator anAnimator;
	boolean waitState = false;
	
	
	public BridgeSceneAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {
		anAvatar = montyAvatar;
		//anAnimator = new ABridgeSceneAnimator();
		anAnimator = montyAnimator;
		waitState = waitCommand;
	}
	

	@Override
	public void run() {
		if(waitState) {
			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();
			anAnimator.animateAvatar(anAvatar);
		}
		anAnimator.animateAvatar(anAvatar);
	}

}
]]></snapshot>
  </Command>
  <Command __id="91" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:03:40 EDT 2021" docASTNodeCount="1479" docActiveCodeLength="10076" docExpressionCount="965" docLength="10434" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1413713">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <DocumentChange __id="98" _type="Replace" date="Sun Jun 20 20:03:49 EDT 2021" docASTNodeCount="1479" docActiveCodeLength="10114" docExpressionCount="965" docLength="10472" endLine="358" insertionLength="39" int_docASTNodeCount="1479" int_docActiveCodeLength="10075" int_docExpressionCount="965" int_docLength="10433" length="1" offset="10407" startLine="358" starttimestamp="1624232406782" timestamp="1422359">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	new Thread((Runnable) arthurAnimator);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="101" _type="Replace" date="Sun Jun 20 20:03:51 EDT 2021" docASTNodeCount="1479" docActiveCodeLength="10076" docExpressionCount="965" docLength="10434" endLine="358" insertionLength="1" int_docASTNodeCount="1479" int_docActiveCodeLength="10075" int_docExpressionCount="965" int_docLength="10433" length="39" offset="10407" startLine="358" starttimestamp="1624232406782" timestamp="1424368">
    <deletedText><![CDATA[	new Thread((Runnable) arthurAnimator);]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="109" _type="Replace" date="Sun Jun 20 20:03:59 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11103" docExpressionCount="1053" docLength="11461" endLine="359" insertionLength="1028" int_docASTNodeCount="1479" int_docActiveCodeLength="10075" int_docExpressionCount="965" int_docLength="10433" length="1" offset="10409" startLine="359" starttimestamp="1624232406782" timestamp="1432235">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="113" _type="Replace" date="Sun Jun 20 20:04:05 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11097" docExpressionCount="1053" docLength="11455" endLine="360" insertionLength="1" int_docASTNodeCount="1625" int_docActiveCodeLength="11096" int_docExpressionCount="1053" int_docLength="11454" length="7" offset="10446" startLine="360" starttimestamp="1624232406782" timestamp="1439115">
    <deletedText><![CDATA[waiting]]></deletedText>
    <insertedText><![CDATA[l]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="116" _type="Insert" date="Sun Jun 20 20:04:06 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11100" docExpressionCount="1053" docLength="11458" length="3" offset="10447" repeat="3" starttimestamp="1624232406782" timestamp="1439259" timestamp2="1439618">
    <text><![CDATA[ock]]></text>
  </DocumentChange>
  <Command __id="123" _type="PauseCommand" date="Sun Jun 20 20:04:09 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1442299">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2679]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="124" _type="InsertStringCommand" date="Sun Jun 20 20:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="1442303" timestamp2="1442303">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="126" _type="InsertStringCommand" date="Sun Jun 20 20:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="1442425" timestamp2="1442425">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="128" _type="InsertStringCommand" date="Sun Jun 20 20:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="1442658" timestamp2="1442658">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="131" _type="PauseCommand" date="Sun Jun 20 20:04:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1444220">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1562]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="130" _type="InsertStringCommand" date="Sun Jun 20 20:04:11 EDT 2021" starttimestamp="1624232406782" timestamp="1444220" timestamp2="1444220">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="133" _type="PauseCommand" date="Sun Jun 20 20:04:15 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1449202">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4982]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="132" _type="SelectTextCommand" caretOffset="9577" date="Sun Jun 20 20:04:15 EDT 2021" end="9585" start="9577" starttimestamp="1624232406782" timestamp="1449202" />
  <Command __id="135" _type="PauseCommand" date="Sun Jun 20 20:04:18 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1451347">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2145]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="134" _type="CopyCommand" date="Sun Jun 20 20:04:18 EDT 2021" starttimestamp="1624232406782" timestamp="1451347" />
  <Command __id="137" _type="PauseCommand" date="Sun Jun 20 20:04:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1455875">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[4528]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="136" _type="SelectTextCommand" caretOffset="9808" date="Sun Jun 20 20:04:22 EDT 2021" end="9808" start="9801" starttimestamp="1624232406782" timestamp="1455875" />
  <Command __id="139" _type="PasteCommand" date="Sun Jun 20 20:04:23 EDT 2021" starttimestamp="1624232406782" timestamp="1456463" />
  <Command __id="141" _type="PauseCommand" date="Sun Jun 20 20:04:27 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1460420">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3956]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="140" _type="SelectTextCommand" caretOffset="10033" date="Sun Jun 20 20:04:27 EDT 2021" end="10033" start="10026" starttimestamp="1624232406782" timestamp="1460419" />
  <Command __id="143" _type="PauseCommand" date="Sun Jun 20 20:04:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1461522">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1103]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="144" _type="PasteCommand" date="Sun Jun 20 20:04:28 EDT 2021" starttimestamp="1624232406782" timestamp="1461529" />
  <Command __id="146" _type="PauseCommand" date="Sun Jun 20 20:04:32 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1465685">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4156]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="145" _type="SelectTextCommand" caretOffset="10260" date="Sun Jun 20 20:04:32 EDT 2021" end="10260" start="10253" starttimestamp="1624232406782" timestamp="1465685" />
  <Command __id="148" _type="PasteCommand" date="Sun Jun 20 20:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="1466342" />
  <Command __id="150" _type="PauseCommand" date="Sun Jun 20 20:04:39 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="1472896">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[6554]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="149" _type="SelectTextCommand" caretOffset="10477" date="Sun Jun 20 20:04:39 EDT 2021" end="10477" start="10472" starttimestamp="1624232406782" timestamp="1472896" />
  <Command __id="152" _type="PauseCommand" date="Sun Jun 20 20:04:41 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1474707">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1811]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="153" _type="PasteCommand" date="Sun Jun 20 20:04:41 EDT 2021" starttimestamp="1624232406782" timestamp="1474714" />
  <Command __id="155" _type="PauseCommand" date="Sun Jun 20 20:04:50 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="1483494">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[8779]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="154" _type="SelectTextCommand" caretOffset="10575" date="Sun Jun 20 20:04:50 EDT 2021" end="10575" start="10436" starttimestamp="1624232406782" timestamp="1483493" />
  <Command __id="157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:04:51 EDT 2021" starttimestamp="1624232406782" timestamp="1484251" />
  <Command __id="159" _type="PauseCommand" date="Sun Jun 20 20:05:13 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="1506986">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[22734]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="158" _type="MoveCaretCommand" caretOffset="9723" date="Sun Jun 20 20:05:13 EDT 2021" docOffset="10592" starttimestamp="1624232406782" timestamp="1506985" />
  <Command __id="161" _type="PauseCommand" date="Sun Jun 20 20:05:16 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1509557">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2572]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="160" _type="SelectTextCommand" caretOffset="9730" date="Sun Jun 20 20:05:16 EDT 2021" end="9730" start="9723" starttimestamp="1624232406782" timestamp="1509557" />
  <Command __id="162" _type="MoveCaretCommand" caretOffset="9761" date="Sun Jun 20 20:05:16 EDT 2021" docOffset="10630" starttimestamp="1624232406782" timestamp="1510125" />
  <Command __id="164" _type="PauseCommand" date="Sun Jun 20 20:05:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1513957">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3832]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="163" _type="ShellCommand" date="Sun Jun 20 20:05:20 EDT 2021" starttimestamp="1624232406782" timestamp="1513957" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="165" _type="ShellCommand" date="Sun Jun 20 20:05:20 EDT 2021" starttimestamp="1624232406782" timestamp="1514155" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="169" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:05:21 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="1514755" />
  <Command __id="171" _type="PauseCommand" date="Sun Jun 20 20:05:24 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1517888">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3133]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="172" _type="MoveCaretCommand" caretOffset="9772" date="Sun Jun 20 20:05:24 EDT 2021" docOffset="10641" starttimestamp="1624232406782" timestamp="1518070" />
  <Command __id="174" _type="PauseCommand" date="Sun Jun 20 20:05:27 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1520490">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2420]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="173" _type="SelectTextCommand" caretOffset="9541" date="Sun Jun 20 20:05:27 EDT 2021" end="9550" start="9541" starttimestamp="1624232406782" timestamp="1520490" />
  <Command __id="176" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:05:27 EDT 2021" starttimestamp="1624232406782" timestamp="1520962" />
  <Command __id="178" _type="PauseCommand" date="Sun Jun 20 20:05:31 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1524594">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3632]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="177" _type="SelectTextCommand" caretOffset="10434" date="Sun Jun 20 20:05:31 EDT 2021" end="10434" start="9767" starttimestamp="1624232406782" timestamp="1524594" />
  <Command __id="180" _type="PauseCommand" date="Sun Jun 20 20:05:36 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="1530176">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5582]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="179" _type="MoveCaretCommand" caretOffset="9948" date="Sun Jun 20 20:05:36 EDT 2021" docOffset="10817" starttimestamp="1624232406782" timestamp="1530176" />
  <Command __id="182" _type="PauseCommand" date="Sun Jun 20 20:05:40 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1533618">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3442]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="181" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Sun Jun 20 20:05:40 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="1533618" />
  <Command __id="183" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Sun Jun 20 20:05:40 EDT 2021" starttimestamp="1624232406782" timestamp="1533655" />
  <Command __id="185" _type="PauseCommand" date="Sun Jun 20 20:05:42 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1535476">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1821]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="184" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Sun Jun 20 20:05:42 EDT 2021" starttimestamp="1624232406782" timestamp="1535476" />
  <Command __id="187" _type="PauseCommand" date="Sun Jun 20 20:05:44 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1537816">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2340]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="186" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Sun Jun 20 20:05:44 EDT 2021" starttimestamp="1624232406782" timestamp="1537816" />
  <Command __id="189" _type="PauseCommand" date="Sun Jun 20 20:05:46 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1539476">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1660]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="188" _type="ShellCommand" date="Sun Jun 20 20:05:46 EDT 2021" starttimestamp="1624232406782" timestamp="1539476" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="191" _type="PauseCommand" date="Sun Jun 20 20:05:48 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1542083">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2606]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="190" _type="ShellCommand" date="Sun Jun 20 20:05:48 EDT 2021" starttimestamp="1624232406782" timestamp="1542082" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="192" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Sun Jun 20 20:05:48 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="1542097" />
  <Command __id="196" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:05:49 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="1542438" />
  <Command __id="198" _type="PauseCommand" date="Sun Jun 20 20:05:51 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1545153">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2715]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="199" _type="SelectTextCommand" caretOffset="9831" date="Sun Jun 20 20:05:52 EDT 2021" end="9831" start="9814" starttimestamp="1624232406782" timestamp="1545287" />
  <Command __id="201" _type="PauseCommand" date="Sun Jun 20 20:05:55 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1548971">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3684]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="200" _type="ShellCommand" date="Sun Jun 20 20:05:55 EDT 2021" starttimestamp="1624232406782" timestamp="1548971" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="202" _type="ShellCommand" date="Sun Jun 20 20:05:55 EDT 2021" starttimestamp="1624232406782" timestamp="1549116" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="206" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:05:56 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="1549405" />
  <Command __id="208" _type="PauseCommand" date="Sun Jun 20 20:05:57 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1551024">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1619]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="209" _type="SelectTextCommand" caretOffset="9831" date="Sun Jun 20 20:05:57 EDT 2021" end="9831" start="9814" starttimestamp="1624232406782" timestamp="1551145" />
  <Command __id="211" _type="PauseCommand" date="Sun Jun 20 20:06:01 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1555156">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4011]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="210" _type="ShellCommand" date="Sun Jun 20 20:06:01 EDT 2021" starttimestamp="1624232406782" timestamp="1555156" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="212" _type="ShellCommand" date="Sun Jun 20 20:06:02 EDT 2021" starttimestamp="1624232406782" timestamp="1555290" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="216" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:06:02 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="1555659" />
  <Command __id="218" _type="PauseCommand" date="Sun Jun 20 20:06:05 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1558419">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2760]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="219" _type="SelectTextCommand" caretOffset="9831" date="Sun Jun 20 20:06:05 EDT 2021" end="9831" start="9814" starttimestamp="1624232406782" timestamp="1558544" />
  <Command __id="221" _type="PauseCommand" date="Sun Jun 20 20:06:08 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1561903">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3359]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="220" _type="SelectTextCommand" caretOffset="10003" date="Sun Jun 20 20:06:08 EDT 2021" end="10012" start="10003" starttimestamp="1624232406782" timestamp="1561903" />
  <Command __id="223" _type="InsertStringCommand" date="Sun Jun 20 20:06:08 EDT 2021" starttimestamp="1624232406782" timestamp="1562073" timestamp2="1562073">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="225" _type="PauseCommand" date="Sun Jun 20 20:06:10 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1563975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1901]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="224" _type="SelectTextCommand" caretOffset="9765" date="Sun Jun 20 20:06:10 EDT 2021" end="9776" start="9765" starttimestamp="1624232406782" timestamp="1563974" />
  <Command __id="227" _type="InsertStringCommand" date="Sun Jun 20 20:06:10 EDT 2021" starttimestamp="1624232406782" timestamp="1564125" timestamp2="1564125">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="233" _type="PauseCommand" date="Sun Jun 20 20:07:38 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="1651319">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[83800]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="232" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:07:38 EDT 2021" starttimestamp="1624232406782" timestamp="1651319" />
  <Command __id="234" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:07:38 EDT 2021" starttimestamp="1624232406782" timestamp="1651422" />
  <Command __id="236" _type="PauseCommand" date="Sun Jun 20 20:07:48 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="1661489">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10066]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="235" _type="ShellCommand" date="Sun Jun 20 20:07:48 EDT 2021" starttimestamp="1624232406782" timestamp="1661488" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="238" _type="PauseCommand" date="Sun Jun 20 20:08:10 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="1683605">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22117]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="237" _type="ShellCommand" date="Sun Jun 20 20:08:10 EDT 2021" starttimestamp="1624232406782" timestamp="1683605" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="239" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:08:10 EDT 2021" starttimestamp="1624232406782" timestamp="1683707" />
  <Command __id="240" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:08:10 EDT 2021" starttimestamp="1624232406782" timestamp="1683739" />
  <Command __id="242" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:08:11 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="1684339" />
  <Command __id="244" _type="PauseCommand" date="Sun Jun 20 20:08:13 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1687093">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2754]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="243" _type="MoveCaretCommand" caretOffset="65" date="Sun Jun 20 20:08:13 EDT 2021" docOffset="65" starttimestamp="1624232406782" timestamp="1687093" />
  <Command __id="245" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 20:08:14 EDT 2021" starttimestamp="1624232406782" timestamp="1687929" />
  <Command __id="247" _type="InsertStringCommand" date="Sun Jun 20 20:08:14 EDT 2021" starttimestamp="1624232406782" timestamp="1688164" timestamp2="1688164">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="249" _type="InsertStringCommand" date="Sun Jun 20 20:08:15 EDT 2021" starttimestamp="1624232406782" timestamp="1688448" timestamp2="1688448">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="251" _type="InsertStringCommand" date="Sun Jun 20 20:08:15 EDT 2021" starttimestamp="1624232406782" timestamp="1688741" timestamp2="1688741">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="253" _type="InsertStringCommand" date="Sun Jun 20 20:08:15 EDT 2021" starttimestamp="1624232406782" timestamp="1688923" timestamp2="1688923">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="255" _type="InsertStringCommand" date="Sun Jun 20 20:08:15 EDT 2021" starttimestamp="1624232406782" timestamp="1689012" timestamp2="1689012">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="257" _type="InsertStringCommand" date="Sun Jun 20 20:08:16 EDT 2021" starttimestamp="1624232406782" timestamp="1689281" timestamp2="1689281">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="259" _type="InsertStringCommand" date="Sun Jun 20 20:08:16 EDT 2021" starttimestamp="1624232406782" timestamp="1689507" timestamp2="1689507">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="261" _type="InsertStringCommand" date="Sun Jun 20 20:08:16 EDT 2021" starttimestamp="1624232406782" timestamp="1689747" timestamp2="1689747">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="263" _type="InsertStringCommand" date="Sun Jun 20 20:08:17 EDT 2021" starttimestamp="1624232406782" timestamp="1690249" timestamp2="1690249">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="122" _type="Insert" date="Sun Jun 20 20:04:09 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11104" docExpressionCount="1053" docLength="11462" length="4" offset="10450" repeat="4" starttimestamp="1624232406782" timestamp="1442299" timestamp2="1444215">
    <text><![CDATA[step]]></text>
  </DocumentChange>
  <DocumentChange __id="138" _type="Replace" date="Sun Jun 20 20:04:23 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11105" docExpressionCount="1053" docLength="11463" endLine="368" insertionLength="8" int_docASTNodeCount="1625" int_docActiveCodeLength="11097" int_docExpressionCount="1053" int_docLength="11455" length="7" offset="10670" startLine="368" starttimestamp="1624232406782" timestamp="1456457">
    <deletedText><![CDATA[waiting]]></deletedText>
    <insertedText><![CDATA[lockstep]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="142" _type="Replace" date="Sun Jun 20 20:04:28 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11106" docExpressionCount="1053" docLength="11464" endLine="376" insertionLength="8" int_docASTNodeCount="1625" int_docActiveCodeLength="11098" int_docExpressionCount="1053" int_docLength="11456" length="7" offset="10895" startLine="376" starttimestamp="1624232406782" timestamp="1461522">
    <deletedText><![CDATA[waiting]]></deletedText>
    <insertedText><![CDATA[lockstep]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="147" _type="Replace" date="Sun Jun 20 20:04:33 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11107" docExpressionCount="1053" docLength="11465" endLine="384" insertionLength="8" int_docASTNodeCount="1625" int_docActiveCodeLength="11099" int_docExpressionCount="1053" int_docLength="11457" length="7" offset="11122" startLine="384" starttimestamp="1624232406782" timestamp="1466336">
    <deletedText><![CDATA[waiting]]></deletedText>
    <insertedText><![CDATA[lockstep]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="151" _type="Replace" date="Sun Jun 20 20:04:41 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="11110" docExpressionCount="1053" docLength="11468" endLine="391" insertionLength="8" int_docASTNodeCount="1625" int_docActiveCodeLength="11102" int_docExpressionCount="1053" int_docLength="11460" length="5" offset="11341" startLine="391" starttimestamp="1624232406782" timestamp="1474707">
    <deletedText><![CDATA[start]]></deletedText>
    <insertedText><![CDATA[lockstep]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="156" _type="Delete" date="Sun Jun 20 20:04:51 EDT 2021" docASTNodeCount="1611" docActiveCodeLength="10971" docExpressionCount="1045" docLength="11329" endLine="393" length="139" offset="11305" startLine="390" starttimestamp="1624232406782" timestamp="1484239">
    <text><![CDATA[@Override
	public synchronized void lockstepAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}]]></text>
  </DocumentChange>
  <Command __id="166" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:05:21 EDT 2021" docASTNodeCount="207" docActiveCodeLength="1381" docExpressionCount="90" docLength="1916" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1514288">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveAvatars.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.beans.PropertyChangeListener;

import grail.geometryFigs.MovingL;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.annotations.Visible;

@Tags(Comp301Tags.BRIDGE_SCENE)

public interface FiveAvatars {
	
	public Avatars getArthur();
	public Avatars getGalahad();
	public Avatars getGuard();
	public Avatars getLancelot();
	public Avatars getRobin();
	public Gorges getGorge();
	public MovingL getGuardArea();
	public MovingL getKnightArea();
	public void approach(Avatars anAvatar);
	public boolean getOccupied();
	public boolean getKnightTurn();
	public void say(String question);
	public void passed();
	public void failed();
	public void scroll(int moveInX, int moveInY);
	@Visible(false)
	public Avatars getInteractingKnight();
	public boolean prePassed();
	public boolean preSay();
	public boolean preApproach();
	public void approach(String name);
	public boolean preFailed();
	public void updateSpeakTurn(boolean newTurn);
	public  void addPropertyChangeListener(PropertyChangeListener aListener);
	public void newOccupation(boolean newState);
//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {
//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	
//	}
	void asynchronousArthur();
	void asynchronousGalahad();
	void asynchronousLancelot();
	void asynchronousRobin();
	void asynchronousGuard();
	void waitingArthur();
	void waitingGalahad();
	void waitingLancelot();
	void waitingRobin();
	void startAnimation();
}]]></snapshot>
  </Command>
  <DocumentChange __id="167" _type="Insert" date="Sun Jun 20 20:05:21 EDT 2021" docASTNodeCount="210" docActiveCodeLength="1405" docExpressionCount="91" docLength="1940" length="24" offset="1914" repeat="2" starttimestamp="1624232406782" timestamp="1514388" timestamp2="1514390">
    <text><![CDATA[
	void lockstepArthur();]]></text>
  </DocumentChange>
  <Command __id="170" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:05:24 EDT 2021" docASTNodeCount="1613" docActiveCodeLength="10982" docExpressionCount="1047" docLength="11340" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1517888">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	"), Diff(INSERT,"@Override¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	"), Diff(EQUAL,"¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	@Override
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <DocumentChange __id="175" _type="Delete" date="Sun Jun 20 20:05:27 EDT 2021" docASTNodeCount="1611" docActiveCodeLength="10973" docExpressionCount="1045" docLength="11331" endLine="359" length="9" offset="10410" startLine="359" starttimestamp="1624232406782" timestamp="1520958">
    <text><![CDATA[@Override]]></text>
  </DocumentChange>
  <Command __id="193" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:05:48 EDT 2021" docASTNodeCount="210" docActiveCodeLength="1405" docExpressionCount="91" docLength="1940" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1542146">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveAvatars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.beans.PropertyChangeListener;¶¶import grail.geometryFigs.MovingL;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.annotations.Visible;¶¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public interface FiveAvatars {¶	¶	public Avatars getArthur();¶	public Avatars getGalahad();¶	public Avatars getGuard();¶	public Avatars getLancelot();¶	public Avatars getRobin();¶	public Gorges getGorge();¶	public MovingL getGuardArea();¶	public MovingL getKnightArea();¶	public void approach(Avatars anAvatar);¶	public boolean getOccupied();¶	public boolean getKnightTurn();¶	public void say(String question);¶	public void passed();¶	public void failed();¶	public void scroll(int moveInX, int moveInY);¶	@Visible(false)¶	public Avatars getInteractingKnight();¶	public boolean prePassed();¶	public boolean preSay();¶	public boolean preApproach();¶	public void approach(String name);¶	public boolean preFailed();¶	public void updateSpeakTurn(boolean newTurn);¶	public  void addPropertyChangeListener(PropertyChangeListener aListener);¶	public void newOccupation(boolean newState);¶//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {¶//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	¶//	}¶	void asynchronousArthur();¶	void asynchronousGalahad();¶	void asynchronousLancelot();¶	void asynchronousRobin();¶	void asynchronousGuard();¶	void waitingArthur();¶	void waitingGalahad();¶	void waitingLancelot();¶	void waitingRobin();¶	void startAnimation();¶"), Diff(INSERT,"	void lockstepArthur();¶"), Diff(EQUAL,"}")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.beans.PropertyChangeListener;

import grail.geometryFigs.MovingL;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.annotations.Visible;

@Tags(Comp301Tags.BRIDGE_SCENE)

public interface FiveAvatars {
	
	public Avatars getArthur();
	public Avatars getGalahad();
	public Avatars getGuard();
	public Avatars getLancelot();
	public Avatars getRobin();
	public Gorges getGorge();
	public MovingL getGuardArea();
	public MovingL getKnightArea();
	public void approach(Avatars anAvatar);
	public boolean getOccupied();
	public boolean getKnightTurn();
	public void say(String question);
	public void passed();
	public void failed();
	public void scroll(int moveInX, int moveInY);
	@Visible(false)
	public Avatars getInteractingKnight();
	public boolean prePassed();
	public boolean preSay();
	public boolean preApproach();
	public void approach(String name);
	public boolean preFailed();
	public void updateSpeakTurn(boolean newTurn);
	public  void addPropertyChangeListener(PropertyChangeListener aListener);
	public void newOccupation(boolean newState);
//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {
//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	
//	}
	void asynchronousArthur();
	void asynchronousGalahad();
	void asynchronousLancelot();
	void asynchronousRobin();
	void asynchronousGuard();
	void waitingArthur();
	void waitingGalahad();
	void waitingLancelot();
	void waitingRobin();
	void startAnimation();
	void lockstepArthur();
}]]></snapshot>
  </Command>
  <DocumentChange __id="194" _type="Insert" date="Sun Jun 20 20:05:48 EDT 2021" docASTNodeCount="213" docActiveCodeLength="1430" docExpressionCount="92" docLength="1965" length="25" offset="1938" repeat="2" starttimestamp="1624232406782" timestamp="1542172" timestamp2="1542173">
    <text><![CDATA[
	void lockstepGalahad();]]></text>
  </DocumentChange>
  <Command __id="197" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:05:51 EDT 2021" docASTNodeCount="1613" docActiveCodeLength="10984" docExpressionCount="1047" docLength="11342" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1545153">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	"), Diff(DELETE,"@Override"), Diff(EQUAL,"¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	"), Diff(INSERT,"@Override¶	"), Diff(EQUAL,"public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <Command __id="203" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:05:55 EDT 2021" docASTNodeCount="213" docActiveCodeLength="1430" docExpressionCount="92" docLength="1965" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1549173">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveAvatars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.beans.PropertyChangeListener;¶¶import grail.geometryFigs.MovingL;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.annotations.Visible;¶¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public interface FiveAvatars {¶	¶	public Avatars getArthur();¶	public Avatars getGalahad();¶	public Avatars getGuard();¶	public Avatars getLancelot();¶	public Avatars getRobin();¶	public Gorges getGorge();¶	public MovingL getGuardArea();¶	public MovingL getKnightArea();¶	public void approach(Avatars anAvatar);¶	public boolean getOccupied();¶	public boolean getKnightTurn();¶	public void say(String question);¶	public void passed();¶	public void failed();¶	public void scroll(int moveInX, int moveInY);¶	@Visible(false)¶	public Avatars getInteractingKnight();¶	public boolean prePassed();¶	public boolean preSay();¶	public boolean preApproach();¶	public void approach(String name);¶	public boolean preFailed();¶	public void updateSpeakTurn(boolean newTurn);¶	public  void addPropertyChangeListener(PropertyChangeListener aListener);¶	public void newOccupation(boolean newState);¶//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {¶//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	¶//	}¶	void asynchronousArthur();¶	void asynchronousGalahad();¶	void asynchronousLancelot();¶	void asynchronousRobin();¶	void asynchronousGuard();¶	void waitingArthur();¶	void waitingGalahad();¶	void waitingLancelot();¶	void waitingRobin();¶	void startAnimation();¶	void lockstepArthur();¶"), Diff(INSERT,"	void lockstepGalahad();¶"), Diff(EQUAL,"}")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.beans.PropertyChangeListener;

import grail.geometryFigs.MovingL;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.annotations.Visible;

@Tags(Comp301Tags.BRIDGE_SCENE)

public interface FiveAvatars {
	
	public Avatars getArthur();
	public Avatars getGalahad();
	public Avatars getGuard();
	public Avatars getLancelot();
	public Avatars getRobin();
	public Gorges getGorge();
	public MovingL getGuardArea();
	public MovingL getKnightArea();
	public void approach(Avatars anAvatar);
	public boolean getOccupied();
	public boolean getKnightTurn();
	public void say(String question);
	public void passed();
	public void failed();
	public void scroll(int moveInX, int moveInY);
	@Visible(false)
	public Avatars getInteractingKnight();
	public boolean prePassed();
	public boolean preSay();
	public boolean preApproach();
	public void approach(String name);
	public boolean preFailed();
	public void updateSpeakTurn(boolean newTurn);
	public  void addPropertyChangeListener(PropertyChangeListener aListener);
	public void newOccupation(boolean newState);
//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {
//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	
//	}
	void asynchronousArthur();
	void asynchronousGalahad();
	void asynchronousLancelot();
	void asynchronousRobin();
	void asynchronousGuard();
	void waitingArthur();
	void waitingGalahad();
	void waitingLancelot();
	void waitingRobin();
	void startAnimation();
	void lockstepArthur();
	void lockstepGalahad();
}]]></snapshot>
  </Command>
  <DocumentChange __id="204" _type="Insert" date="Sun Jun 20 20:05:55 EDT 2021" docASTNodeCount="216" docActiveCodeLength="1456" docExpressionCount="93" docLength="1991" length="26" offset="1963" repeat="2" starttimestamp="1624232406782" timestamp="1549203" timestamp2="1549203">
    <text><![CDATA[
	void lockstepLancelot();]]></text>
  </DocumentChange>
  <Command __id="207" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:05:57 EDT 2021" docASTNodeCount="1615" docActiveCodeLength="10995" docExpressionCount="1049" docLength="11353" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1551024">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	"), Diff(INSERT,"@Override¶	"), Diff(EQUAL,"public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <Command __id="213" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:06:02 EDT 2021" docASTNodeCount="216" docActiveCodeLength="1456" docExpressionCount="93" docLength="1991" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1555345">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveAvatars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.beans.PropertyChangeListener;¶¶import grail.geometryFigs.MovingL;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.annotations.Visible;¶¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public interface FiveAvatars {¶	¶	public Avatars getArthur();¶	public Avatars getGalahad();¶	public Avatars getGuard();¶	public Avatars getLancelot();¶	public Avatars getRobin();¶	public Gorges getGorge();¶	public MovingL getGuardArea();¶	public MovingL getKnightArea();¶	public void approach(Avatars anAvatar);¶	public boolean getOccupied();¶	public boolean getKnightTurn();¶	public void say(String question);¶	public void passed();¶	public void failed();¶	public void scroll(int moveInX, int moveInY);¶	@Visible(false)¶	public Avatars getInteractingKnight();¶	public boolean prePassed();¶	public boolean preSay();¶	public boolean preApproach();¶	public void approach(String name);¶	public boolean preFailed();¶	public void updateSpeakTurn(boolean newTurn);¶	public  void addPropertyChangeListener(PropertyChangeListener aListener);¶	public void newOccupation(boolean newState);¶//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {¶//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	¶//	}¶	void asynchronousArthur();¶	void asynchronousGalahad();¶	void asynchronousLancelot();¶	void asynchronousRobin();¶	void asynchronousGuard();¶	void waitingArthur();¶	void waitingGalahad();¶	void waitingLancelot();¶	void waitingRobin();¶	void startAnimation();¶	void lockstepArthur();¶	void lockstepGalahad();¶"), Diff(INSERT,"	void lockstepLancelot();¶"), Diff(EQUAL,"}")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.beans.PropertyChangeListener;

import grail.geometryFigs.MovingL;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.annotations.Visible;

@Tags(Comp301Tags.BRIDGE_SCENE)

public interface FiveAvatars {
	
	public Avatars getArthur();
	public Avatars getGalahad();
	public Avatars getGuard();
	public Avatars getLancelot();
	public Avatars getRobin();
	public Gorges getGorge();
	public MovingL getGuardArea();
	public MovingL getKnightArea();
	public void approach(Avatars anAvatar);
	public boolean getOccupied();
	public boolean getKnightTurn();
	public void say(String question);
	public void passed();
	public void failed();
	public void scroll(int moveInX, int moveInY);
	@Visible(false)
	public Avatars getInteractingKnight();
	public boolean prePassed();
	public boolean preSay();
	public boolean preApproach();
	public void approach(String name);
	public boolean preFailed();
	public void updateSpeakTurn(boolean newTurn);
	public  void addPropertyChangeListener(PropertyChangeListener aListener);
	public void newOccupation(boolean newState);
//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {
//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	
//	}
	void asynchronousArthur();
	void asynchronousGalahad();
	void asynchronousLancelot();
	void asynchronousRobin();
	void asynchronousGuard();
	void waitingArthur();
	void waitingGalahad();
	void waitingLancelot();
	void waitingRobin();
	void startAnimation();
	void lockstepArthur();
	void lockstepGalahad();
	void lockstepLancelot();
}]]></snapshot>
  </Command>
  <DocumentChange __id="214" _type="Insert" date="Sun Jun 20 20:06:02 EDT 2021" docASTNodeCount="219" docActiveCodeLength="1479" docExpressionCount="94" docLength="2014" length="23" offset="1989" repeat="2" starttimestamp="1624232406782" timestamp="1555370" timestamp2="1555371">
    <text><![CDATA[
	void lockstepRobin();]]></text>
  </DocumentChange>
  <Command __id="217" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:06:05 EDT 2021" docASTNodeCount="1617" docActiveCodeLength="11006" docExpressionCount="1051" docLength="11364" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1558419">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	"), Diff(INSERT,"@Override¶	"), Diff(EQUAL,"public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <DocumentChange __id="222" _type="Replace" date="Sun Jun 20 20:06:08 EDT 2021" docASTNodeCount="1615" docActiveCodeLength="10998" docExpressionCount="1049" docLength="11356" endLine="377" insertionLength="1" int_docASTNodeCount="1615" int_docActiveCodeLength="10997" int_docExpressionCount="1049" int_docLength="11355" length="9" offset="10872" startLine="377" starttimestamp="1624232406782" timestamp="1562068">
    <deletedText><![CDATA[@Override]]></deletedText>
    <insertedText><![CDATA[
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="226" _type="Replace" date="Sun Jun 20 20:06:10 EDT 2021" docASTNodeCount="1613" docActiveCodeLength="10988" docExpressionCount="1047" docLength="11346" endLine="368" insertionLength="1" int_docASTNodeCount="1613" int_docActiveCodeLength="10987" int_docExpressionCount="1047" int_docLength="11345" length="11" offset="10634" startLine="367" starttimestamp="1624232406782" timestamp="1564119">
    <deletedText><![CDATA[
	@Override]]></deletedText>
    <insertedText><![CDATA[
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="230" _type="Replace" date="Sun Jun 20 20:06:14 EDT 2021" docASTNodeCount="1611" docActiveCodeLength="10978" docExpressionCount="1045" docLength="11336" endLine="387" insertionLength="1" int_docASTNodeCount="1611" int_docActiveCodeLength="10977" int_docExpressionCount="1045" int_docLength="11335" length="11" offset="11090" startLine="386" starttimestamp="1624232406782" timestamp="1567513">
    <deletedText><![CDATA[
	@Override]]></deletedText>
    <insertedText><![CDATA[
]]></insertedText>
  </DocumentChange>
  <Command __id="241" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:08:10 EDT 2021" docASTNodeCount="6" docActiveCodeLength="72" docExpressionCount="2" docLength="72" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1683990">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

public class ABridgeSceneLockedAnimator {

}
]]></snapshot>
  </Command>
  <DocumentChange __id="246" _type="Insert" date="Sun Jun 20 20:08:14 EDT 2021" docASTNodeCount="6" docActiveCodeLength="81" docExpressionCount="2" docLength="81" length="9" offset="66" repeat="9" starttimestamp="1624232406782" timestamp="1688163" timestamp2="1690249">
    <text><![CDATA[ extends ]]></text>
  </DocumentChange>
  <Command __id="265" _type="PauseCommand" date="Sun Jun 20 20:08:19 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1693083">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2834]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="266" _type="InsertStringCommand" date="Sun Jun 20 20:08:19 EDT 2021" starttimestamp="1624232406782" timestamp="1693086" timestamp2="1693086">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="268" _type="InsertStringCommand" date="Sun Jun 20 20:08:20 EDT 2021" starttimestamp="1624232406782" timestamp="1693421" timestamp2="1693421">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="270" _type="InsertStringCommand" date="Sun Jun 20 20:08:20 EDT 2021" starttimestamp="1624232406782" timestamp="1693735" timestamp2="1693735">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="272" _type="InsertStringCommand" date="Sun Jun 20 20:08:20 EDT 2021" starttimestamp="1624232406782" timestamp="1693867" timestamp2="1693867">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="274" _type="InsertStringCommand" date="Sun Jun 20 20:08:20 EDT 2021" starttimestamp="1624232406782" timestamp="1694028" timestamp2="1694028">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="276" _type="InsertStringCommand" date="Sun Jun 20 20:08:21 EDT 2021" starttimestamp="1624232406782" timestamp="1694275" timestamp2="1694275">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="278" _type="InsertStringCommand" date="Sun Jun 20 20:08:21 EDT 2021" starttimestamp="1624232406782" timestamp="1694412" timestamp2="1694412">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="280" _type="InsertStringCommand" date="Sun Jun 20 20:08:21 EDT 2021" starttimestamp="1624232406782" timestamp="1694861" timestamp2="1694861">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="282" _type="InsertStringCommand" date="Sun Jun 20 20:08:21 EDT 2021" starttimestamp="1624232406782" timestamp="1695176" timestamp2="1695176">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="284" _type="InsertStringCommand" date="Sun Jun 20 20:08:22 EDT 2021" starttimestamp="1624232406782" timestamp="1695334" timestamp2="1695334">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="286" _type="InsertStringCommand" date="Sun Jun 20 20:08:22 EDT 2021" starttimestamp="1624232406782" timestamp="1695739" timestamp2="1695739">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="288" _type="InsertStringCommand" date="Sun Jun 20 20:08:22 EDT 2021" starttimestamp="1624232406782" timestamp="1695873" timestamp2="1695873">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="291" _type="PauseCommand" date="Sun Jun 20 20:08:23 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1696954">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1080]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="290" _type="InsertStringCommand" date="Sun Jun 20 20:08:23 EDT 2021" starttimestamp="1624232406782" timestamp="1696953" timestamp2="1696953">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="293" _type="InsertStringCommand" date="Sun Jun 20 20:08:23 EDT 2021" starttimestamp="1624232406782" timestamp="1697111" timestamp2="1697111">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="295" _type="InsertStringCommand" date="Sun Jun 20 20:08:24 EDT 2021" starttimestamp="1624232406782" timestamp="1697313" timestamp2="1697313">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="297" _type="InsertStringCommand" date="Sun Jun 20 20:08:24 EDT 2021" starttimestamp="1624232406782" timestamp="1697516" timestamp2="1697516">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="299" _type="InsertStringCommand" date="Sun Jun 20 20:08:24 EDT 2021" starttimestamp="1624232406782" timestamp="1697588" timestamp2="1697588">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="301" _type="InsertStringCommand" date="Sun Jun 20 20:08:24 EDT 2021" starttimestamp="1624232406782" timestamp="1697937" timestamp2="1697937">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="303" _type="InsertStringCommand" date="Sun Jun 20 20:08:24 EDT 2021" starttimestamp="1624232406782" timestamp="1698055" timestamp2="1698055">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="305" _type="InsertStringCommand" date="Sun Jun 20 20:08:24 EDT 2021" starttimestamp="1624232406782" timestamp="1698214" timestamp2="1698214">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="307" _type="PauseCommand" date="Sun Jun 20 20:08:27 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1700390">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2176]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="306" _type="MoveCaretCommand" caretOffset="26" date="Sun Jun 20 20:08:27 EDT 2021" docOffset="26" starttimestamp="1624232406782" timestamp="1700390" />
  <Command __id="309" _type="PauseCommand" date="Sun Jun 20 20:08:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1701495">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1105]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="310" _type="InsertStringCommand" date="Sun Jun 20 20:08:28 EDT 2021" starttimestamp="1624232406782" timestamp="1701498" timestamp2="1701498">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="312" _type="PauseCommand" date="Sun Jun 20 20:08:31 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1705187">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3689]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="311" _type="ShellCommand" date="Sun Jun 20 20:08:31 EDT 2021" starttimestamp="1624232406782" timestamp="1705187" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="314" _type="PauseCommand" date="Sun Jun 20 20:08:36 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1709766">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4579]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="313" _type="ShellCommand" date="Sun Jun 20 20:08:36 EDT 2021" starttimestamp="1624232406782" timestamp="1709766" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="315" _type="MoveCaretCommand" caretOffset="26" date="Sun Jun 20 20:08:36 EDT 2021" docOffset="26" starttimestamp="1624232406782" timestamp="1709919" />
  <Command __id="316" _type="MoveCaretCommand" caretOffset="27" date="Sun Jun 20 20:08:37 EDT 2021" docOffset="27" starttimestamp="1624232406782" timestamp="1710640" />
  <Command __id="318" _type="PauseCommand" date="Sun Jun 20 20:08:38 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="1712073">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1433]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="319" _type="InsertStringCommand" date="Sun Jun 20 20:08:38 EDT 2021" starttimestamp="1624232406782" timestamp="1712074" timestamp2="1712074">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="321" _type="InsertStringCommand" date="Sun Jun 20 20:08:39 EDT 2021" starttimestamp="1624232406782" timestamp="1712523" timestamp2="1712523">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="323" _type="InsertStringCommand" date="Sun Jun 20 20:08:39 EDT 2021" starttimestamp="1624232406782" timestamp="1712657" timestamp2="1712657">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="325" _type="InsertStringCommand" date="Sun Jun 20 20:08:39 EDT 2021" starttimestamp="1624232406782" timestamp="1712792" timestamp2="1712792">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="327" _type="InsertStringCommand" date="Sun Jun 20 20:08:39 EDT 2021" starttimestamp="1624232406782" timestamp="1712984" timestamp2="1712984">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="329" _type="InsertStringCommand" date="Sun Jun 20 20:08:40 EDT 2021" starttimestamp="1624232406782" timestamp="1713815" timestamp2="1713815">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="331" _type="PasteCommand" date="Sun Jun 20 20:08:40 EDT 2021" starttimestamp="1624232406782" timestamp="1714212" />
  <Command __id="333" _type="PauseCommand" date="Sun Jun 20 20:08:46 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="1719937">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[5725]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="332" _type="ShellCommand" date="Sun Jun 20 20:08:46 EDT 2021" starttimestamp="1624232406782" timestamp="1719937" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="334" _type="ShellCommand" date="Sun Jun 20 20:08:46 EDT 2021" starttimestamp="1624232406782" timestamp="1720098" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="340" _type="PauseCommand" date="Sun Jun 20 20:08:49 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1722317">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2205]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="339" _type="MoveCaretCommand" caretOffset="76" date="Sun Jun 20 20:08:49 EDT 2021" docOffset="76" starttimestamp="1624232406782" timestamp="1722317" />
  <Command __id="342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:08:49 EDT 2021" starttimestamp="1624232406782" timestamp="1723030" />
  <Command __id="344" _type="InsertStringCommand" date="Sun Jun 20 20:08:50 EDT 2021" starttimestamp="1624232406782" timestamp="1723391" timestamp2="1723391">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="345" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 20:08:50 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="1723430" />
  <Command __id="347" _type="PauseCommand" date="Sun Jun 20 20:08:55 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1728384">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4954]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="346" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 20:08:55 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="1728384" />
  <Command __id="350" _type="InsertStringCommand" date="Sun Jun 20 20:08:55 EDT 2021" starttimestamp="1624232406782" timestamp="1728402" timestamp2="1728402">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="352" _type="PauseCommand" date="Sun Jun 20 20:08:58 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="1731666">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3264]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="351" _type="MoveCaretCommand" caretOffset="197" date="Sun Jun 20 20:08:58 EDT 2021" docOffset="197" starttimestamp="1624232406782" timestamp="1731666" />
  <Command __id="354" _type="InsertStringCommand" date="Sun Jun 20 20:08:59 EDT 2021" starttimestamp="1624232406782" timestamp="1732534" timestamp2="1732534">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="356" _type="PauseCommand" date="Sun Jun 20 20:12:04 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="1918067">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[185533]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="357" _type="MoveCaretCommand" caretOffset="247" date="Sun Jun 20 20:12:05 EDT 2021" docOffset="337" starttimestamp="1624232406782" timestamp="1918220" />
  <Command __id="359" _type="PauseCommand" date="Sun Jun 20 20:12:25 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="1938222">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[20002]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="360" _type="MoveCaretCommand" caretOffset="442" date="Sun Jun 20 20:12:25 EDT 2021" docOffset="547" starttimestamp="1624232406782" timestamp="1938367" />
  <Command __id="362" _type="PauseCommand" date="Sun Jun 20 20:13:31 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="2005216">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[66849]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="361" _type="ShellCommand" date="Sun Jun 20 20:13:31 EDT 2021" starttimestamp="1624232406782" timestamp="2005216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="364" _type="PauseCommand" date="Sun Jun 20 20:13:46 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="2019372">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14156]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="363" _type="ShellCommand" date="Sun Jun 20 20:13:46 EDT 2021" starttimestamp="1624232406782" timestamp="2019372" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="365" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:13:46 EDT 2021" starttimestamp="1624232406782" timestamp="2019442" />
  <Command __id="366" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:13:46 EDT 2021" starttimestamp="1624232406782" timestamp="2019449" />
  <Command __id="368" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:13:46 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="2020001" />
  <Command __id="370" _type="PauseCommand" date="Sun Jun 20 20:13:48 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="2021305">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1304]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="369" _type="MoveCaretCommand" caretOffset="70" date="Sun Jun 20 20:13:48 EDT 2021" docOffset="70" starttimestamp="1624232406782" timestamp="2021305" />
  <DocumentChange __id="264" _type="Insert" date="Sun Jun 20 20:08:19 EDT 2021" docASTNodeCount="8" docActiveCodeLength="101" docExpressionCount="3" docLength="101" length="20" offset="75" repeat="20" starttimestamp="1624232406782" timestamp="1693083" timestamp2="1698214">
    <text><![CDATA[ABridgeSceneAnimator]]></text>
  </DocumentChange>
  <DocumentChange __id="308" _type="Insert" date="Sun Jun 20 20:08:28 EDT 2021" docASTNodeCount="8" docActiveCodeLength="102" docExpressionCount="3" docLength="102" length="1" offset="26" starttimestamp="1624232406782" timestamp="1701495">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="317" _type="Insert" date="Sun Jun 20 20:08:38 EDT 2021" docASTNodeCount="13" docActiveCodeLength="142" docExpressionCount="8" docLength="142" length="40" offset="27" repeat="7" starttimestamp="1624232406782" timestamp="1712073" timestamp2="1714209">
    <text><![CDATA[@Tags(Comp301Tags.COORDINATING_ANIMATOR)]]></text>
  </DocumentChange>
  <DocumentChange __id="335" _type="Delete" date="Sun Jun 20 20:08:46 EDT 2021" docASTNodeCount="13" docActiveCodeLength="140" docExpressionCount="8" docLength="140" endLine="2" length="2" offset="25" startLine="0" starttimestamp="1624232406782" timestamp="1720111">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="336" _type="Insert" date="Sun Jun 20 20:08:46 EDT 2021" docASTNodeCount="19" docActiveCodeLength="173" docExpressionCount="13" docLength="173" length="33" offset="25" repeat="3" starttimestamp="1624232406782" timestamp="1720112" timestamp2="1720113">
    <text><![CDATA[

import util.annotations.Tags;

]]></text>
  </DocumentChange>
  <DocumentChange __id="341" _type="Delete" date="Sun Jun 20 20:08:49 EDT 2021" docASTNodeCount="17" docActiveCodeLength="172" docExpressionCount="11" docLength="172" endLine="4" length="1" offset="75" startLine="4" starttimestamp="1624232406782" timestamp="1723028">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="343" _type="Insert" date="Sun Jun 20 20:08:50 EDT 2021" docASTNodeCount="19" docActiveCodeLength="173" docExpressionCount="13" docLength="173" length="1" offset="75" starttimestamp="1624232406782" timestamp="1723390">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="348" _type="Insert" date="Sun Jun 20 20:08:55 EDT 2021" docASTNodeCount="23" docActiveCodeLength="201" docExpressionCount="16" docLength="201" length="28" offset="27" repeat="2" starttimestamp="1624232406782" timestamp="1728395" timestamp2="1728398">
    <text><![CDATA[import tags301.Comp301Tags;
]]></text>
  </DocumentChange>
  <DocumentChange __id="353" _type="Insert" date="Sun Jun 20 20:08:59 EDT 2021" docASTNodeCount="23" docActiveCodeLength="203" docExpressionCount="16" docLength="203" length="2" offset="197" starttimestamp="1624232406782" timestamp="1732526">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="355" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:12:04 EDT 2021" docASTNodeCount="165" docActiveCodeLength="981" docExpressionCount="114" docLength="981" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1918067">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶@Tags(Comp301Tags.ANIMATOR)¶public class ABridgeSceneAnimator implements BridgeSceneAnimator {¶	static final int START = 0,¶					MOVE_BY = 10,¶					MARCH_TIME = 500;¶	@Override¶	public void  animateAvatar(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    	ThreadSupport.sleep(MARCH_TIME);¶    	anAvatar.moveAvatar(MOVE_BY, START);    	¶    	i++;¶    	}¶	}¶	@Override¶	public void  animateGuard(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    		if(i%2 == 0) {	¶		    	ThreadSupport.sleep(MARCH_TIME);¶		    	anAvatar.getArms().getRightLine().rotate(-7);¶		    	anAvatar.getArms().getLeftLine().rotate(7);¶		    	i++;¶    			}¶    		ThreadSupport.sleep(MARCH_TIME);¶	    	anAvatar.getArms().getRightLine().rotate(7);¶	    	anAvatar.getArms().getLeftLine().rotate(-7);¶	    	i++;¶    	}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="358" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:12:25 EDT 2021" docASTNodeCount="104" docActiveCodeLength="790" docExpressionCount="64" docLength="832" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="1938222">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶@Tags(Comp301Tags.ANIMATING_COMMAND)¶¶public class BridgeSceneAnimationCommand implements Runnable {¶	¶	Avatars anAvatar;¶	static BridgeSceneAnimator anAnimator;¶	boolean waitState = false;¶	¶	¶	public BridgeSceneAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		anAvatar = montyAvatar;¶		//anAnimator = new ABridgeSceneAnimator();¶		anAnimator = montyAnimator;¶		waitState = waitCommand;¶	}¶	¶¶	@Override¶	public void run() {¶		if(waitState) {¶			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();¶			anAnimator.animateAvatar(anAvatar);¶		}¶		anAnimator.animateAvatar(anAvatar);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="367" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:13:46 EDT 2021" docASTNodeCount="6" docActiveCodeLength="73" docExpressionCount="2" docLength="73" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="2019671">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

public class SceneLockedAnimationCommand {

}
]]></snapshot>
  </Command>
  <Command __id="372" _type="PauseCommand" date="Sun Jun 20 20:13:49 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="2022969">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1663]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="371" _type="MoveCaretCommand" caretOffset="67" date="Sun Jun 20 20:13:49 EDT 2021" docOffset="67" starttimestamp="1624232406782" timestamp="2022968" />
  <Command __id="374" _type="InsertStringCommand" date="Sun Jun 20 20:13:50 EDT 2021" starttimestamp="1624232406782" timestamp="2023677" timestamp2="2023677">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="376" _type="InsertStringCommand" date="Sun Jun 20 20:13:50 EDT 2021" starttimestamp="1624232406782" timestamp="2023853" timestamp2="2023853">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="378" _type="InsertStringCommand" date="Sun Jun 20 20:13:50 EDT 2021" starttimestamp="1624232406782" timestamp="2024080" timestamp2="2024080">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="380" _type="InsertStringCommand" date="Sun Jun 20 20:13:50 EDT 2021" starttimestamp="1624232406782" timestamp="2024212" timestamp2="2024212">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="382" _type="InsertStringCommand" date="Sun Jun 20 20:13:51 EDT 2021" starttimestamp="1624232406782" timestamp="2024348" timestamp2="2024348">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="384" _type="InsertStringCommand" date="Sun Jun 20 20:13:51 EDT 2021" starttimestamp="1624232406782" timestamp="2024528" timestamp2="2024528">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="386" _type="InsertStringCommand" date="Sun Jun 20 20:13:51 EDT 2021" starttimestamp="1624232406782" timestamp="2024686" timestamp2="2024686">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="388" _type="InsertStringCommand" date="Sun Jun 20 20:13:51 EDT 2021" starttimestamp="1624232406782" timestamp="2024956" timestamp2="2024956">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="391" _type="PauseCommand" date="Sun Jun 20 20:13:52 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="2026081">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1125]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="390" _type="InsertStringCommand" date="Sun Jun 20 20:13:52 EDT 2021" starttimestamp="1624232406782" timestamp="2026081" timestamp2="2026081">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="393" _type="PauseCommand" date="Sun Jun 20 20:13:57 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="2030554">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4473]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="394" _type="InsertStringCommand" date="Sun Jun 20 20:13:57 EDT 2021" starttimestamp="1624232406782" timestamp="2030555" timestamp2="2030555">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="396" _type="InsertStringCommand" date="Sun Jun 20 20:13:57 EDT 2021" starttimestamp="1624232406782" timestamp="2030805" timestamp2="2030805">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="398" _type="InsertStringCommand" date="Sun Jun 20 20:13:57 EDT 2021" starttimestamp="1624232406782" timestamp="2030985" timestamp2="2030985">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="400" _type="InsertStringCommand" date="Sun Jun 20 20:13:57 EDT 2021" starttimestamp="1624232406782" timestamp="2031161" timestamp2="2031161">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="402" _type="InsertStringCommand" date="Sun Jun 20 20:13:58 EDT 2021" starttimestamp="1624232406782" timestamp="2031458" timestamp2="2031458">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="404" _type="InsertStringCommand" date="Sun Jun 20 20:13:59 EDT 2021" starttimestamp="1624232406782" timestamp="2032249" timestamp2="2032249">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="406" _type="InsertStringCommand" date="Sun Jun 20 20:13:59 EDT 2021" starttimestamp="1624232406782" timestamp="2032736" timestamp2="2032736">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="408" _type="InsertStringCommand" date="Sun Jun 20 20:13:59 EDT 2021" starttimestamp="1624232406782" timestamp="2032965" timestamp2="2032965">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="410" _type="InsertStringCommand" date="Sun Jun 20 20:13:59 EDT 2021" starttimestamp="1624232406782" timestamp="2033118" timestamp2="2033118">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="412" _type="InsertStringCommand" date="Sun Jun 20 20:14:00 EDT 2021" starttimestamp="1624232406782" timestamp="2033393" timestamp2="2033393">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="414" _type="InsertStringCommand" date="Sun Jun 20 20:14:00 EDT 2021" starttimestamp="1624232406782" timestamp="2033525" timestamp2="2033525">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="416" _type="InsertStringCommand" date="Sun Jun 20 20:14:00 EDT 2021" starttimestamp="1624232406782" timestamp="2034023" timestamp2="2034023">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="418" _type="InsertStringCommand" date="Sun Jun 20 20:14:00 EDT 2021" starttimestamp="1624232406782" timestamp="2034135" timestamp2="2034135">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="420" _type="InsertStringCommand" date="Sun Jun 20 20:14:01 EDT 2021" starttimestamp="1624232406782" timestamp="2034316" timestamp2="2034316">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="422" _type="InsertStringCommand" date="Sun Jun 20 20:14:01 EDT 2021" starttimestamp="1624232406782" timestamp="2034540" timestamp2="2034540">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="424" _type="InsertStringCommand" date="Sun Jun 20 20:14:01 EDT 2021" starttimestamp="1624232406782" timestamp="2034630" timestamp2="2034630">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="426" _type="InsertStringCommand" date="Sun Jun 20 20:14:01 EDT 2021" starttimestamp="1624232406782" timestamp="2034964" timestamp2="2034964">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="428" _type="InsertStringCommand" date="Sun Jun 20 20:14:01 EDT 2021" starttimestamp="1624232406782" timestamp="2035077" timestamp2="2035077">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="430" _type="InsertStringCommand" date="Sun Jun 20 20:14:02 EDT 2021" starttimestamp="1624232406782" timestamp="2035260" timestamp2="2035260">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="432" _type="InsertStringCommand" date="Sun Jun 20 20:14:02 EDT 2021" starttimestamp="1624232406782" timestamp="2035440" timestamp2="2035440">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="434" _type="InsertStringCommand" date="Sun Jun 20 20:14:02 EDT 2021" starttimestamp="1624232406782" timestamp="2035706" timestamp2="2035706">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="436" _type="InsertStringCommand" date="Sun Jun 20 20:14:02 EDT 2021" starttimestamp="1624232406782" timestamp="2035958" timestamp2="2035958">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="438" _type="InsertStringCommand" date="Sun Jun 20 20:14:02 EDT 2021" starttimestamp="1624232406782" timestamp="2036157" timestamp2="2036157">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="440" _type="InsertStringCommand" date="Sun Jun 20 20:14:03 EDT 2021" starttimestamp="1624232406782" timestamp="2036292" timestamp2="2036292">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="442" _type="InsertStringCommand" date="Sun Jun 20 20:14:03 EDT 2021" starttimestamp="1624232406782" timestamp="2036407" timestamp2="2036407">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="444" _type="InsertStringCommand" date="Sun Jun 20 20:14:03 EDT 2021" starttimestamp="1624232406782" timestamp="2036543" timestamp2="2036543">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="446" _type="InsertStringCommand" date="Sun Jun 20 20:14:03 EDT 2021" starttimestamp="1624232406782" timestamp="2036678" timestamp2="2036678">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="448" _type="PauseCommand" date="Sun Jun 20 20:14:12 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="2045351">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[8673]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="447" _type="ShellCommand" date="Sun Jun 20 20:14:12 EDT 2021" starttimestamp="1624232406782" timestamp="2045351" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="449" _type="ShellCommand" date="Sun Jun 20 20:14:12 EDT 2021" starttimestamp="1624232406782" timestamp="2045502" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="471" _type="PauseCommand" date="Sun Jun 20 20:14:15 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="2048357">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2811]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="470" _type="MoveCaretCommand" caretOffset="350" date="Sun Jun 20 20:14:15 EDT 2021" docOffset="350" starttimestamp="1624232406782" timestamp="2048357" />
  <Command __id="473" _type="PauseCommand" date="Sun Jun 20 20:15:33 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="2126273">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[77916]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="474" _type="MoveCaretCommand" caretOffset="401" date="Sun Jun 20 20:15:33 EDT 2021" docOffset="401" starttimestamp="1624232406782" timestamp="2127029" />
  <Command __id="476" _type="PauseCommand" date="Sun Jun 20 20:30:22 EDT 2021" range="10m-20m" starttimestamp="1624232406782" timestamp="3015941">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[888912]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="477" _type="MoveCaretCommand" caretOffset="199" date="Sun Jun 20 20:30:23 EDT 2021" docOffset="199" starttimestamp="1624232406782" timestamp="3016275" />
  <Command __id="479" _type="PauseCommand" date="Sun Jun 20 20:30:36 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3029882">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13607]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="480" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:30:37 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="3030250" />
  <Command __id="482" _type="PauseCommand" date="Sun Jun 20 20:30:38 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3031826">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1576]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="483" _type="MoveCaretCommand" caretOffset="350" date="Sun Jun 20 20:30:38 EDT 2021" docOffset="350" starttimestamp="1624232406782" timestamp="3032155" />
  <Command __id="485" _type="PauseCommand" date="Sun Jun 20 20:32:06 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="3119756">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[87601]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="486" _type="MoveCaretCommand" caretOffset="199" date="Sun Jun 20 20:32:06 EDT 2021" docOffset="199" starttimestamp="1624232406782" timestamp="3119924" />
  <Command __id="488" _type="PauseCommand" date="Sun Jun 20 20:32:08 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3122097">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2173]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="489" _type="MoveCaretCommand" caretOffset="247" date="Sun Jun 20 20:32:09 EDT 2021" docOffset="337" starttimestamp="1624232406782" timestamp="3122242" />
  <Command __id="491" _type="PauseCommand" date="Sun Jun 20 20:32:11 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3124684">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2442]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="492" _type="MoveCaretCommand" caretOffset="442" date="Sun Jun 20 20:32:11 EDT 2021" docOffset="547" starttimestamp="1624232406782" timestamp="3124845" />
  <Command __id="494" _type="PauseCommand" date="Sun Jun 20 20:32:26 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3139289">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14444]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="493" _type="SelectTextCommand" caretOffset="374" date="Sun Jun 20 20:32:26 EDT 2021" end="499" start="374" starttimestamp="1624232406782" timestamp="3139289" />
  <Command __id="496" _type="PauseCommand" date="Sun Jun 20 20:32:27 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3140624">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1335]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="495" _type="CopyCommand" date="Sun Jun 20 20:32:27 EDT 2021" starttimestamp="1624232406782" timestamp="3140624" />
  <Command __id="498" _type="PauseCommand" date="Sun Jun 20 20:32:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3142158">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1534]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="499" _type="MoveCaretCommand" caretOffset="350" date="Sun Jun 20 20:32:29 EDT 2021" docOffset="350" starttimestamp="1624232406782" timestamp="3142326" />
  <Command __id="501" _type="PauseCommand" date="Sun Jun 20 20:32:43 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3156841">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14515]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="500" _type="SelectTextCommand" caretOffset="350" date="Sun Jun 20 20:32:43 EDT 2021" end="350" start="311" starttimestamp="1624232406782" timestamp="3156841" />
  <Command __id="503" _type="PauseCommand" date="Sun Jun 20 20:32:48 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3161611">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4770]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="504" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:32:48 EDT 2021" starttimestamp="1624232406782" timestamp="3161617" />
  <Command __id="506" _type="PauseCommand" date="Sun Jun 20 20:32:50 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3163862">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2245]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="507" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:32:50 EDT 2021" starttimestamp="1624232406782" timestamp="3163865" />
  <Command __id="509" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:32:51 EDT 2021" starttimestamp="1624232406782" timestamp="3164316" />
  <Command __id="511" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:32:51 EDT 2021" starttimestamp="1624232406782" timestamp="3164720" />
  <Command __id="513" _type="PauseCommand" date="Sun Jun 20 20:33:04 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3177276">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12556]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="512" _type="ShellCommand" date="Sun Jun 20 20:33:04 EDT 2021" starttimestamp="1624232406782" timestamp="3177276" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="515" _type="PauseCommand" date="Sun Jun 20 20:33:11 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="3184950">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7674]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="514" _type="ShellCommand" date="Sun Jun 20 20:33:11 EDT 2021" starttimestamp="1624232406782" timestamp="3184950" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="516" _type="MoveCaretCommand" caretOffset="63" date="Sun Jun 20 20:33:11 EDT 2021" docOffset="63" starttimestamp="1624232406782" timestamp="3185087" />
  <Command __id="518" _type="PauseCommand" date="Sun Jun 20 20:33:13 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3186230">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1143]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="519" _type="InsertStringCommand" date="Sun Jun 20 20:33:13 EDT 2021" starttimestamp="1624232406782" timestamp="3186234" timestamp2="3186234">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="521" _type="InsertStringCommand" date="Sun Jun 20 20:33:14 EDT 2021" starttimestamp="1624232406782" timestamp="3187224" timestamp2="3187224">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="523" _type="InsertStringCommand" date="Sun Jun 20 20:33:14 EDT 2021" starttimestamp="1624232406782" timestamp="3187873" timestamp2="3187873">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="525" _type="InsertStringCommand" date="Sun Jun 20 20:33:14 EDT 2021" starttimestamp="1624232406782" timestamp="3188076" timestamp2="3188076">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="527" _type="InsertStringCommand" date="Sun Jun 20 20:33:14 EDT 2021" starttimestamp="1624232406782" timestamp="3188210" timestamp2="3188210">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="529" _type="InsertStringCommand" date="Sun Jun 20 20:33:15 EDT 2021" starttimestamp="1624232406782" timestamp="3188413" timestamp2="3188413">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="531" _type="InsertStringCommand" date="Sun Jun 20 20:33:15 EDT 2021" starttimestamp="1624232406782" timestamp="3189002" timestamp2="3189002">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="533" _type="PasteCommand" date="Sun Jun 20 20:33:16 EDT 2021" starttimestamp="1624232406782" timestamp="3189455" />
  <Command __id="535" _type="PauseCommand" date="Sun Jun 20 20:33:21 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="3194804">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[5349]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="534" _type="ShellCommand" date="Sun Jun 20 20:33:21 EDT 2021" starttimestamp="1624232406782" timestamp="3194804" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="536" _type="ShellCommand" date="Sun Jun 20 20:33:21 EDT 2021" starttimestamp="1624232406782" timestamp="3194944" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="540" _type="PauseCommand" date="Sun Jun 20 20:33:24 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3197228">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2272]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="539" _type="MoveCaretCommand" caretOffset="112" date="Sun Jun 20 20:33:24 EDT 2021" docOffset="112" starttimestamp="1624232406782" timestamp="3197228" />
  <Command __id="542" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:33:24 EDT 2021" starttimestamp="1624232406782" timestamp="3198018" />
  <Command __id="544" _type="InsertStringCommand" date="Sun Jun 20 20:33:25 EDT 2021" starttimestamp="1624232406782" timestamp="3198404" timestamp2="3198404">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="545" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 20:33:25 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="3198410" />
  <Command __id="547" _type="PauseCommand" date="Sun Jun 20 20:33:31 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="3204391">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[5981]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="546" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 20:33:31 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="3204391" />
  <Command __id="550" _type="InsertStringCommand" date="Sun Jun 20 20:33:31 EDT 2021" starttimestamp="1624232406782" timestamp="3204405" timestamp2="3204405">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="552" _type="PauseCommand" date="Sun Jun 20 20:33:55 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="3228828">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[24423]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="553" _type="MoveCaretCommand" caretOffset="10222" date="Sun Jun 20 20:33:55 EDT 2021" docOffset="11091" starttimestamp="1624232406782" timestamp="3229005" />
  <Command __id="555" _type="PauseCommand" date="Sun Jun 20 20:33:59 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3232284">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3279]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="554" _type="MoveCaretCommand" caretOffset="10443" date="Sun Jun 20 20:33:59 EDT 2021" docOffset="11312" starttimestamp="1624232406782" timestamp="3232284" />
  <Command __id="557" _type="PauseCommand" date="Sun Jun 20 20:34:01 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3234387">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2103]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="558" _type="InsertStringCommand" date="Sun Jun 20 20:34:01 EDT 2021" starttimestamp="1624232406782" timestamp="3234389" timestamp2="3234389">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="560" _type="InsertStringCommand" date="Sun Jun 20 20:34:01 EDT 2021" starttimestamp="1624232406782" timestamp="3234679" timestamp2="3234679">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="562" _type="InsertStringCommand" date="Sun Jun 20 20:34:01 EDT 2021" starttimestamp="1624232406782" timestamp="3234881" timestamp2="3234881">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="564" _type="InsertStringCommand" date="Sun Jun 20 20:34:01 EDT 2021" starttimestamp="1624232406782" timestamp="3235130" timestamp2="3235130">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="566" _type="InsertStringCommand" date="Sun Jun 20 20:34:02 EDT 2021" starttimestamp="1624232406782" timestamp="3235263" timestamp2="3235263">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="568" _type="InsertStringCommand" date="Sun Jun 20 20:34:02 EDT 2021" starttimestamp="1624232406782" timestamp="3235421" timestamp2="3235421">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="570" _type="InsertStringCommand" date="Sun Jun 20 20:34:02 EDT 2021" starttimestamp="1624232406782" timestamp="3235555" timestamp2="3235555">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="373" _type="Insert" date="Sun Jun 20 20:13:50 EDT 2021" docASTNodeCount="6" docActiveCodeLength="82" docExpressionCount="2" docLength="82" length="9" offset="67" repeat="9" starttimestamp="1624232406782" timestamp="2023677" timestamp2="2026080">
    <text><![CDATA[ extends ]]></text>
  </DocumentChange>
  <DocumentChange __id="392" _type="Insert" date="Sun Jun 20 20:13:57 EDT 2021" docASTNodeCount="8" docActiveCodeLength="109" docExpressionCount="3" docLength="109" length="27" offset="76" repeat="27" starttimestamp="1624232406782" timestamp="2030554" timestamp2="2036677">
    <text><![CDATA[BridgeSceneAnimationCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="450" _type="Insert" date="Sun Jun 20 20:14:12 EDT 2021" docASTNodeCount="27" docActiveCodeLength="281" docExpressionCount="12" docLength="320" length="211" offset="105" repeat="16" starttimestamp="1624232406782" timestamp="2045530" timestamp2="2045545">
    <text><![CDATA[

	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {
		super(montyAvatar, montyAnimator, waitCommand);
		// TODO Auto-generated constructor stub
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="466" _type="Delete" date="Sun Jun 20 20:14:12 EDT 2021" docASTNodeCount="27" docActiveCodeLength="279" docExpressionCount="12" docLength="318" endLine="2" length="2" offset="25" startLine="0" starttimestamp="1624232406782" timestamp="2045546">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="467" _type="Insert" date="Sun Jun 20 20:14:12 EDT 2021" docASTNodeCount="33" docActiveCodeLength="318" docExpressionCount="17" docLength="357" length="39" offset="25" repeat="3" starttimestamp="1624232406782" timestamp="2045546" timestamp2="2045547">
    <text><![CDATA[

import grail.compositeFigs.Avatars;

]]></text>
  </DocumentChange>
  <Command __id="472" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:15:33 EDT 2021" docASTNodeCount="56" docActiveCodeLength="409" docExpressionCount="30" docLength="409" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="2126273">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneGuardAnimation.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;

public class BridgeSceneGuardAnimation implements Runnable {

	Avatars anAvatar;
	BridgeSceneAnimator anAnimator;
	
	
	public BridgeSceneGuardAnimation(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {
		anAvatar = montyAvatar;
		anAnimator = montyAnimator;
	}
	@Override
	public void run() {
		anAnimator.animateGuard(anAvatar);

	}

}
]]></snapshot>
  </Command>
  <Command __id="475" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:30:22 EDT 2021" docASTNodeCount="23" docActiveCodeLength="203" docExpressionCount="16" docLength="203" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3015941">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶"), Diff(INSERT,"import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATING_ANIMATOR)¶"), Diff(EQUAL,"public class ABridgeSceneLockedAnimator "), Diff(DELETE,"{"), Diff(INSERT,"extends ABridgeSceneAnimator {¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.COORDINATING_ANIMATOR)
public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {
	

}
]]></snapshot>
  </Command>
  <Command __id="478" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:30:36 EDT 2021" docASTNodeCount="22" docActiveCodeLength="206" docExpressionCount="10" docLength="206" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3029882">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ClearanceManager.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import util.models.PropertyListenerRegisterer;

public interface ClearanceManager extends PropertyListenerRegisterer{
	public void proceed();
	public void waitForProceed();	
	

}
]]></snapshot>
  </Command>
  <Command __id="481" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:30:38 EDT 2021" docASTNodeCount="33" docActiveCodeLength="318" docExpressionCount="17" docLength="357" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3031826">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶"), Diff(INSERT,"import grail.compositeFigs.Avatars;¶¶"), Diff(EQUAL,"public class SceneLockedAnimationCommand "), Diff(DELETE,"{"), Diff(INSERT,"extends BridgeSceneAnimationCommand {¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		super(montyAvatar, montyAnimator, waitCommand);¶		// TODO Auto-generated constructor stub¶	}"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;

public class SceneLockedAnimationCommand extends BridgeSceneAnimationCommand {

	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {
		super(montyAvatar, montyAnimator, waitCommand);
		// TODO Auto-generated constructor stub
	}

}
]]></snapshot>
  </Command>
  <Command __id="484" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:32:06 EDT 2021" docASTNodeCount="23" docActiveCodeLength="203" docExpressionCount="16" docLength="203" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3119756">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATING_ANIMATOR)¶public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="487" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:32:08 EDT 2021" docASTNodeCount="165" docActiveCodeLength="981" docExpressionCount="114" docLength="981" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3122097">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶@Tags(Comp301Tags.ANIMATOR)¶public class ABridgeSceneAnimator implements BridgeSceneAnimator {¶	static final int START = 0,¶					MOVE_BY = 10,¶					MARCH_TIME = 500;¶	@Override¶	public void  animateAvatar(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    	ThreadSupport.sleep(MARCH_TIME);¶    	anAvatar.moveAvatar(MOVE_BY, START);    	¶    	i++;¶    	}¶	}¶	@Override¶	public void  animateGuard(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    		if(i%2 == 0) {	¶		    	ThreadSupport.sleep(MARCH_TIME);¶		    	anAvatar.getArms().getRightLine().rotate(-7);¶		    	anAvatar.getArms().getLeftLine().rotate(7);¶		    	i++;¶    			}¶    		ThreadSupport.sleep(MARCH_TIME);¶	    	anAvatar.getArms().getRightLine().rotate(7);¶	    	anAvatar.getArms().getLeftLine().rotate(-7);¶	    	i++;¶    	}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="490" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:32:11 EDT 2021" docASTNodeCount="104" docActiveCodeLength="790" docExpressionCount="64" docLength="832" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3124684">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶@Tags(Comp301Tags.ANIMATING_COMMAND)¶¶public class BridgeSceneAnimationCommand implements Runnable {¶	¶	Avatars anAvatar;¶	static BridgeSceneAnimator anAnimator;¶	boolean waitState = false;¶	¶	¶	public BridgeSceneAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		anAvatar = montyAvatar;¶		//anAnimator = new ABridgeSceneAnimator();¶		anAnimator = montyAnimator;¶		waitState = waitCommand;¶	}¶	¶¶	@Override¶	public void run() {¶		if(waitState) {¶			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();¶			anAnimator.animateAvatar(anAvatar);¶		}¶		anAnimator.animateAvatar(anAvatar);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="497" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:32:28 EDT 2021" docASTNodeCount="33" docActiveCodeLength="318" docExpressionCount="17" docLength="357" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3142158">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶¶public class SceneLockedAnimationCommand extends BridgeSceneAnimationCommand {¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		super(montyAvatar, montyAnimator, waitCommand);¶		// TODO Auto-generated constructor stub¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="502" _type="Delete" date="Sun Jun 20 20:32:48 EDT 2021" docASTNodeCount="33" docActiveCodeLength="318" docExpressionCount="17" docLength="318" endLine="8" length="39" offset="311" startLine="8" starttimestamp="1624232406782" timestamp="3161611">
    <text><![CDATA[// TODO Auto-generated constructor stub]]></text>
  </DocumentChange>
  <DocumentChange __id="505" _type="Delete" date="Sun Jun 20 20:32:50 EDT 2021" docASTNodeCount="33" docActiveCodeLength="315" docExpressionCount="17" docLength="315" endLine="8" length="3" offset="308" repeat="3" startLine="7" starttimestamp="1624232406782" timestamp="3163862" timestamp2="3164716">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="517" _type="Insert" date="Sun Jun 20 20:33:13 EDT 2021" docASTNodeCount="38" docActiveCodeLength="364" docExpressionCount="22" docLength="364" length="49" offset="63" repeat="8" starttimestamp="1624232406782" timestamp="3186230" timestamp2="3189451">
    <text><![CDATA[
@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)]]></text>
  </DocumentChange>
  <DocumentChange __id="537" _type="Insert" date="Sun Jun 20 20:33:21 EDT 2021" docASTNodeCount="44" docActiveCodeLength="394" docExpressionCount="27" docLength="394" length="30" offset="62" repeat="2" starttimestamp="1624232406782" timestamp="3194956" timestamp2="3194957">
    <text><![CDATA[
import util.annotations.Tags;]]></text>
  </DocumentChange>
  <DocumentChange __id="541" _type="Delete" date="Sun Jun 20 20:33:24 EDT 2021" docASTNodeCount="42" docActiveCodeLength="393" docExpressionCount="25" docLength="393" endLine="5" length="1" offset="111" startLine="5" starttimestamp="1624232406782" timestamp="3198015">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="543" _type="Insert" date="Sun Jun 20 20:33:25 EDT 2021" docASTNodeCount="44" docActiveCodeLength="394" docExpressionCount="27" docLength="394" length="1" offset="111" starttimestamp="1624232406782" timestamp="3198401">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="548" _type="Insert" date="Sun Jun 20 20:33:31 EDT 2021" docASTNodeCount="48" docActiveCodeLength="422" docExpressionCount="30" docLength="422" length="28" offset="62" repeat="2" starttimestamp="1624232406782" timestamp="3204397" timestamp2="3204400">
    <text><![CDATA[
import tags301.Comp301Tags;]]></text>
  </DocumentChange>
  <Command __id="551" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:33:55 EDT 2021" docASTNodeCount="1611" docActiveCodeLength="10978" docExpressionCount="1045" docLength="11336" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3228828">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶"), Diff(DELETE,"	@Override"), Diff(EQUAL,"¶"), Diff(INSERT,""), Diff(EQUAL,"	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	"), Diff(DELETE,"@Override"), Diff(INSERT,"¶"), Diff(EQUAL,"¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶"), Diff(DELETE,"	@Override"), Diff(EQUAL,"¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	

	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	

	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	

	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <DocumentChange __id="556" _type="Insert" date="Sun Jun 20 20:34:01 EDT 2021" docASTNodeCount="1611" docActiveCodeLength="10985" docExpressionCount="1045" docLength="11343" length="7" offset="11312" repeat="7" starttimestamp="1624232406782" timestamp="3234387" timestamp2="3235553">
    <text><![CDATA[public ]]></text>
  </DocumentChange>
  <Command __id="572" _type="PauseCommand" date="Sun Jun 20 20:34:04 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3238183">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2628]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="573" _type="InsertStringCommand" date="Sun Jun 20 20:34:04 EDT 2021" starttimestamp="1624232406782" timestamp="3238186" timestamp2="3238186">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="575" _type="InsertStringCommand" date="Sun Jun 20 20:34:04 EDT 2021" starttimestamp="1624232406782" timestamp="3238201" timestamp2="3238201">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="578" _type="PauseCommand" date="Sun Jun 20 20:34:06 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3239607">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1406]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="577" _type="InsertStringCommand" date="Sun Jun 20 20:34:06 EDT 2021" starttimestamp="1624232406782" timestamp="3239607" timestamp2="3239607">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="580" _type="InsertStringCommand" date="Sun Jun 20 20:34:06 EDT 2021" starttimestamp="1624232406782" timestamp="3239850" timestamp2="3239850">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="582" _type="InsertStringCommand" date="Sun Jun 20 20:34:06 EDT 2021" starttimestamp="1624232406782" timestamp="3239966" timestamp2="3239966">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="584" _type="InsertStringCommand" date="Sun Jun 20 20:34:06 EDT 2021" starttimestamp="1624232406782" timestamp="3240100" timestamp2="3240100">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="586" _type="InsertStringCommand" date="Sun Jun 20 20:34:06 EDT 2021" starttimestamp="1624232406782" timestamp="3240213" timestamp2="3240213">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="588" _type="InsertStringCommand" date="Sun Jun 20 20:34:07 EDT 2021" starttimestamp="1624232406782" timestamp="3240384" timestamp2="3240384">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="590" _type="InsertStringCommand" date="Sun Jun 20 20:34:07 EDT 2021" starttimestamp="1624232406782" timestamp="3240563" timestamp2="3240563">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="592" _type="InsertStringCommand" date="Sun Jun 20 20:34:07 EDT 2021" starttimestamp="1624232406782" timestamp="3241136" timestamp2="3241136">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="594" _type="InsertStringCommand" date="Sun Jun 20 20:34:08 EDT 2021" starttimestamp="1624232406782" timestamp="3241338" timestamp2="3241338">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="596" _type="InsertStringCommand" date="Sun Jun 20 20:34:08 EDT 2021" starttimestamp="1624232406782" timestamp="3241563" timestamp2="3241563">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="571" _type="Insert" date="Sun Jun 20 20:34:04 EDT 2021" docASTNodeCount="1611" docActiveCodeLength="10997" docExpressionCount="1045" docLength="11355" length="12" offset="11319" repeat="12" starttimestamp="1624232406782" timestamp="3238183" timestamp2="3241561">
    <text><![CDATA[synchronized]]></text>
  </DocumentChange>
  <Command __id="598" _type="PauseCommand" date="Sun Jun 20 20:34:27 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3260595">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[19032]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="599" _type="InsertStringCommand" date="Sun Jun 20 20:34:27 EDT 2021" starttimestamp="1624232406782" timestamp="3260598" timestamp2="3260598">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="602" _type="PauseCommand" date="Sun Jun 20 20:34:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3261723">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1125]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="601" _type="InsertStringCommand" date="Sun Jun 20 20:34:28 EDT 2021" starttimestamp="1624232406782" timestamp="3261723" timestamp2="3261723">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="604" _type="InsertStringCommand" date="Sun Jun 20 20:34:28 EDT 2021" starttimestamp="1624232406782" timestamp="3261903" timestamp2="3261903">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="606" _type="InsertStringCommand" date="Sun Jun 20 20:34:28 EDT 2021" starttimestamp="1624232406782" timestamp="3262082" timestamp2="3262082">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="608" _type="InsertStringCommand" date="Sun Jun 20 20:34:29 EDT 2021" starttimestamp="1624232406782" timestamp="3262263" timestamp2="3262263">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="610" _type="InsertStringCommand" date="Sun Jun 20 20:34:29 EDT 2021" starttimestamp="1624232406782" timestamp="3262398" timestamp2="3262398">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="612" _type="InsertStringCommand" date="Sun Jun 20 20:34:29 EDT 2021" starttimestamp="1624232406782" timestamp="3262848" timestamp2="3262848">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="614" _type="InsertStringCommand" date="Sun Jun 20 20:34:29 EDT 2021" starttimestamp="1624232406782" timestamp="3263025" timestamp2="3263025">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="616" _type="InsertStringCommand" date="Sun Jun 20 20:34:29 EDT 2021" starttimestamp="1624232406782" timestamp="3263182" timestamp2="3263182">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="619" _type="PauseCommand" date="Sun Jun 20 20:34:31 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3264442">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1260]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="618" _type="InsertStringCommand" date="Sun Jun 20 20:34:31 EDT 2021" starttimestamp="1624232406782" timestamp="3264442" timestamp2="3264442">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="621" _type="InsertStringCommand" date="Sun Jun 20 20:34:31 EDT 2021" starttimestamp="1624232406782" timestamp="3264870" timestamp2="3264870">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="623" _type="InsertStringCommand" date="Sun Jun 20 20:34:31 EDT 2021" starttimestamp="1624232406782" timestamp="3265207" timestamp2="3265207">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="625" _type="InsertStringCommand" date="Sun Jun 20 20:34:32 EDT 2021" starttimestamp="1624232406782" timestamp="3265409" timestamp2="3265409">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="627" _type="InsertStringCommand" date="Sun Jun 20 20:34:32 EDT 2021" starttimestamp="1624232406782" timestamp="3265567" timestamp2="3265567">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="629" _type="InsertStringCommand" date="Sun Jun 20 20:34:32 EDT 2021" starttimestamp="1624232406782" timestamp="3265949" timestamp2="3265949">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="631" _type="InsertStringCommand" date="Sun Jun 20 20:34:32 EDT 2021" starttimestamp="1624232406782" timestamp="3266130" timestamp2="3266130">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="633" _type="InsertStringCommand" date="Sun Jun 20 20:34:33 EDT 2021" starttimestamp="1624232406782" timestamp="3266287" timestamp2="3266287">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="635" _type="InsertStringCommand" date="Sun Jun 20 20:34:33 EDT 2021" starttimestamp="1624232406782" timestamp="3266452" timestamp2="3266452">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="637" _type="InsertStringCommand" date="Sun Jun 20 20:34:33 EDT 2021" starttimestamp="1624232406782" timestamp="3266625" timestamp2="3266625">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="640" _type="PauseCommand" date="Sun Jun 20 20:34:35 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3268239">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1613]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="639" _type="InsertStringCommand" date="Sun Jun 20 20:34:35 EDT 2021" starttimestamp="1624232406782" timestamp="3268238" timestamp2="3268238">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="641" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 20:34:35 EDT 2021" starttimestamp="1624232406782" timestamp="3268697" />
  <Command __id="644" _type="PauseCommand" date="Sun Jun 20 20:34:36 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3269921">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1224]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="643" _type="InsertStringCommand" date="Sun Jun 20 20:34:36 EDT 2021" starttimestamp="1624232406782" timestamp="3269921" timestamp2="3269921">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="646" _type="InsertStringCommand" date="Sun Jun 20 20:34:37 EDT 2021" starttimestamp="1624232406782" timestamp="3270509" timestamp2="3270509">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="648" _type="PauseCommand" date="Sun Jun 20 20:34:49 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3283039">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[12530]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="647" _type="SelectTextCommand" caretOffset="8498" date="Sun Jun 20 20:34:49 EDT 2021" end="8498" start="8350" starttimestamp="1624232406782" timestamp="3283039" />
  <Command __id="649" _type="CopyCommand" date="Sun Jun 20 20:34:50 EDT 2021" starttimestamp="1624232406782" timestamp="3283678" />
  <Command __id="651" _type="PauseCommand" date="Sun Jun 20 20:34:53 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3286259">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2581]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="650" _type="MoveCaretCommand" caretOffset="10488" date="Sun Jun 20 20:34:53 EDT 2021" docOffset="11357" starttimestamp="1624232406782" timestamp="3286259" />
  <Command __id="653" _type="PauseCommand" date="Sun Jun 20 20:35:07 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3301125">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14866]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="654" _type="PasteCommand" date="Sun Jun 20 20:35:07 EDT 2021" starttimestamp="1624232406782" timestamp="3301134" />
  <Command __id="656" _type="PauseCommand" date="Sun Jun 20 20:40:06 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="3600096">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[298962]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="655" _type="BalloonCommand" date="Sun Jun 20 20:40:06 EDT 2021" message="*******************************************
Worked 20 minutes(fixed)/16 minutes(context based) from
Sun Jun 20 19:40:06 EDT 2021 to Sun Jun 20 20:35:07 EDT 2021
Edited 1 Projects: 
	grailA4FinalProject
Edited 4 Files: 
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveAvatars.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java
Number of insert: 681
Number of delete: 196
" starttimestamp="1624232406782" timestamp="3600096">
    <fineGrainedWorkTime><![CDATA[16]]></fineGrainedWorkTime>
    <insert><![CDATA[681]]></insert>
    <startTime><![CDATA[1624232406903]]></startTime>
    <endTime><![CDATA[1624235707916]]></endTime>
    <workTime><![CDATA[20]]></workTime>
    <delete><![CDATA[196]]></delete>
  </Command>
  <Command __id="658" _type="PauseCommand" date="Sun Jun 20 20:42:52 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="3765606">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[165510]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="657" _type="SelectTextCommand" caretOffset="10521" date="Sun Jun 20 20:42:52 EDT 2021" end="10545" start="10521" starttimestamp="1624232406782" timestamp="3765606" />
  <Command __id="660" _type="PauseCommand" date="Sun Jun 20 20:43:00 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="3774162">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[8556]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="661" _type="InsertStringCommand" date="Sun Jun 20 20:43:00 EDT 2021" starttimestamp="1624232406782" timestamp="3774170" timestamp2="3774170">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="663" _type="InsertStringCommand" date="Sun Jun 20 20:43:01 EDT 2021" starttimestamp="1624232406782" timestamp="3774450" timestamp2="3774450">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="665" _type="InsertStringCommand" date="Sun Jun 20 20:43:01 EDT 2021" starttimestamp="1624232406782" timestamp="3774629" timestamp2="3774629">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="667" _type="InsertStringCommand" date="Sun Jun 20 20:43:01 EDT 2021" starttimestamp="1624232406782" timestamp="3774820" timestamp2="3774820">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="669" _type="InsertStringCommand" date="Sun Jun 20 20:43:01 EDT 2021" starttimestamp="1624232406782" timestamp="3774955" timestamp2="3774955">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="671" _type="InsertStringCommand" date="Sun Jun 20 20:43:02 EDT 2021" starttimestamp="1624232406782" timestamp="3775351" timestamp2="3775351">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="673" _type="InsertStringCommand" date="Sun Jun 20 20:43:02 EDT 2021" starttimestamp="1624232406782" timestamp="3775675" timestamp2="3775675">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="675" _type="InsertStringCommand" date="Sun Jun 20 20:43:02 EDT 2021" starttimestamp="1624232406782" timestamp="3775855" timestamp2="3775855">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="677" _type="InsertStringCommand" date="Sun Jun 20 20:43:02 EDT 2021" starttimestamp="1624232406782" timestamp="3775993" timestamp2="3775993">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="679" _type="InsertStringCommand" date="Sun Jun 20 20:43:02 EDT 2021" starttimestamp="1624232406782" timestamp="3776170" timestamp2="3776170">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="681" _type="InsertStringCommand" date="Sun Jun 20 20:43:03 EDT 2021" starttimestamp="1624232406782" timestamp="3776520" timestamp2="3776520">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="683" _type="InsertStringCommand" date="Sun Jun 20 20:43:03 EDT 2021" starttimestamp="1624232406782" timestamp="3777002" timestamp2="3777002">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="685" _type="InsertStringCommand" date="Sun Jun 20 20:43:03 EDT 2021" starttimestamp="1624232406782" timestamp="3777086" timestamp2="3777086">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="687" _type="InsertStringCommand" date="Sun Jun 20 20:43:04 EDT 2021" starttimestamp="1624232406782" timestamp="3777246" timestamp2="3777246">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="689" _type="InsertStringCommand" date="Sun Jun 20 20:43:04 EDT 2021" starttimestamp="1624232406782" timestamp="3777430" timestamp2="3777430">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="691" _type="InsertStringCommand" date="Sun Jun 20 20:43:04 EDT 2021" starttimestamp="1624232406782" timestamp="3777562" timestamp2="3777562">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="693" _type="InsertStringCommand" date="Sun Jun 20 20:43:05 EDT 2021" starttimestamp="1624232406782" timestamp="3778239" timestamp2="3778239">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="695" _type="InsertStringCommand" date="Sun Jun 20 20:43:05 EDT 2021" starttimestamp="1624232406782" timestamp="3778352" timestamp2="3778352">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="697" _type="InsertStringCommand" date="Sun Jun 20 20:43:05 EDT 2021" starttimestamp="1624232406782" timestamp="3778555" timestamp2="3778555">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="699" _type="InsertStringCommand" date="Sun Jun 20 20:43:06 EDT 2021" starttimestamp="1624232406782" timestamp="3779407" timestamp2="3779407">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="701" _type="PauseCommand" date="Sun Jun 20 20:43:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3783227">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3820]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="702" _type="InsertStringCommand" date="Sun Jun 20 20:43:10 EDT 2021" starttimestamp="1624232406782" timestamp="3783236" timestamp2="3783236">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="704" _type="InsertStringCommand" date="Sun Jun 20 20:43:10 EDT 2021" starttimestamp="1624232406782" timestamp="3783912" timestamp2="3783912">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="706" _type="InsertStringCommand" date="Sun Jun 20 20:43:10 EDT 2021" starttimestamp="1624232406782" timestamp="3784179" timestamp2="3784179">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="708" _type="InsertStringCommand" date="Sun Jun 20 20:43:11 EDT 2021" starttimestamp="1624232406782" timestamp="3784312" timestamp2="3784312">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="710" _type="InsertStringCommand" date="Sun Jun 20 20:43:11 EDT 2021" starttimestamp="1624232406782" timestamp="3784442" timestamp2="3784442">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="712" _type="InsertStringCommand" date="Sun Jun 20 20:43:11 EDT 2021" starttimestamp="1624232406782" timestamp="3784604" timestamp2="3784604">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="714" _type="InsertStringCommand" date="Sun Jun 20 20:43:11 EDT 2021" starttimestamp="1624232406782" timestamp="3784761" timestamp2="3784761">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="716" _type="PauseCommand" date="Sun Jun 20 20:43:15 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3788589">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3828]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="715" _type="MoveCaretCommand" caretOffset="10520" date="Sun Jun 20 20:43:15 EDT 2021" docOffset="11389" starttimestamp="1624232406782" timestamp="3788589" />
  <Command __id="718" _type="PauseCommand" date="Sun Jun 20 20:43:16 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3789655">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1066]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 20:43:16 EDT 2021" starttimestamp="1624232406782" timestamp="3789655" />
  <Command __id="720" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:43:16 EDT 2021" starttimestamp="1624232406782" timestamp="3789816" />
  <Command __id="722" _type="PauseCommand" date="Sun Jun 20 20:43:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3791578">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1762]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="721" _type="MoveCaretCommand" caretOffset="10638" date="Sun Jun 20 20:43:18 EDT 2021" docOffset="11507" starttimestamp="1624232406782" timestamp="3791578" />
  <Command __id="724" _type="PauseCommand" date="Sun Jun 20 20:43:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3795992">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4414]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="723" _type="ShellCommand" date="Sun Jun 20 20:43:22 EDT 2021" starttimestamp="1624232406782" timestamp="3795992" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="725" _type="ShellCommand" date="Sun Jun 20 20:43:22 EDT 2021" starttimestamp="1624232406782" timestamp="3796154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="729" _type="PauseCommand" date="Sun Jun 20 20:43:37 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3810414">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[14244]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="730" _type="MoveCaretCommand" caretOffset="169" date="Sun Jun 20 20:43:37 EDT 2021" docOffset="169" starttimestamp="1624232406782" timestamp="3810545" />
  <Command __id="732" _type="PauseCommand" date="Sun Jun 20 20:43:51 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3824802">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14257]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="733" _type="MoveCaretCommand" caretOffset="10638" date="Sun Jun 20 20:43:51 EDT 2021" docOffset="11560" starttimestamp="1624232406782" timestamp="3824958" />
  <Command __id="735" _type="PauseCommand" date="Sun Jun 20 20:44:15 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="3848300">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23342]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="734" _type="MoveCaretCommand" caretOffset="8384" date="Sun Jun 20 20:44:15 EDT 2021" docOffset="9306" starttimestamp="1624232406782" timestamp="3848300" />
  <Command __id="737" _type="PauseCommand" date="Sun Jun 20 20:44:17 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3850713">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2412]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="736" _type="MoveCaretCommand" caretOffset="8380" date="Sun Jun 20 20:44:17 EDT 2021" docOffset="9302" starttimestamp="1624232406782" timestamp="3850712" />
  <Command __id="738" _type="SelectTextCommand" caretOffset="8381" date="Sun Jun 20 20:44:17 EDT 2021" end="8381" start="8378" starttimestamp="1624232406782" timestamp="3850881" />
  <Command __id="739" _type="SelectTextCommand" caretOffset="8445" date="Sun Jun 20 20:44:17 EDT 2021" end="8445" start="8348" starttimestamp="1624232406782" timestamp="3851049" />
  <Command __id="740" _type="SelectTextCommand" caretOffset="8356" date="Sun Jun 20 20:44:17 EDT 2021" end="8356" start="8348" starttimestamp="1624232406782" timestamp="3851139" />
  <Command __id="741" _type="MoveCaretCommand" caretOffset="8380" date="Sun Jun 20 20:44:18 EDT 2021" docOffset="9302" starttimestamp="1624232406782" timestamp="3851767" />
  <Command __id="742" _type="MoveCaretCommand" caretOffset="8380" date="Sun Jun 20 20:44:18 EDT 2021" docOffset="9302" starttimestamp="1624232406782" timestamp="3851927" />
  <Command __id="743" _type="SelectTextCommand" caretOffset="8381" date="Sun Jun 20 20:44:18 EDT 2021" end="8381" start="8378" starttimestamp="1624232406782" timestamp="3852152" />
  <Command __id="745" _type="PauseCommand" date="Sun Jun 20 20:44:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3853806">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1654]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="744" _type="MoveCaretCommand" caretOffset="8412" date="Sun Jun 20 20:44:20 EDT 2021" docOffset="9334" starttimestamp="1624232406782" timestamp="3853806" />
  <Command __id="746" _type="SelectTextCommand" caretOffset="8413" date="Sun Jun 20 20:44:20 EDT 2021" end="8413" start="8408" starttimestamp="1624232406782" timestamp="3853965" />
  <Command __id="747" _type="SelectTextCommand" caretOffset="8445" date="Sun Jun 20 20:44:20 EDT 2021" end="8445" start="8348" starttimestamp="1624232406782" timestamp="3854140" />
  <Command __id="748" _type="SelectTextCommand" caretOffset="8356" date="Sun Jun 20 20:44:21 EDT 2021" end="8356" start="8348" starttimestamp="1624232406782" timestamp="3854332" />
  <Command __id="749" _type="SelectTextCommand" caretOffset="8445" date="Sun Jun 20 20:44:21 EDT 2021" end="8445" start="8348" starttimestamp="1624232406782" timestamp="3854784" />
  <Command __id="750" _type="SelectTextCommand" caretOffset="8356" date="Sun Jun 20 20:44:21 EDT 2021" end="8356" start="8348" starttimestamp="1624232406782" timestamp="3854930" />
  <Command __id="751" _type="SelectTextCommand" caretOffset="8445" date="Sun Jun 20 20:44:21 EDT 2021" end="8445" start="8348" starttimestamp="1624232406782" timestamp="3855095" />
  <Command __id="753" _type="PauseCommand" date="Sun Jun 20 20:44:38 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3871367">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[16272]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="754" _type="MoveCaretCommand" caretOffset="401" date="Sun Jun 20 20:44:38 EDT 2021" docOffset="401" starttimestamp="1624232406782" timestamp="3871666" />
  <Command __id="756" _type="PauseCommand" date="Sun Jun 20 20:45:02 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="3895741">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[24075]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="757" _type="MoveCaretCommand" caretOffset="169" date="Sun Jun 20 20:45:02 EDT 2021" docOffset="169" starttimestamp="1624232406782" timestamp="3895878" />
  <Command __id="759" _type="PauseCommand" date="Sun Jun 20 20:45:07 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="3901043">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5165]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="758" _type="SelectTextCommand" caretOffset="232" date="Sun Jun 20 20:45:07 EDT 2021" end="247" start="232" starttimestamp="1624232406782" timestamp="3901043" />
  <Command __id="761" _type="PauseCommand" date="Sun Jun 20 20:45:09 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3902478">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1435]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="760" _type="MoveCaretCommand" caretOffset="232" date="Sun Jun 20 20:45:09 EDT 2021" docOffset="232" starttimestamp="1624232406782" timestamp="3902478" />
  <Command __id="762" _type="MoveCaretCommand" caretOffset="231" date="Sun Jun 20 20:45:10 EDT 2021" docOffset="231" starttimestamp="1624232406782" timestamp="3903224" />
  <Command __id="764" _type="PauseCommand" date="Sun Jun 20 20:45:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3904456">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1232]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="765" _type="InsertStringCommand" date="Sun Jun 20 20:45:11 EDT 2021" starttimestamp="1624232406782" timestamp="3904460" timestamp2="3904460">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="767" _type="InsertStringCommand" date="Sun Jun 20 20:45:11 EDT 2021" starttimestamp="1624232406782" timestamp="3904820" timestamp2="3904820">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="769" _type="InsertStringCommand" date="Sun Jun 20 20:45:11 EDT 2021" starttimestamp="1624232406782" timestamp="3904977" timestamp2="3904977">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="771" _type="InsertStringCommand" date="Sun Jun 20 20:45:11 EDT 2021" starttimestamp="1624232406782" timestamp="3905179" timestamp2="3905179">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="773" _type="InsertStringCommand" date="Sun Jun 20 20:45:12 EDT 2021" starttimestamp="1624232406782" timestamp="3905336" timestamp2="3905336">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="775" _type="PauseCommand" date="Sun Jun 20 20:45:14 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3908005">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2669]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="774" _type="MoveCaretCommand" caretOffset="251" date="Sun Jun 20 20:45:14 EDT 2021" docOffset="251" starttimestamp="1624232406782" timestamp="3908005" />
  <Command __id="777" _type="PauseCommand" date="Sun Jun 20 20:45:16 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3909361">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1356]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="776" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 20:45:16 EDT 2021" starttimestamp="1624232406782" timestamp="3909361" />
  <Command __id="779" _type="PauseCommand" date="Sun Jun 20 20:45:17 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3910620">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1259]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="780" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:17 EDT 2021" starttimestamp="1624232406782" timestamp="3910623" />
  <Command __id="782" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:17 EDT 2021" starttimestamp="1624232406782" timestamp="3911124" />
  <Command __id="784" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:17 EDT 2021" starttimestamp="1624232406782" timestamp="3911208" />
  <Command __id="786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:18 EDT 2021" starttimestamp="1624232406782" timestamp="3911292" />
  <Command __id="788" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:18 EDT 2021" starttimestamp="1624232406782" timestamp="3911376" />
  <Command __id="790" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:18 EDT 2021" starttimestamp="1624232406782" timestamp="3911613" />
  <Command __id="792" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:18 EDT 2021" starttimestamp="1624232406782" timestamp="3912105" />
  <Command __id="794" _type="PauseCommand" date="Sun Jun 20 20:45:39 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="3932346">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[20241]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="793" _type="ShellCommand" date="Sun Jun 20 20:45:39 EDT 2021" starttimestamp="1624232406782" timestamp="3932346" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="795" _type="ShellCommand" date="Sun Jun 20 20:45:39 EDT 2021" starttimestamp="1624232406782" timestamp="3932518" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="799" _type="PauseCommand" date="Sun Jun 20 20:45:47 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="3940768">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[8237]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="798" _type="SelectTextCommand" caretOffset="341" date="Sun Jun 20 20:45:47 EDT 2021" end="360" start="341" starttimestamp="1624232406782" timestamp="3940768" />
  <Command __id="801" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:48 EDT 2021" starttimestamp="1624232406782" timestamp="3941433" />
  <Command __id="803" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:48 EDT 2021" starttimestamp="1624232406782" timestamp="3942034" />
  <Command __id="805" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:45:49 EDT 2021" starttimestamp="1624232406782" timestamp="3942526" />
  <Command __id="807" _type="PauseCommand" date="Sun Jun 20 20:46:02 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="3955627">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[13100]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="806" _type="MoveCaretCommand" caretOffset="339" date="Sun Jun 20 20:46:02 EDT 2021" docOffset="339" starttimestamp="1624232406782" timestamp="3955626" />
  <Command __id="809" _type="PauseCommand" date="Sun Jun 20 20:46:07 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="3960909">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5283]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="810" _type="UndoCommand" date="Sun Jun 20 20:46:07 EDT 2021" starttimestamp="1624232406782" timestamp="3960912" />
  <Command __id="812" _type="UndoCommand" date="Sun Jun 20 20:46:08 EDT 2021" starttimestamp="1624232406782" timestamp="3961765" />
  <Command __id="814" _type="PauseCommand" date="Sun Jun 20 20:46:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3963787">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2022]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="813" _type="MoveCaretCommand" caretOffset="403" date="Sun Jun 20 20:46:10 EDT 2021" docOffset="403" starttimestamp="1624232406782" timestamp="3963787" />
  <Command __id="816" _type="PauseCommand" date="Sun Jun 20 20:46:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3964788">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1001]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="815" _type="MoveCaretCommand" caretOffset="403" date="Sun Jun 20 20:46:11 EDT 2021" docOffset="403" starttimestamp="1624232406782" timestamp="3964788" />
  <Command __id="818" _type="PauseCommand" date="Sun Jun 20 20:46:13 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3966520">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1732]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="817" _type="MoveCaretCommand" caretOffset="400" date="Sun Jun 20 20:46:13 EDT 2021" docOffset="400" starttimestamp="1624232406782" timestamp="3966520" />
  <Command __id="820" _type="PauseCommand" date="Sun Jun 20 20:46:14 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3967544">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1023]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="821" _type="InsertStringCommand" date="Sun Jun 20 20:46:14 EDT 2021" starttimestamp="1624232406782" timestamp="3967550" timestamp2="3967550">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="823" _type="PauseCommand" date="Sun Jun 20 20:46:18 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="3972168">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4618]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="822" _type="MoveCaretCommand" caretOffset="170" date="Sun Jun 20 20:46:18 EDT 2021" docOffset="170" starttimestamp="1624232406782" timestamp="3972168" />
  <DocumentChange __id="597" _type="Insert" date="Sun Jun 20 20:34:27 EDT 2021" docASTNodeCount="1617" docActiveCodeLength="11026" docExpressionCount="1046" docLength="11384" length="29" offset="11331" repeat="22" starttimestamp="1624232406782" timestamp="3260595" timestamp2="3270507">
    <text><![CDATA[ void lockstepGuard() {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="652" _type="Replace" date="Sun Jun 20 20:35:07 EDT 2021" docASTNodeCount="1641" docActiveCodeLength="11174" docExpressionCount="1062" docLength="11532" endLine="396" insertionLength="150" int_docASTNodeCount="1617" int_docActiveCodeLength="11024" int_docExpressionCount="1046" int_docLength="11382" length="2" offset="11355" startLine="396" starttimestamp="1624232406782" timestamp="3301125">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="659" _type="Replace" date="Sun Jun 20 20:43:00 EDT 2021" docASTNodeCount="1641" docActiveCodeLength="11151" docExpressionCount="1062" docLength="11509" endLine="396" insertionLength="1" int_docASTNodeCount="1641" int_docActiveCodeLength="11150" int_docExpressionCount="1062" int_docLength="11508" length="24" offset="11390" startLine="396" starttimestamp="1624232406782" timestamp="3774162">
    <deletedText><![CDATA[ridgeSceneGuardAnimation]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="662" _type="Insert" date="Sun Jun 20 20:43:01 EDT 2021" docASTNodeCount="1641" docActiveCodeLength="11170" docExpressionCount="1062" docLength="11528" length="19" offset="11391" repeat="19" starttimestamp="1624232406782" timestamp="3774446" timestamp2="3779400">
    <text><![CDATA[ceneLockedAnimation]]></text>
  </DocumentChange>
  <DocumentChange __id="700" _type="Insert" date="Sun Jun 20 20:43:10 EDT 2021" docASTNodeCount="1641" docActiveCodeLength="11177" docExpressionCount="1062" docLength="11535" length="7" offset="11410" repeat="7" starttimestamp="1624232406782" timestamp="3783227" timestamp2="3784753">
    <text><![CDATA[Command]]></text>
  </DocumentChange>
  <DocumentChange __id="719" _type="Delete" date="Sun Jun 20 20:43:16 EDT 2021" docASTNodeCount="1641" docActiveCodeLength="11176" docExpressionCount="1062" docLength="11534" endLine="396" length="1" offset="11389" startLine="396" starttimestamp="1624232406782" timestamp="3789814">
    <text><![CDATA[B]]></text>
  </DocumentChange>
  <DocumentChange __id="726" _type="Insert" date="Sun Jun 20 20:43:22 EDT 2021" docASTNodeCount="1645" docActiveCodeLength="11229" docExpressionCount="1065" docLength="11587" length="53" offset="358" repeat="2" starttimestamp="1624232406782" timestamp="3796170" timestamp2="3796172">
    <text><![CDATA[
import AnimationMethods.SceneLockedAnimationCommand;]]></text>
  </DocumentChange>
  <Command __id="728" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:43:37 EDT 2021" docASTNodeCount="48" docActiveCodeLength="422" docExpressionCount="30" docLength="422" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3810414">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶"), Diff(INSERT,"import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)"), Diff(EQUAL,"¶public class SceneLockedAnimationCommand extends BridgeSceneAnimationCommand {¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		super(montyAvatar, montyAnimator, waitCommand);¶	"), Diff(DELETE,"	// TODO Auto-generated constructor stub¶	"), Diff(EQUAL,"}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)
public class SceneLockedAnimationCommand extends BridgeSceneAnimationCommand {

	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {
		super(montyAvatar, montyAnimator, waitCommand);
	}

}
]]></snapshot>
  </Command>
  <Command __id="731" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:43:51 EDT 2021" docASTNodeCount="1645" docActiveCodeLength="11229" docExpressionCount="1065" docLength="11587" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3824802">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶"), Diff(INSERT,"import AnimationMethods.SceneLockedAnimationCommand;¶"), Diff(EQUAL,"import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	"), Diff(INSERT,"public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}"), Diff(EQUAL,"¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import AnimationMethods.SceneLockedAnimationCommand;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	

	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	

	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	

	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	public synchronized void lockstepGuard() {
		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <Command __id="752" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:44:38 EDT 2021" docASTNodeCount="56" docActiveCodeLength="409" docExpressionCount="30" docLength="409" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3871367">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneGuardAnimation.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶¶public class BridgeSceneGuardAnimation implements Runnable {¶¶	Avatars anAvatar;¶	BridgeSceneAnimator anAnimator;¶	¶	¶	public BridgeSceneGuardAnimation(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {¶		anAvatar = montyAvatar;¶		anAnimator = montyAnimator;¶	}¶	@Override¶	public void run() {¶		anAnimator.animateGuard(anAvatar);¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="755" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:45:02 EDT 2021" docASTNodeCount="48" docActiveCodeLength="422" docExpressionCount="30" docLength="422" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="3895741">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)¶public class SceneLockedAnimationCommand extends BridgeSceneAnimationCommand {¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		super(montyAvatar, montyAnimator, waitCommand);¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="763" _type="Insert" date="Sun Jun 20 20:45:11 EDT 2021" docASTNodeCount="48" docActiveCodeLength="427" docExpressionCount="30" docLength="427" length="5" offset="231" repeat="5" starttimestamp="1624232406782" timestamp="3904456" timestamp2="3905332">
    <text><![CDATA[Guard]]></text>
  </DocumentChange>
  <DocumentChange __id="778" _type="Delete" date="Sun Jun 20 20:45:17 EDT 2021" docASTNodeCount="48" docActiveCodeLength="420" docExpressionCount="30" docLength="420" endLine="7" length="7" offset="245" repeat="7" startLine="7" starttimestamp="1624232406782" timestamp="3910620" timestamp2="3912103">
    <text><![CDATA[Command]]></text>
  </DocumentChange>
  <DocumentChange __id="796" _type="Delete" date="Sun Jun 20 20:45:39 EDT 2021" docASTNodeCount="47" docActiveCodeLength="407" docExpressionCount="29" docLength="407" endLine="10" length="13" offset="398" repeat="2" startLine="10" starttimestamp="1624232406782" timestamp="3932531" timestamp2="3932532">
    <text><![CDATA[, waitCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="800" _type="Delete" date="Sun Jun 20 20:45:48 EDT 2021" docASTNodeCount="44" docActiveCodeLength="386" docExpressionCount="28" docLength="386" endLine="9" length="21" offset="339" repeat="3" startLine="9" starttimestamp="1624232406782" timestamp="3941427" timestamp2="3942523">
    <text><![CDATA[, boolean waitCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="808" _type="Insert" date="Sun Jun 20 20:46:07 EDT 2021" docASTNodeCount="47" docActiveCodeLength="407" docExpressionCount="29" docLength="407" length="21" offset="339" repeat="2" starttimestamp="1624232406782" timestamp="3960909" timestamp2="3961763">
    <text><![CDATA[, boolean waitCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="819" _type="Insert" date="Sun Jun 20 20:46:14 EDT 2021" docASTNodeCount="47" docActiveCodeLength="410" docExpressionCount="29" docLength="410" length="3" offset="400" starttimestamp="1624232406782" timestamp="3967543">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="825" _type="PauseCommand" date="Sun Jun 20 20:46:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3974021">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1853]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="824" _type="MoveCaretCommand" caretOffset="247" date="Sun Jun 20 20:46:20 EDT 2021" docOffset="247" starttimestamp="1624232406782" timestamp="3974021" />
  <Command __id="827" _type="InsertStringCommand" date="Sun Jun 20 20:46:21 EDT 2021" starttimestamp="1624232406782" timestamp="3974776" timestamp2="3974776">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="829" _type="InsertStringCommand" date="Sun Jun 20 20:46:21 EDT 2021" starttimestamp="1624232406782" timestamp="3975085" timestamp2="3975085">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="832" _type="PauseCommand" date="Sun Jun 20 20:46:23 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3976369">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1284]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="831" _type="InsertStringCommand" date="Sun Jun 20 20:46:23 EDT 2021" starttimestamp="1624232406782" timestamp="3976369" timestamp2="3976369">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="834" _type="InsertStringCommand" date="Sun Jun 20 20:46:23 EDT 2021" starttimestamp="1624232406782" timestamp="3976504" timestamp2="3976504">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="836" _type="InsertStringCommand" date="Sun Jun 20 20:46:23 EDT 2021" starttimestamp="1624232406782" timestamp="3976662" timestamp2="3976662">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="838" _type="InsertStringCommand" date="Sun Jun 20 20:46:23 EDT 2021" starttimestamp="1624232406782" timestamp="3976818" timestamp2="3976818">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="840" _type="InsertStringCommand" date="Sun Jun 20 20:46:23 EDT 2021" starttimestamp="1624232406782" timestamp="3976930" timestamp2="3976930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="842" _type="InsertStringCommand" date="Sun Jun 20 20:46:23 EDT 2021" starttimestamp="1624232406782" timestamp="3977107" timestamp2="3977107">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="844" _type="InsertStringCommand" date="Sun Jun 20 20:46:23 EDT 2021" starttimestamp="1624232406782" timestamp="3977197" timestamp2="3977197">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="846" _type="InsertStringCommand" date="Sun Jun 20 20:46:24 EDT 2021" starttimestamp="1624232406782" timestamp="3977381" timestamp2="3977381">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="848" _type="InsertStringCommand" date="Sun Jun 20 20:46:25 EDT 2021" starttimestamp="1624232406782" timestamp="3978368" timestamp2="3978368">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="850" _type="InsertStringCommand" date="Sun Jun 20 20:46:25 EDT 2021" starttimestamp="1624232406782" timestamp="3978885" timestamp2="3978885">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="852" _type="InsertStringCommand" date="Sun Jun 20 20:46:25 EDT 2021" starttimestamp="1624232406782" timestamp="3979019" timestamp2="3979019">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="854" _type="InsertStringCommand" date="Sun Jun 20 20:46:26 EDT 2021" starttimestamp="1624232406782" timestamp="3979316" timestamp2="3979316">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="856" _type="InsertStringCommand" date="Sun Jun 20 20:46:26 EDT 2021" starttimestamp="1624232406782" timestamp="3979654" timestamp2="3979654">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="858" _type="InsertStringCommand" date="Sun Jun 20 20:46:26 EDT 2021" starttimestamp="1624232406782" timestamp="3979747" timestamp2="3979747">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="860" _type="InsertStringCommand" date="Sun Jun 20 20:46:26 EDT 2021" starttimestamp="1624232406782" timestamp="3979923" timestamp2="3979923">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="862" _type="InsertStringCommand" date="Sun Jun 20 20:46:26 EDT 2021" starttimestamp="1624232406782" timestamp="3980013" timestamp2="3980013">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="864" _type="InsertStringCommand" date="Sun Jun 20 20:46:26 EDT 2021" starttimestamp="1624232406782" timestamp="3980171" timestamp2="3980171">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="867" _type="PauseCommand" date="Sun Jun 20 20:46:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3981477">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1306]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="866" _type="InsertStringCommand" date="Sun Jun 20 20:46:28 EDT 2021" starttimestamp="1624232406782" timestamp="3981477" timestamp2="3981477">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="869" _type="InsertStringCommand" date="Sun Jun 20 20:46:29 EDT 2021" starttimestamp="1624232406782" timestamp="3982242" timestamp2="3982242">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="871" _type="InsertStringCommand" date="Sun Jun 20 20:46:29 EDT 2021" starttimestamp="1624232406782" timestamp="3982399" timestamp2="3982399">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="874" _type="PauseCommand" date="Sun Jun 20 20:46:31 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="3984353">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1954]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="873" _type="InsertStringCommand" date="Sun Jun 20 20:46:31 EDT 2021" starttimestamp="1624232406782" timestamp="3984353" timestamp2="3984353">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="876" _type="InsertStringCommand" date="Sun Jun 20 20:46:31 EDT 2021" starttimestamp="1624232406782" timestamp="3984630" timestamp2="3984630">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="878" _type="InsertStringCommand" date="Sun Jun 20 20:46:31 EDT 2021" starttimestamp="1624232406782" timestamp="3984716" timestamp2="3984716">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="880" _type="InsertStringCommand" date="Sun Jun 20 20:46:31 EDT 2021" starttimestamp="1624232406782" timestamp="3984896" timestamp2="3984896">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="882" _type="InsertStringCommand" date="Sun Jun 20 20:46:31 EDT 2021" starttimestamp="1624232406782" timestamp="3985076" timestamp2="3985076">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="884" _type="InsertStringCommand" date="Sun Jun 20 20:46:32 EDT 2021" starttimestamp="1624232406782" timestamp="3985525" timestamp2="3985525">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="826" _type="Insert" date="Sun Jun 20 20:46:21 EDT 2021" docASTNodeCount="52" docActiveCodeLength="440" docExpressionCount="31" docLength="440" length="30" offset="247" repeat="28" starttimestamp="1624232406782" timestamp="3974769" timestamp2="3985521">
    <text><![CDATA[
	
	boolean waitState = false;]]></text>
  </DocumentChange>
  <Command __id="886" _type="PauseCommand" date="Sun Jun 20 20:47:17 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="4031017">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[45492]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="885" _type="MoveCaretCommand" caretOffset="436" date="Sun Jun 20 20:47:17 EDT 2021" docOffset="436" starttimestamp="1624232406782" timestamp="4031017" />
  <Command __id="888" _type="InsertStringCommand" date="Sun Jun 20 20:47:18 EDT 2021" starttimestamp="1624232406782" timestamp="4031860" timestamp2="4031860">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="890" _type="InsertStringCommand" date="Sun Jun 20 20:47:19 EDT 2021" starttimestamp="1624232406782" timestamp="4032460" timestamp2="4032460">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="893" _type="PauseCommand" date="Sun Jun 20 20:47:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4034148">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1688]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="892" _type="InsertStringCommand" date="Sun Jun 20 20:47:20 EDT 2021" starttimestamp="1624232406782" timestamp="4034148" timestamp2="4034148">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="895" _type="InsertStringCommand" date="Sun Jun 20 20:47:21 EDT 2021" starttimestamp="1624232406782" timestamp="4034798" timestamp2="4034798">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="897" _type="InsertStringCommand" date="Sun Jun 20 20:47:21 EDT 2021" starttimestamp="1624232406782" timestamp="4035049" timestamp2="4035049">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="899" _type="InsertStringCommand" date="Sun Jun 20 20:47:21 EDT 2021" starttimestamp="1624232406782" timestamp="4035139" timestamp2="4035139">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="901" _type="InsertStringCommand" date="Sun Jun 20 20:47:22 EDT 2021" starttimestamp="1624232406782" timestamp="4035342" timestamp2="4035342">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Sun Jun 20 20:47:22 EDT 2021" starttimestamp="1624232406782" timestamp="4035477" timestamp2="4035477">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="905" _type="InsertStringCommand" date="Sun Jun 20 20:47:22 EDT 2021" starttimestamp="1624232406782" timestamp="4035589" timestamp2="4035589">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="907" _type="InsertStringCommand" date="Sun Jun 20 20:47:22 EDT 2021" starttimestamp="1624232406782" timestamp="4035723" timestamp2="4035723">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="909" _type="InsertStringCommand" date="Sun Jun 20 20:47:22 EDT 2021" starttimestamp="1624232406782" timestamp="4035881" timestamp2="4035881">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="911" _type="InsertStringCommand" date="Sun Jun 20 20:47:23 EDT 2021" starttimestamp="1624232406782" timestamp="4036719" timestamp2="4036719">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="913" _type="PauseCommand" date="Sun Jun 20 20:47:25 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4039090">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2371]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="914" _type="MoveCaretCommand" caretOffset="199" date="Sun Jun 20 20:47:25 EDT 2021" docOffset="199" starttimestamp="1624232406782" timestamp="4039217" />
  <Command __id="916" _type="PauseCommand" date="Sun Jun 20 20:47:30 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4043916">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4699]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="917" _type="MoveCaretCommand" caretOffset="401" date="Sun Jun 20 20:47:30 EDT 2021" docOffset="401" starttimestamp="1624232406782" timestamp="4044050" />
  <Command __id="919" _type="PauseCommand" date="Sun Jun 20 20:48:19 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="4092495">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[48445]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="920" _type="MoveCaretCommand" caretOffset="451" date="Sun Jun 20 20:48:19 EDT 2021" docOffset="451" starttimestamp="1624232406782" timestamp="4092646" />
  <Command __id="922" _type="PauseCommand" date="Sun Jun 20 20:48:27 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4100892">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8246]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="921" _type="SelectTextCommand" caretOffset="390" date="Sun Jun 20 20:48:27 EDT 2021" end="390" start="369" starttimestamp="1624232406782" timestamp="4100892" />
  <Command __id="924" _type="PauseCommand" date="Sun Jun 20 20:48:32 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4105400">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4508]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="925" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:48:32 EDT 2021" starttimestamp="1624232406782" timestamp="4105406" />
  <Command __id="927" _type="PauseCommand" date="Sun Jun 20 20:48:35 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4108946">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3540]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="926" _type="SelectTextCommand" caretOffset="419" date="Sun Jun 20 20:48:35 EDT 2021" end="428" start="419" starttimestamp="1624232406782" timestamp="4108946" />
  <Command __id="929" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:48:36 EDT 2021" starttimestamp="1624232406782" timestamp="4109458" />
  <Command __id="931" _type="PauseCommand" date="Sun Jun 20 20:48:40 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4113396">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3938]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="932" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:48:40 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="4113519" />
  <Command __id="934" _type="MoveCaretCommand" caretOffset="419" date="Sun Jun 20 20:48:41 EDT 2021" docOffset="419" starttimestamp="1624232406782" timestamp="4114359" />
  <Command __id="936" _type="MoveCaretCommand" caretOffset="199" date="Sun Jun 20 20:48:41 EDT 2021" docOffset="199" starttimestamp="1624232406782" timestamp="4115086" />
  <Command __id="938" _type="PauseCommand" date="Sun Jun 20 20:48:55 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4129032">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13946]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="939" _type="InsertStringCommand" date="Sun Jun 20 20:48:55 EDT 2021" starttimestamp="1624232406782" timestamp="4129037" timestamp2="4129037">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="941" _type="PauseCommand" date="Sun Jun 20 20:49:04 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4137389">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[8352]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="942" _type="MoveCaretCommand" caretOffset="247" date="Sun Jun 20 20:49:04 EDT 2021" docOffset="337" starttimestamp="1624232406782" timestamp="4137526" />
  <Command __id="944" _type="PauseCommand" date="Sun Jun 20 20:49:16 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4149536">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12010]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="943" _type="SelectTextCommand" caretOffset="887" date="Sun Jun 20 20:49:16 EDT 2021" end="887" start="438" starttimestamp="1624232406782" timestamp="4149536" />
  <Command __id="946" _type="PauseCommand" date="Sun Jun 20 20:49:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4151419">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1883]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="945" _type="CopyCommand" date="Sun Jun 20 20:49:18 EDT 2021" starttimestamp="1624232406782" timestamp="4151419" />
  <Command __id="948" _type="PauseCommand" date="Sun Jun 20 20:49:47 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="4180653">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[29234]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="949" _type="MoveCaretCommand" caretOffset="201" date="Sun Jun 20 20:49:47 EDT 2021" docOffset="201" starttimestamp="1624232406782" timestamp="4180786" />
  <Command __id="951" _type="PauseCommand" date="Sun Jun 20 20:49:49 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4182783">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1997]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="952" _type="MoveCaretCommand" caretOffset="401" date="Sun Jun 20 20:49:49 EDT 2021" docOffset="401" starttimestamp="1624232406782" timestamp="4182919" />
  <Command __id="954" _type="PauseCommand" date="Sun Jun 20 20:49:50 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4184204">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1285]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="955" _type="SelectTextCommand" caretOffset="374" date="Sun Jun 20 20:49:51 EDT 2021" end="499" start="374" starttimestamp="1624232406782" timestamp="4184338" />
  <Command __id="957" _type="PauseCommand" date="Sun Jun 20 20:49:53 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4186280">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1942]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="956" _type="MoveCaretCommand" caretOffset="502" date="Sun Jun 20 20:49:53 EDT 2021" docOffset="607" starttimestamp="1624232406782" timestamp="4186280" />
  <Command __id="959" _type="PauseCommand" date="Sun Jun 20 20:49:59 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4192543">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6263]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="958" _type="SelectTextCommand" caretOffset="723" date="Sun Jun 20 20:49:59 EDT 2021" end="723" start="518" starttimestamp="1624232406782" timestamp="4192543" />
  <Command __id="960" _type="CopyCommand" date="Sun Jun 20 20:50:00 EDT 2021" starttimestamp="1624232406782" timestamp="4193488" />
  <Command __id="962" _type="PauseCommand" date="Sun Jun 20 20:50:01 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4194928">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1440]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="963" _type="MoveCaretCommand" caretOffset="419" date="Sun Jun 20 20:50:01 EDT 2021" docOffset="419" starttimestamp="1624232406782" timestamp="4195072" />
  <Command __id="965" _type="PauseCommand" date="Sun Jun 20 20:50:08 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4201888">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6816]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="968" _type="PasteCommand" date="Sun Jun 20 20:50:08 EDT 2021" starttimestamp="1624232406782" timestamp="4202009" />
  <Command __id="970" _type="PauseCommand" date="Sun Jun 20 20:50:15 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4208622">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[6613]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="969" _type="SelectTextCommand" caretOffset="656" date="Sun Jun 20 20:50:15 EDT 2021" end="656" start="644" starttimestamp="1624232406782" timestamp="4208622" />
  <Command __id="971" _type="MoveCaretCommand" caretOffset="656" date="Sun Jun 20 20:50:15 EDT 2021" docOffset="656" starttimestamp="1624232406782" timestamp="4208976" />
  <Command __id="972" _type="MoveCaretCommand" caretOffset="657" date="Sun Jun 20 20:50:16 EDT 2021" docOffset="657" starttimestamp="1624232406782" timestamp="4209871" />
  <Command __id="974" _type="PauseCommand" date="Sun Jun 20 20:50:17 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4210995">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1124]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:17 EDT 2021" starttimestamp="1624232406782" timestamp="4210997" />
  <Command __id="977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:18 EDT 2021" starttimestamp="1624232406782" timestamp="4211579" />
  <Command __id="979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:18 EDT 2021" starttimestamp="1624232406782" timestamp="4211761" />
  <Command __id="981" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:18 EDT 2021" starttimestamp="1624232406782" timestamp="4211918" />
  <Command __id="983" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:19 EDT 2021" starttimestamp="1624232406782" timestamp="4212507" />
  <Command __id="985" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:19 EDT 2021" starttimestamp="1624232406782" timestamp="4213159" />
  <DocumentChange __id="887" _type="Insert" date="Sun Jun 20 20:47:18 EDT 2021" docASTNodeCount="52" docActiveCodeLength="455" docExpressionCount="31" docLength="455" length="15" offset="436" repeat="12" starttimestamp="1624232406782" timestamp="4031853" timestamp2="4036714">
    <text><![CDATA[
	
	@Override
	]]></text>
  </DocumentChange>
  <Command __id="912" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:47:25 EDT 2021" docASTNodeCount="23" docActiveCodeLength="203" docExpressionCount="16" docLength="203" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4039090">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATING_ANIMATOR)¶public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="915" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:47:30 EDT 2021" docASTNodeCount="56" docActiveCodeLength="409" docExpressionCount="30" docLength="409" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4043916">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneGuardAnimation.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶¶public class BridgeSceneGuardAnimation implements Runnable {¶¶	Avatars anAvatar;¶	BridgeSceneAnimator anAnimator;¶	¶	¶	public BridgeSceneGuardAnimation(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {¶		anAvatar = montyAvatar;¶		anAnimator = montyAnimator;¶	}¶	@Override¶	public void run() {¶		anAnimator.animateGuard(anAvatar);¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="918" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:48:19 EDT 2021" docASTNodeCount="52" docActiveCodeLength="455" docExpressionCount="31" docLength="455" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4092495">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)¶public class SceneLockedAnimationCommand extends BridgeScene"), Diff(INSERT,"Guard"), Diff(EQUAL,"Animation"), Diff(DELETE,"Command {"), Diff(INSERT," {¶	¶	boolean waitState = false;"), Diff(EQUAL,"¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		super(montyAvatar, montyAnimator"), Diff(DELETE,", waitCommand);¶	}"), Diff(INSERT,");¶		¶	}¶	¶	@Override¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)
public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {
	
	boolean waitState = false;

	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {
		super(montyAvatar, montyAnimator);
		
	}
	
	@Override
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="923" _type="Delete" date="Sun Jun 20 20:48:32 EDT 2021" docASTNodeCount="49" docActiveCodeLength="434" docExpressionCount="30" docLength="434" endLine="11" length="21" offset="369" startLine="11" starttimestamp="1624232406782" timestamp="4105400">
    <text><![CDATA[, boolean waitCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="928" _type="Delete" date="Sun Jun 20 20:48:36 EDT 2021" docASTNodeCount="49" docActiveCodeLength="425" docExpressionCount="30" docLength="425" endLine="16" length="9" offset="419" startLine="16" starttimestamp="1624232406782" timestamp="4109455">
    <text><![CDATA[@Override]]></text>
  </DocumentChange>
  <Command __id="930" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:48:40 EDT 2021" docASTNodeCount="22" docActiveCodeLength="206" docExpressionCount="10" docLength="206" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4113396">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ClearanceManager.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import util.models.PropertyListenerRegisterer;¶¶public interface ClearanceManager extends PropertyListenerRegisterer{¶	public void proceed();¶	public void waitForProceed();	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="933" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:48:41 EDT 2021" docASTNodeCount="49" docActiveCodeLength="425" docExpressionCount="30" docLength="425" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4114240">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)¶public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {¶	¶	boolean waitState = false;¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator"), Diff(DELETE,", boolean waitCommand"), Diff(EQUAL,") {¶		super(montyAvatar, montyAnimator);¶		¶	}¶	¶	"), Diff(DELETE,"@Override"), Diff(EQUAL,"¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)
public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {
	
	boolean waitState = false;

	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {
		super(montyAvatar, montyAnimator);
		
	}
	
	
	

}
]]></snapshot>
  </Command>
  <Command __id="935" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:48:41 EDT 2021" docASTNodeCount="23" docActiveCodeLength="203" docExpressionCount="16" docLength="203" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4114959">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATING_ANIMATOR)¶public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="937" _type="Insert" date="Sun Jun 20 20:48:55 EDT 2021" docASTNodeCount="23" docActiveCodeLength="205" docExpressionCount="16" docLength="205" length="2" offset="199" starttimestamp="1624232406782" timestamp="4129032">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="940" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:49:04 EDT 2021" docASTNodeCount="165" docActiveCodeLength="981" docExpressionCount="114" docLength="981" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4137389">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶@Tags(Comp301Tags.ANIMATOR)¶public class ABridgeSceneAnimator implements BridgeSceneAnimator {¶	static final int START = 0,¶					MOVE_BY = 10,¶					MARCH_TIME = 500;¶	@Override¶	public void  animateAvatar(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    	ThreadSupport.sleep(MARCH_TIME);¶    	anAvatar.moveAvatar(MOVE_BY, START);    	¶    	i++;¶    	}¶	}¶	@Override¶	public void  animateGuard(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    		if(i%2 == 0) {	¶		    	ThreadSupport.sleep(MARCH_TIME);¶		    	anAvatar.getArms().getRightLine().rotate(-7);¶		    	anAvatar.getArms().getLeftLine().rotate(7);¶		    	i++;¶    			}¶    		ThreadSupport.sleep(MARCH_TIME);¶	    	anAvatar.getArms().getRightLine().rotate(7);¶	    	anAvatar.getArms().getLeftLine().rotate(-7);¶	    	i++;¶    	}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="947" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:49:47 EDT 2021" docASTNodeCount="23" docActiveCodeLength="205" docExpressionCount="16" docLength="205" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4180653">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATING_ANIMATOR)¶public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {¶	"), Diff(INSERT,"¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.COORDINATING_ANIMATOR)
public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {
	
	

}
]]></snapshot>
  </Command>
  <Command __id="950" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:49:49 EDT 2021" docASTNodeCount="56" docActiveCodeLength="409" docExpressionCount="30" docLength="409" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4182783">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneGuardAnimation.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶¶public class BridgeSceneGuardAnimation implements Runnable {¶¶	Avatars anAvatar;¶	BridgeSceneAnimator anAnimator;¶	¶	¶	public BridgeSceneGuardAnimation(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {¶		anAvatar = montyAvatar;¶		anAnimator = montyAnimator;¶	}¶	@Override¶	public void run() {¶		anAnimator.animateGuard(anAvatar);¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="953" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:49:50 EDT 2021" docASTNodeCount="104" docActiveCodeLength="790" docExpressionCount="64" docLength="832" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4184204">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶@Tags(Comp301Tags.ANIMATING_COMMAND)¶¶public class BridgeSceneAnimationCommand implements Runnable {¶	¶	Avatars anAvatar;¶	static BridgeSceneAnimator anAnimator;¶	boolean waitState = false;¶	¶	¶	public BridgeSceneAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		anAvatar = montyAvatar;¶		//anAnimator = new ABridgeSceneAnimator();¶		anAnimator = montyAnimator;¶		waitState = waitCommand;¶	}¶	¶¶	@Override¶	public void run() {¶		if(waitState) {¶			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();¶			anAnimator.animateAvatar(anAvatar);¶		}¶		anAnimator.animateAvatar(anAvatar);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="961" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:50:01 EDT 2021" docASTNodeCount="49" docActiveCodeLength="425" docExpressionCount="30" docLength="425" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4194928">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)¶public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {¶	¶	boolean waitState = false;¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {¶		super(montyAvatar, montyAnimator);¶		¶	}¶	¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="964" _type="Replace" date="Sun Jun 20 20:50:08 EDT 2021" docASTNodeCount="73" docActiveCodeLength="630" docExpressionCount="45" docLength="630" endLine="16" insertionLength="206" int_docASTNodeCount="49" int_docActiveCodeLength="424" int_docExpressionCount="30" int_docLength="424" length="1" offset="418" startLine="16" starttimestamp="1624232406782" timestamp="4201888">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public void run() {
		if(waitState) {
			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();
			anAnimator.animateAvatar(anAvatar);
		}
		anAnimator.animateAvatar(anAvatar);
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="966" _type="Insert" date="Sun Jun 20 20:50:08 EDT 2021" docASTNodeCount="79" docActiveCodeLength="677" docExpressionCount="50" docLength="677" length="47" offset="62" repeat="2" starttimestamp="1624232406782" timestamp="4201948" timestamp2="4201949">
    <text><![CDATA[
import grail.compositeFigs.BridgeSceneFactory;]]></text>
  </DocumentChange>
  <DocumentChange __id="973" _type="Delete" date="Sun Jun 20 20:50:17 EDT 2021" docASTNodeCount="79" docActiveCodeLength="671" docExpressionCount="50" docLength="671" endLine="22" length="6" offset="651" repeat="6" startLine="22" starttimestamp="1624232406782" timestamp="4210995" timestamp2="4213157">
    <text><![CDATA[Avatar]]></text>
  </DocumentChange>
  <Command __id="987" _type="PauseCommand" date="Sun Jun 20 20:50:21 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4214247">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1088]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="988" _type="InsertStringCommand" date="Sun Jun 20 20:50:21 EDT 2021" starttimestamp="1624232406782" timestamp="4214250" timestamp2="4214250">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="991" _type="PauseCommand" date="Sun Jun 20 20:50:22 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4216202">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1952]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="990" _type="InsertStringCommand" date="Sun Jun 20 20:50:22 EDT 2021" starttimestamp="1624232406782" timestamp="4216202" timestamp2="4216202">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="993" _type="InsertStringCommand" date="Sun Jun 20 20:50:23 EDT 2021" starttimestamp="1624232406782" timestamp="4216317" timestamp2="4216317">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="995" _type="InsertStringCommand" date="Sun Jun 20 20:50:23 EDT 2021" starttimestamp="1624232406782" timestamp="4216537" timestamp2="4216537">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="997" _type="InsertStringCommand" date="Sun Jun 20 20:50:23 EDT 2021" starttimestamp="1624232406782" timestamp="4216804" timestamp2="4216804">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="999" _type="PauseCommand" date="Sun Jun 20 20:50:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4218597">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1793]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="998" _type="MoveCaretCommand" caretOffset="675" date="Sun Jun 20 20:50:25 EDT 2021" docOffset="675" starttimestamp="1624232406782" timestamp="4218597" />
  <Command __id="1001" _type="PauseCommand" date="Sun Jun 20 20:50:27 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4220491">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1894]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1000" _type="MoveCaretCommand" caretOffset="667" date="Sun Jun 20 20:50:27 EDT 2021" docOffset="667" starttimestamp="1624232406782" timestamp="4220491" />
  <Command __id="1003" _type="PauseCommand" date="Sun Jun 20 20:50:30 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4223281">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2790]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1002" _type="MoveCaretCommand" caretOffset="666" date="Sun Jun 20 20:50:30 EDT 2021" docOffset="666" starttimestamp="1624232406782" timestamp="4223281" />
  <Command __id="1004" _type="MoveCaretCommand" caretOffset="667" date="Sun Jun 20 20:50:30 EDT 2021" docOffset="667" starttimestamp="1624232406782" timestamp="4223787" />
  <Command __id="1006" _type="PauseCommand" date="Sun Jun 20 20:50:34 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4227612">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3825]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1005" _type="MoveCaretCommand" caretOffset="615" date="Sun Jun 20 20:50:34 EDT 2021" docOffset="615" starttimestamp="1624232406782" timestamp="4227612" />
  <Command __id="1008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:35 EDT 2021" starttimestamp="1624232406782" timestamp="4228482" />
  <Command __id="1010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:35 EDT 2021" starttimestamp="1624232406782" timestamp="4228640" />
  <Command __id="1012" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:35 EDT 2021" starttimestamp="1624232406782" timestamp="4228820" />
  <Command __id="1014" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:35 EDT 2021" starttimestamp="1624232406782" timestamp="4228977" />
  <Command __id="1016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:35 EDT 2021" starttimestamp="1624232406782" timestamp="4229157" />
  <Command __id="1018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 20:50:36 EDT 2021" starttimestamp="1624232406782" timestamp="4229841" />
  <Command __id="1020" _type="InsertStringCommand" date="Sun Jun 20 20:50:37 EDT 2021" starttimestamp="1624232406782" timestamp="4230394" timestamp2="4230394">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="1022" _type="InsertStringCommand" date="Sun Jun 20 20:50:37 EDT 2021" starttimestamp="1624232406782" timestamp="4230599" timestamp2="4230599">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1024" _type="InsertStringCommand" date="Sun Jun 20 20:50:37 EDT 2021" starttimestamp="1624232406782" timestamp="4230734" timestamp2="4230734">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1026" _type="InsertStringCommand" date="Sun Jun 20 20:50:37 EDT 2021" starttimestamp="1624232406782" timestamp="4230892" timestamp2="4230892">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1028" _type="InsertStringCommand" date="Sun Jun 20 20:50:37 EDT 2021" starttimestamp="1624232406782" timestamp="4231095" timestamp2="4231095">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1030" _type="PauseCommand" date="Sun Jun 20 20:50:40 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4233395">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2300]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1029" _type="MoveCaretCommand" caretOffset="629" date="Sun Jun 20 20:50:40 EDT 2021" docOffset="629" starttimestamp="1624232406782" timestamp="4233395" />
  <Command __id="1031" _type="MoveCaretCommand" caretOffset="625" date="Sun Jun 20 20:50:40 EDT 2021" docOffset="625" starttimestamp="1624232406782" timestamp="4234171" />
  <Command __id="1033" _type="PauseCommand" date="Sun Jun 20 20:51:42 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="4295315">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[61144]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1032" _type="MoveCaretCommand" caretOffset="625" date="Sun Jun 20 20:51:42 EDT 2021" docOffset="625" starttimestamp="1624232406782" timestamp="4295315" />
  <Command __id="1035" _type="PauseCommand" date="Sun Jun 20 20:51:56 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4309906">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14591]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1034" _type="MoveCaretCommand" caretOffset="402" date="Sun Jun 20 20:51:56 EDT 2021" docOffset="402" starttimestamp="1624232406782" timestamp="4309906" />
  <Command __id="1037" _type="PauseCommand" date="Sun Jun 20 20:52:12 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4325360">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15454]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1038" _type="MoveCaretCommand" caretOffset="201" date="Sun Jun 20 20:52:12 EDT 2021" docOffset="201" starttimestamp="1624232406782" timestamp="4325489" />
  <Command __id="1040" _type="PauseCommand" date="Sun Jun 20 20:52:25 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4338710">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13221]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1041" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 20:52:25 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="4338843" />
  <Command __id="1043" _type="PauseCommand" date="Sun Jun 20 20:52:27 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4340311">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1468]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1044" _type="MoveCaretCommand" caretOffset="402" date="Sun Jun 20 20:52:27 EDT 2021" docOffset="402" starttimestamp="1624232406782" timestamp="4340468" />
  <Command __id="1046" _type="PauseCommand" date="Sun Jun 20 20:52:29 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4342599">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2131]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1045" _type="MoveCaretCommand" caretOffset="416" date="Sun Jun 20 20:52:29 EDT 2021" docOffset="416" starttimestamp="1624232406782" timestamp="4342599" />
  <Command __id="1048" _type="PauseCommand" date="Sun Jun 20 20:52:31 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4344404">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1805]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1049" _type="InsertStringCommand" date="Sun Jun 20 20:52:31 EDT 2021" starttimestamp="1624232406782" timestamp="4344407" timestamp2="4344407">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1051" _type="InsertStringCommand" date="Sun Jun 20 20:52:31 EDT 2021" starttimestamp="1624232406782" timestamp="4344609" timestamp2="4344609">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1053" _type="InsertStringCommand" date="Sun Jun 20 20:52:31 EDT 2021" starttimestamp="1624232406782" timestamp="4344833" timestamp2="4344833">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1055" _type="InsertStringCommand" date="Sun Jun 20 20:52:31 EDT 2021" starttimestamp="1624232406782" timestamp="4345104" timestamp2="4345104">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1057" _type="InsertStringCommand" date="Sun Jun 20 20:52:31 EDT 2021" starttimestamp="1624232406782" timestamp="4345217" timestamp2="4345217">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1059" _type="InsertStringCommand" date="Sun Jun 20 20:52:32 EDT 2021" starttimestamp="1624232406782" timestamp="4345415" timestamp2="4345415">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1061" _type="InsertStringCommand" date="Sun Jun 20 20:52:32 EDT 2021" starttimestamp="1624232406782" timestamp="4345508" timestamp2="4345508">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1063" _type="InsertStringCommand" date="Sun Jun 20 20:52:32 EDT 2021" starttimestamp="1624232406782" timestamp="4345777" timestamp2="4345777">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1065" _type="InsertStringCommand" date="Sun Jun 20 20:52:32 EDT 2021" starttimestamp="1624232406782" timestamp="4345936" timestamp2="4345936">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1067" _type="InsertStringCommand" date="Sun Jun 20 20:52:32 EDT 2021" starttimestamp="1624232406782" timestamp="4346117" timestamp2="4346117">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1069" _type="InsertStringCommand" date="Sun Jun 20 20:52:33 EDT 2021" starttimestamp="1624232406782" timestamp="4346565" timestamp2="4346565">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1071" _type="InsertStringCommand" date="Sun Jun 20 20:52:33 EDT 2021" starttimestamp="1624232406782" timestamp="4346745" timestamp2="4346745">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1073" _type="InsertStringCommand" date="Sun Jun 20 20:52:33 EDT 2021" starttimestamp="1624232406782" timestamp="4346857" timestamp2="4346857">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1075" _type="InsertStringCommand" date="Sun Jun 20 20:52:33 EDT 2021" starttimestamp="1624232406782" timestamp="4347102" timestamp2="4347102">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1077" _type="PauseCommand" date="Sun Jun 20 20:52:39 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4352298">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5196]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1078" _type="InsertStringCommand" date="Sun Jun 20 20:52:39 EDT 2021" starttimestamp="1624232406782" timestamp="4352303" timestamp2="4352303">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1080" _type="InsertStringCommand" date="Sun Jun 20 20:52:39 EDT 2021" starttimestamp="1624232406782" timestamp="4352550" timestamp2="4352550">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1082" _type="InsertStringCommand" date="Sun Jun 20 20:52:39 EDT 2021" starttimestamp="1624232406782" timestamp="4352817" timestamp2="4352817">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1084" _type="InsertStringCommand" date="Sun Jun 20 20:52:39 EDT 2021" starttimestamp="1624232406782" timestamp="4352955" timestamp2="4352955">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1086" _type="PauseCommand" date="Sun Jun 20 20:52:41 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4355132">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2177]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1085" _type="MoveCaretCommand" caretOffset="472" date="Sun Jun 20 20:52:41 EDT 2021" docOffset="472" starttimestamp="1624232406782" timestamp="4355132" />
  <DocumentChange __id="986" _type="Insert" date="Sun Jun 20 20:50:21 EDT 2021" docASTNodeCount="79" docActiveCodeLength="676" docExpressionCount="50" docLength="676" length="5" offset="651" repeat="5" starttimestamp="1624232406782" timestamp="4214247" timestamp2="4216799">
    <text><![CDATA[Guard]]></text>
  </DocumentChange>
  <DocumentChange __id="1007" _type="Delete" date="Sun Jun 20 20:50:35 EDT 2021" docASTNodeCount="79" docActiveCodeLength="670" docExpressionCount="50" docLength="670" endLine="20" length="6" offset="609" repeat="6" startLine="20" starttimestamp="1624232406782" timestamp="4228480" timestamp2="4229839">
    <text><![CDATA[Avatar]]></text>
  </DocumentChange>
  <DocumentChange __id="1019" _type="Insert" date="Sun Jun 20 20:50:37 EDT 2021" docASTNodeCount="79" docActiveCodeLength="675" docExpressionCount="50" docLength="675" length="5" offset="609" repeat="5" starttimestamp="1624232406782" timestamp="4230389" timestamp2="4231090">
    <text><![CDATA[Guard]]></text>
  </DocumentChange>
  <Command __id="1036" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:52:12 EDT 2021" docASTNodeCount="23" docActiveCodeLength="205" docExpressionCount="16" docLength="205" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4325360">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATING_ANIMATOR)¶public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1039" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:52:25 EDT 2021" docASTNodeCount="22" docActiveCodeLength="206" docExpressionCount="10" docLength="206" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4338710">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ClearanceManager.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import util.models.PropertyListenerRegisterer;¶¶public interface ClearanceManager extends PropertyListenerRegisterer{¶	public void proceed();¶	public void waitForProceed();	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1042" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:52:27 EDT 2021" docASTNodeCount="79" docActiveCodeLength="675" docExpressionCount="50" docLength="675" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4340311">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶"), Diff(INSERT,"import grail.compositeFigs.BridgeSceneFactory;¶"), Diff(EQUAL,"import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)¶public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {¶	¶	boolean waitState = false;¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {¶		super(montyAvatar, montyAnimator);¶		¶	}¶	¶	"), Diff(INSERT,"public void run() {¶		if(waitState) {¶			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();¶			anAnimator.animateGuard(anAvatar);¶		}¶		anAnimator.animateGuard(anAvatar);¶	}"), Diff(EQUAL,"¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)
public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {
	
	boolean waitState = false;

	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {
		super(montyAvatar, montyAnimator);
		
	}
	
	public void run() {
		if(waitState) {
			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();
			anAnimator.animateGuard(anAvatar);
		}
		anAnimator.animateGuard(anAvatar);
	}
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1047" _type="Insert" date="Sun Jun 20 20:52:31 EDT 2021" docASTNodeCount="82" docActiveCodeLength="689" docExpressionCount="51" docLength="689" length="14" offset="416" repeat="14" starttimestamp="1624232406782" timestamp="4344404" timestamp2="4347098">
    <text><![CDATA[, boolean wait]]></text>
  </DocumentChange>
  <DocumentChange __id="1076" _type="Insert" date="Sun Jun 20 20:52:39 EDT 2021" docASTNodeCount="82" docActiveCodeLength="693" docExpressionCount="51" docLength="693" length="4" offset="430" repeat="4" starttimestamp="1624232406782" timestamp="4352298" timestamp2="4352951">
    <text><![CDATA[Type]]></text>
  </DocumentChange>
  <Command __id="1088" _type="PauseCommand" date="Sun Jun 20 20:52:42 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4356201">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1069]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1087" _type="MoveCaretCommand" caretOffset="474" date="Sun Jun 20 20:52:42 EDT 2021" docOffset="474" starttimestamp="1624232406782" timestamp="4356201" />
  <Command __id="1090" _type="InsertStringCommand" date="Sun Jun 20 20:52:43 EDT 2021" starttimestamp="1624232406782" timestamp="4357050" timestamp2="4357050">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1093" _type="PauseCommand" date="Sun Jun 20 20:52:45 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4358669">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1619]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1092" _type="InsertStringCommand" date="Sun Jun 20 20:52:45 EDT 2021" starttimestamp="1624232406782" timestamp="4358669" timestamp2="4358669">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1095" _type="InsertStringCommand" date="Sun Jun 20 20:52:46 EDT 2021" starttimestamp="1624232406782" timestamp="4359298" timestamp2="4359298">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1097" _type="InsertStringCommand" date="Sun Jun 20 20:52:46 EDT 2021" starttimestamp="1624232406782" timestamp="4359434" timestamp2="4359434">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1099" _type="InsertStringCommand" date="Sun Jun 20 20:52:46 EDT 2021" starttimestamp="1624232406782" timestamp="4359727" timestamp2="4359727">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1101" _type="InsertStringCommand" date="Sun Jun 20 20:52:46 EDT 2021" starttimestamp="1624232406782" timestamp="4360060" timestamp2="4360060">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1103" _type="InsertStringCommand" date="Sun Jun 20 20:52:46 EDT 2021" starttimestamp="1624232406782" timestamp="4360128" timestamp2="4360128">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1105" _type="InsertStringCommand" date="Sun Jun 20 20:52:47 EDT 2021" starttimestamp="1624232406782" timestamp="4360379" timestamp2="4360379">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1107" _type="InsertStringCommand" date="Sun Jun 20 20:52:47 EDT 2021" starttimestamp="1624232406782" timestamp="4360445" timestamp2="4360445">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1109" _type="InsertStringCommand" date="Sun Jun 20 20:52:47 EDT 2021" starttimestamp="1624232406782" timestamp="4360716" timestamp2="4360716">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1112" _type="PauseCommand" date="Sun Jun 20 20:52:48 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4361750">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1034]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1111" _type="InsertStringCommand" date="Sun Jun 20 20:52:48 EDT 2021" starttimestamp="1624232406782" timestamp="4361750" timestamp2="4361750">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1114" _type="InsertStringCommand" date="Sun Jun 20 20:52:48 EDT 2021" starttimestamp="1624232406782" timestamp="4362086" timestamp2="4362086">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1116" _type="InsertStringCommand" date="Sun Jun 20 20:52:49 EDT 2021" starttimestamp="1624232406782" timestamp="4362382" timestamp2="4362382">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1118" _type="InsertStringCommand" date="Sun Jun 20 20:52:49 EDT 2021" starttimestamp="1624232406782" timestamp="4362585" timestamp2="4362585">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1120" _type="InsertStringCommand" date="Sun Jun 20 20:52:49 EDT 2021" starttimestamp="1624232406782" timestamp="4362765" timestamp2="4362765">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1122" _type="InsertStringCommand" date="Sun Jun 20 20:52:49 EDT 2021" starttimestamp="1624232406782" timestamp="4362900" timestamp2="4362900">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1124" _type="InsertStringCommand" date="Sun Jun 20 20:52:49 EDT 2021" starttimestamp="1624232406782" timestamp="4363165" timestamp2="4363165">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1126" _type="InsertStringCommand" date="Sun Jun 20 20:52:50 EDT 2021" starttimestamp="1624232406782" timestamp="4363371" timestamp2="4363371">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1128" _type="InsertStringCommand" date="Sun Jun 20 20:52:50 EDT 2021" starttimestamp="1624232406782" timestamp="4363529" timestamp2="4363529">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1130" _type="InsertStringCommand" date="Sun Jun 20 20:52:50 EDT 2021" starttimestamp="1624232406782" timestamp="4363777" timestamp2="4363777">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1132" _type="InsertStringCommand" date="Sun Jun 20 20:52:50 EDT 2021" starttimestamp="1624232406782" timestamp="4363890" timestamp2="4363890">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1134" _type="InsertStringCommand" date="Sun Jun 20 20:52:51 EDT 2021" starttimestamp="1624232406782" timestamp="4364291" timestamp2="4364291">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1136" _type="PauseCommand" date="Sun Jun 20 20:53:07 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4380497">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[16205]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1137" _type="SelectTextCommand" caretOffset="8445" date="Sun Jun 20 20:53:07 EDT 2021" end="8445" start="8348" starttimestamp="1624232406782" timestamp="4380656" />
  <Command __id="1139" _type="PauseCommand" date="Sun Jun 20 20:53:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4384101">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3445]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1138" _type="MoveCaretCommand" caretOffset="10581" date="Sun Jun 20 20:53:10 EDT 2021" docOffset="11503" starttimestamp="1624232406782" timestamp="4384101" />
  <Command __id="1141" _type="PauseCommand" date="Sun Jun 20 20:53:12 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4385601">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1500]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1140" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 20:53:12 EDT 2021" starttimestamp="1624232406782" timestamp="4385601" />
  <Command __id="1142" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 20:53:12 EDT 2021" starttimestamp="1624232406782" timestamp="4386074" />
  <Command __id="1144" _type="PauseCommand" date="Sun Jun 20 20:53:14 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4388053">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1979]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1145" _type="InsertStringCommand" date="Sun Jun 20 20:53:14 EDT 2021" starttimestamp="1624232406782" timestamp="4388057" timestamp2="4388057">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1147" _type="InsertStringCommand" date="Sun Jun 20 20:53:15 EDT 2021" starttimestamp="1624232406782" timestamp="4388419" timestamp2="4388419">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1149" _type="InsertStringCommand" date="Sun Jun 20 20:53:15 EDT 2021" starttimestamp="1624232406782" timestamp="4388756" timestamp2="4388756">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1151" _type="InsertStringCommand" date="Sun Jun 20 20:53:15 EDT 2021" starttimestamp="1624232406782" timestamp="4388935" timestamp2="4388935">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1153" _type="InsertStringCommand" date="Sun Jun 20 20:53:15 EDT 2021" starttimestamp="1624232406782" timestamp="4389071" timestamp2="4389071">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1155" _type="PauseCommand" date="Sun Jun 20 20:53:17 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4391110">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2039]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1156" _type="InsertStringCommand" date="Sun Jun 20 20:53:17 EDT 2021" starttimestamp="1624232406782" timestamp="4391115" timestamp2="4391115">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1158" _type="PauseCommand" date="Sun Jun 20 20:53:47 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="4420413">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[29298]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1157" _type="MoveCaretCommand" caretOffset="10644" date="Sun Jun 20 20:53:47 EDT 2021" docOffset="11566" starttimestamp="1624232406782" timestamp="4420413" />
  <Command __id="1160" _type="PauseCommand" date="Sun Jun 20 20:53:49 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4422323">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1910]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1161" _type="InsertStringCommand" date="Sun Jun 20 20:53:49 EDT 2021" starttimestamp="1624232406782" timestamp="4422329" timestamp2="4422329">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1163" _type="PauseCommand" date="Sun Jun 20 20:54:00 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4434138">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[11809]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1162" _type="SelectTextCommand" caretOffset="9532" date="Sun Jun 20 20:54:00 EDT 2021" end="9532" start="9456" starttimestamp="1624232406782" timestamp="4434138" />
  <Command __id="1164" _type="CopyCommand" date="Sun Jun 20 20:54:01 EDT 2021" starttimestamp="1624232406782" timestamp="4434964" />
  <Command __id="1166" _type="PauseCommand" date="Sun Jun 20 20:54:03 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4437031">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2067]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1165" _type="MoveCaretCommand" caretOffset="10647" date="Sun Jun 20 20:54:03 EDT 2021" docOffset="11569" starttimestamp="1624232406782" timestamp="4437031" />
  <Command __id="1168" _type="PauseCommand" date="Sun Jun 20 20:54:07 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4440461">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3430]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1167" _type="MoveCaretCommand" caretOffset="10587" date="Sun Jun 20 20:54:07 EDT 2021" docOffset="11509" starttimestamp="1624232406782" timestamp="4440461" />
  <Command __id="1170" _type="PauseCommand" date="Sun Jun 20 20:54:12 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4445695">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5234]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1169" _type="MoveCaretCommand" caretOffset="10647" date="Sun Jun 20 20:54:12 EDT 2021" docOffset="11569" starttimestamp="1624232406782" timestamp="4445695" />
  <Command __id="1172" _type="PauseCommand" date="Sun Jun 20 20:54:16 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4449912">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4217]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1173" _type="PasteCommand" date="Sun Jun 20 20:54:16 EDT 2021" starttimestamp="1624232406782" timestamp="4449916" />
  <Command __id="1175" _type="PauseCommand" date="Sun Jun 20 20:56:17 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="4570311">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[120395]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1174" _type="ShellCommand" date="Sun Jun 20 20:56:17 EDT 2021" starttimestamp="1624232406782" timestamp="4570311" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1177" _type="PauseCommand" date="Sun Jun 20 20:56:21 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4575209">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4898]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1176" _type="ShellCommand" date="Sun Jun 20 20:56:21 EDT 2021" starttimestamp="1624232406782" timestamp="4575209" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1179" _type="MoveCaretCommand" caretOffset="954" date="Sun Jun 20 20:56:22 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="4575502" />
  <Command __id="1181" _type="PauseCommand" date="Sun Jun 20 20:56:24 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4577821">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2319]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1180" _type="ShellCommand" date="Sun Jun 20 20:56:24 EDT 2021" starttimestamp="1624232406782" timestamp="4577821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1183" _type="PauseCommand" date="Sun Jun 20 20:56:26 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4579812">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1991]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1182" _type="ShellCommand" date="Sun Jun 20 20:56:26 EDT 2021" starttimestamp="1624232406782" timestamp="4579812" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1184" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:56:26 EDT 2021" starttimestamp="1624232406782" timestamp="4580042" />
  <Command __id="1185" _type="EclipseCommand" commandID="" date="Sun Jun 20 20:56:26 EDT 2021" starttimestamp="1624232406782" timestamp="4580187" />
  <Command __id="1187" _type="RunCommand" date="Sun Jun 20 20:56:27 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4580885" type="Run" />
  <Command __id="1188" _type="RunCommand" date="Sun Jun 20 20:56:27 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4580885" type="Run" />
  <Command __id="1186" _type="ConsoleOutput" date="Sun Jun 20 20:56:27 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4580887" type="ConsoleOutput">
    <outputString><![CDATA[Cannot invoke "unc.symbolTable.STType.isExternal()" because "anSTType" is null Description:Check:unc.checks.ExpectedGettersCheck@46d3a0af ast:package[1x0] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.javaStack:
unc.checks.TagBasedCheck.lookupTags(TagBasedCheck.java:620)
unc.checks.TagBasedCheck.getTags(TagBasedCheck.java:680)
unc.checks.TagBasedCheck.matchesTypeUnifying(TagBasedCheck.java:964)
unc.checks.BeanTypedPropertiesCheck.matchGetter(BeanTypedPropertiesCheck.java:269)
unc.checks.ExpectedGettersCheck.matchType(ExpectedGettersCheck.java:56)
unc.checks.BeanTypedPropertiesCheck.matchType(BeanTypedPropertiesCheck.java:248)
unc.checks.BeanTypedPropertiesCheck.matchProperty(BeanTypedPropertiesCheck.java:192)
unc.checks.BeanTypedPropertiesCheck.matchProperties(BeanTypedPropertiesCheck.java:144)
unc.checks.BeanTypedPropertiesCheck.processStrings(BeanTypedPropertiesCheck.java:359)
unc.checks.TagBasedCheck.doStringArrayBasedPendingCheck(TagBasedCheck.java:2336)
unc.checks.BeanTypedPropertiesCheck.doPendingCheck(BeanTypedPropertiesCheck.java:323)
unc.checks.ExpectedGettersCheck.doPendingCheck(ExpectedGettersCheck.java:63)
unc.checks.ComprehensiveVisitCheck.maybeAddToPendingTypeChecks(ComprehensiveVisitCheck.java:2890)
unc.checks.BeanPropertiesCheck.doFinishTree(BeanPropertiesCheck.java:200)
unc.checks.ExpectedGettersCheck.doFinishTree(ExpectedGettersCheck.java:76)
unc.checks.UNCCheck.finishTree(UNCCheck.java:509)
unc.tools.checkstyle.AnExtendibleTreeWalker.notifyEnd(AnExtendibleTreeWalker.java:330)
unc.tools.checkstyle.AnExtendibleTreeWalker.walk(AnExtendibleTreeWalker.java:285)
unc.tools.checkstyle.AnExtendibleTreeWalker.processFiltered(AnExtendibleTreeWalker.java:157)
unc.tools.checkstyle.ANonCachingTreeWalker.processFiltered(ANonCachingTreeWalker.java:11)
com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87)
com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337)
com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298)
com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221)
net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:146)
net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)
net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)
org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)
org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)
org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:292)
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:481)
org.eclipse.core.internal.resources.Project$1.run(Project.java:565)
org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)
org.eclipse.core.internal.resources.Project.internalBuild(Project.java:603)
org.eclipse.core.internal.resources.Project.build(Project.java:116)
org.eclipse.debug.core.model.LaunchConfigurationDelegate.lambda$0(LaunchConfigurationDelegate.java:406)
org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)
org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2312)
org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildProjects(LaunchConfigurationDelegate.java:412)
org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildForLaunch(LaunchConfigurationDelegate.java:122)
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:777)
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)
org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1021)
org.eclipse.debug.internal.ui.DebugUIPlugin$2.run(DebugUIPlugin.java:1224)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A4CommonPropertiesAreInherited did not pass completely:See console trace about lines failing  this check%0.32432432432432434¶¶A4CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.15118110236220472"), Diff(INSERT,"Cannot invoke "unc.symbolTable.STType.isExternal()" because "anSTType" is null Description:Check:unc.checks.ExpectedGettersCheck@46d3a0af ast:package[1x0] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.javaStack:¶unc.checks.TagBasedCheck.lookupTags(TagBasedCheck.java:620)¶unc.checks.TagBasedCheck.getTags(TagBasedCheck.java:680)¶unc.checks.TagBasedCheck.matchesTypeUnifying(TagBasedCheck.java:964)¶unc.checks.BeanTypedPropertiesCheck.matchGetter(BeanTypedPropertiesCheck.java:269)¶unc.checks.ExpectedGettersCheck.matchType(ExpectedGettersCheck.java:56)¶unc.checks.BeanTypedPropertiesCheck.matchType(BeanTypedPropertiesCheck.java:248)¶unc.checks.BeanTypedPropertiesCheck.matchProperty(BeanTypedPropertiesCheck.java:192)¶unc.checks.BeanTypedPropertiesCheck.matchProperties(BeanTypedPropertiesCheck.java:144)¶unc.checks.BeanTypedPropertiesCheck.processStrings(BeanTypedPropertiesCheck.java:359)¶unc.checks.TagBasedCheck.doStringArrayBasedPendingCheck(TagBasedCheck.java:2336)¶unc.checks.BeanTypedPropertiesCheck.doPendingCheck(BeanTypedPropertiesCheck.java:323)¶unc.checks.ExpectedGettersCheck.doPendingCheck(ExpectedGettersCheck.java:63)¶unc.checks.ComprehensiveVisitCheck.maybeAddToPendingTypeChecks(ComprehensiveVisitCheck.java:2890)¶unc.checks.BeanPropertiesCheck.doFinishTree(BeanPropertiesCheck.java:200)¶unc.checks.ExpectedGettersCheck.doFinishTree(ExpectedGettersCheck.java:76)¶unc.checks.UNCCheck.finishTree(UNCCheck.java:509)¶unc.tools.checkstyle.AnExtendibleTreeWalker.notifyEnd(AnExtendibleTreeWalker.java:330)¶unc.tools.checkstyle.AnExtendibleTreeWalker.walk(AnExtendibleTreeWalker.java:285)¶unc.tools.checkstyle.AnExtendibleTreeWalker.processFiltered(AnExtendibleTreeWalker.java:157)¶unc.tools.checkstyle.ANonCachingTreeWalker.processFiltered(ANonCachingTreeWalker.java:11)¶com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87)¶com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337)¶com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298)¶com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221)¶net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:146)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)¶org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)¶org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:292)¶org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:481)¶org.eclipse.core.internal.resources.Project$1.run(Project.java:565)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Project.internalBuild(Project.java:603)¶org.eclipse.core.internal.resources.Project.build(Project.java:116)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.lambda$0(LaunchConfigurationDelegate.java:406)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2312)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildProjects(LaunchConfigurationDelegate.java:412)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildForLaunch(LaunchConfigurationDelegate.java:122)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:777)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)¶org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1021)¶org.eclipse.debug.internal.ui.DebugUIPlugin$2.run(DebugUIPlugin.java:1224)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1189" _type="ShellCommand" date="Sun Jun 20 20:56:28 EDT 2021" starttimestamp="1624232406782" timestamp="4581458" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1191" _type="PauseCommand" date="Sun Jun 20 20:56:43 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4596780">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15321]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1190" _type="ConsoleOutput" date="Sun Jun 20 20:56:43 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4596779" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 20:56:43 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Cannot invoke "unc.symbolTable.STType.isExternal()" because "anSTType" is null Description:Check:unc.checks.ExpectedGettersCheck@46d3a0af ast:package[1x0] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.javaStack:¶unc.checks.TagBasedCheck.lookupTags(TagBasedCheck.java:620)¶unc.checks.TagBasedCheck.getTags(TagBasedCheck.java:680)¶unc.checks.TagBasedCheck.matchesTypeUnifying(TagBasedCheck.java:964)¶unc.checks.BeanTypedPropertiesCheck.matchGetter(BeanTypedPropertiesCheck.java:269)¶unc.checks.ExpectedGettersCheck.matchType(ExpectedGettersCheck.java:56)¶unc.checks.BeanTypedPropertiesCheck.matchType(BeanTypedPropertiesCheck.java:248)¶unc.checks.BeanTypedPropertiesCheck.matchProperty(BeanTypedPropertiesCheck.java:192)¶unc.checks.BeanTypedPropertiesCheck.matchProperties(BeanTypedPropertiesCheck.java:144)¶unc.checks.BeanTypedPropertiesCheck.processStrings(BeanTypedPropertiesCheck.java:359)¶unc.checks.TagBasedCheck.doStringArrayBasedPendingCheck(TagBasedCheck.java:2336)¶unc.checks.BeanTypedPropertiesCheck.doPendingCheck(BeanTypedPropertiesCheck.java:323)¶unc.checks.ExpectedGettersCheck.doPendingCheck(ExpectedGettersCheck.java:63)¶unc.checks.ComprehensiveVisitCheck.maybeAddToPendingTypeChecks(ComprehensiveVisitCheck.java:2890)¶unc.checks.BeanPropertiesCheck.doFinishTree(BeanPropertiesCheck.java:200)¶unc.checks.ExpectedGettersCheck.doFinishTree(ExpectedGettersCheck.java:76)¶unc.checks.UNCCheck.finishTree(UNCCheck.java:509)¶unc.tools.checkstyle.AnExtendibleTreeWalker.notifyEnd(AnExtendibleTreeWalker.java:330)¶unc.tools.checkstyle.AnExtendibleTreeWalker.walk(AnExtendibleTreeWalker.java:285)¶unc.tools.checkstyle.AnExtendibleTreeWalker.processFiltered(AnExtendibleTreeWalker.java:157)¶unc.tools.checkstyle.ANonCachingTreeWalker.processFiltered(ANonCachingTreeWalker.java:11)¶com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87)¶com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337)¶com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298)¶com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221)¶net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:146)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)¶org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)¶org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:292)¶org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:481)¶org.eclipse.core.internal.resources.Project$1.run(Project.java:565)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Project.internalBuild(Project.java:603)¶org.eclipse.core.internal.resources.Project.build(Project.java:116)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.lambda$0(LaunchConfigurationDelegate.java:406)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2312)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildProjects(LaunchConfigurationDelegate.java:412)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildForLaunch(LaunchConfigurationDelegate.java:122)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:777)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)¶org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1021)¶org.eclipse.debug.internal.ui.DebugUIPlugin$2.run(DebugUIPlugin.java:1224)"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 20:56:43 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1193" _type="PauseCommand" date="Sun Jun 20 20:56:45 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4598737">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1958]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1192" _type="ConsoleOutput" date="Sun Jun 20 20:56:45 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4598737" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 20:56:45 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 20:56:45 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Sun Jun 20 20:56:45 EDT 2021¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Sun Jun 20 20:56:4"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1194" _type="ConsoleOutput" date="Sun Jun 20 20:56:45 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4598884" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 20:56:45 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Sun Jun 20 20:56:45 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 20:56:45 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1195" _type="ConsoleOutput" date="Sun Jun 20 20:56:46 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4599465" type="ConsoleOutput">
    <outputString><![CDATA[Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method calls:Sun Jun 20 20:56:45 EDT 2021"), Diff(INSERT,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1196" _type="ConsoleOutput" date="Sun Jun 20 20:56:46 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4600085" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 20:56:46 EDT 2021
Generating checks:Sun Jun 20 20:56:46 EDT 2021
Finished Generating checks:Sun Jun 20 20:56:46 EDT 2021
Generating externals:Sun Jun 20 20:56:46 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 20:56:46 EDT 2021¶Generating checks:Sun Jun 20 20:56:46 EDT 2021¶Finished Generating checks:Sun Jun 20 20:56:46 EDT 2021¶Generating externals:Sun Jun 20 20:56:46 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1197" _type="ConsoleOutput" date="Sun Jun 20 20:56:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4600436" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 20:56:47 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 20:56:46 EDT 2021¶Generating checks:Sun Jun 20 20:56:46 EDT 2021¶Finished Generating checks:Sun Jun 20 20:56:46 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 20:56:4"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1198" _type="ConsoleOutput" date="Sun Jun 20 20:56:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4600547" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-5,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 20:56:47 EDT 2021"), Diff(INSERT,"Thread[Thread-5,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1199" _type="ConsoleOutput" date="Sun Jun 20 20:56:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4600622" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-6,5,main]: before wait
Thread[Thread-7,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"5"), Diff(INSERT,"6,5,main]: before wait¶Thread[Thread-7"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1200" _type="ConsoleOutput" date="Sun Jun 20 20:56:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4600728" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-8,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"6,5,main]: before wait¶Thread[Thread-7"), Diff(INSERT,"8"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1202" _type="PauseCommand" date="Sun Jun 20 20:56:48 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4601789">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1201" _type="ConsoleOutput" date="Sun Jun 20 20:56:48 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4601789" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-5,5,main]: after wait
Thread[Thread-8,5,main]: after wait
Thread[Thread-7,5,main]: after wait
Thread[Thread-6,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"Thread-8,5,main]: before"), Diff(INSERT,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-8,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1204" _type="PauseCommand" date="Sun Jun 20 20:56:54 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4607308">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5519]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1203" _type="ConsoleOutput" date="Sun Jun 20 20:56:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4607308" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-9,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶"), Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"5"), Diff(INSERT,"9"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"after wait¶Thread[Thread-8,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after"), Diff(INSERT,"before"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1205" _type="ConsoleOutput" date="Sun Jun 20 20:56:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4607365" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-10,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"9"), Diff(INSERT,"10"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1206" _type="ConsoleOutput" date="Sun Jun 20 20:56:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4607422" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-11,5,main]: before wait
Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-9,5,main]: after wait
Thread[Thread-11,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,",5,main]: before wait¶"), Diff(INSERT,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-9,5,main]: after wait¶Thread[Thread-11,5,main]: after wait¶")]]]></diff>
  </Command>
  <Command __id="1207" _type="ConsoleOutput" date="Sun Jun 20 20:56:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4607480" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-10,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"1,5,main]: before wait¶Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-9,5,main]: after wait¶Thread[Thread-11"), Diff(INSERT,"0"), Diff(EQUAL,",5,main]: after wait¶")]]]></diff>
  </Command>
  <Command __id="1211" _type="PauseCommand" date="Sun Jun 20 20:57:21 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4634260">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1037]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1210" _type="RunCommand" date="Sun Jun 20 20:57:21 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4634260" type="Run" />
  <Command __id="1212" _type="RunCommand" date="Sun Jun 20 20:57:21 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4634260" type="Run" />
  <Command __id="1214" _type="PauseCommand" date="Sun Jun 20 20:57:23 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4636682">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2422]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1215" _type="MoveCaretCommand" caretOffset="10723" date="Sun Jun 20 20:57:23 EDT 2021" docOffset="11645" starttimestamp="1624232406782" timestamp="4636898" />
  <Command __id="1220" _type="PauseCommand" date="Sun Jun 20 20:57:51 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4664629">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3442]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1219" _type="RunCommand" date="Sun Jun 20 20:57:51 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4664629" type="Run" />
  <Command __id="1221" _type="RunCommand" date="Sun Jun 20 20:57:51 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4664629" type="Run" />
  <Command __id="1222" _type="ShellCommand" date="Sun Jun 20 20:57:52 EDT 2021" starttimestamp="1624232406782" timestamp="4665360" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1224" _type="PauseCommand" date="Sun Jun 20 20:57:58 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4671821">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6461]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1223" _type="ConsoleOutput" date="Sun Jun 20 20:57:58 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4671821" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 20:57:58 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[Thread-10,5,main]: after wait"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 20:57:58 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1226" _type="PauseCommand" date="Sun Jun 20 20:58:00 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4673637">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1816]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1225" _type="ConsoleOutput" date="Sun Jun 20 20:58:00 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4673637" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 20:58:00 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 20:58:00 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Sun Jun 20 20:5"), Diff(DELETE,"7:58"), Diff(INSERT,"8:00 EDT 2021¶Start O(n2) inter- and intra class method calls:Sun Jun 20 20:58:00"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1227" _type="ConsoleOutput" date="Sun Jun 20 20:58:00 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4673739" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 20:58:00 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Sun Jun 20 20:58:00 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 20:58:00 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1228" _type="ConsoleOutput" date="Sun Jun 20 20:58:01 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4674370" type="ConsoleOutput">
    <outputString><![CDATA[Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method calls:Sun Jun 20 20:58:00 EDT 2021"), Diff(INSERT,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1229" _type="ConsoleOutput" date="Sun Jun 20 20:58:01 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4675052" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 20:58:01 EDT 2021
Generating checks:Sun Jun 20 20:58:01 EDT 2021
Finished Generating checks:Sun Jun 20 20:58:01 EDT 2021
Generating externals:Sun Jun 20 20:58:01 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 20:58:01 EDT 2021¶Generating checks:Sun Jun 20 20:58:01 EDT 2021¶Finished Generating checks:Sun Jun 20 20:58:01 EDT 2021¶Generating externals:Sun Jun 20 20:58:01 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1230" _type="ConsoleOutput" date="Sun Jun 20 20:58:02 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4675493" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 20:58:02 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 20:58:01 EDT 2021¶Generating checks:Sun Jun 20 20:58:01 EDT 2021¶Finished Generating checks:Sun Jun 20 20:58:01 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 20:58:0"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1231" _type="ConsoleOutput" date="Sun Jun 20 20:58:02 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4675786" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-1,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 20:58:02 EDT 2021"), Diff(INSERT,"Thread[Thread-1,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1232" _type="ConsoleOutput" date="Sun Jun 20 20:58:02 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4675875" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-2,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1233" _type="ConsoleOutput" date="Sun Jun 20 20:58:02 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4675930" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1234" _type="ConsoleOutput" date="Sun Jun 20 20:58:02 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4675982" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-4,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1236" _type="PauseCommand" date="Sun Jun 20 20:58:03 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4677045">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1063]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1235" _type="ConsoleOutput" date="Sun Jun 20 20:58:03 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4677045" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-1,5,main]: after wait
Thread[Thread-4,5,main]: after wait
Thread[Thread-3,5,main]: after wait
Thread[Thread-2,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"Thread-4,5,main]: before"), Diff(INSERT,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1238" _type="PauseCommand" date="Sun Jun 20 20:58:09 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4682560">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5514]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1237" _type="ConsoleOutput" date="Sun Jun 20 20:58:09 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4682559" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-5,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(INSERT,"Thread-5,5,main]: before"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1239" _type="ConsoleOutput" date="Sun Jun 20 20:58:09 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4682625" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-6,5,main]: before wait
Thread[Thread-7,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"5"), Diff(INSERT,"6,5,main]: before wait¶Thread[Thread-7"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1240" _type="ConsoleOutput" date="Sun Jun 20 20:58:09 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4682735" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-5,5,main]: after wait
Thread[Thread-7,5,main]: after wait
Thread[Thread-6,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"T"), Diff(INSERT,"pool-1-t"), Diff(EQUAL,"hread-"), Diff(DELETE,"6"), Diff(INSERT,"1"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"before wait¶Thread[Thread-7,5,main]: before"), Diff(INSERT,"after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1242" _type="PauseCommand" date="Sun Jun 20 20:58:16 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4690023">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7288]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1241" _type="ConsoleOutput" date="Sun Jun 20 20:58:16 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4690023" type="ConsoleOutput">
    <outputString><![CDATA[SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0

SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait"), Diff(INSERT,"SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶¶SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1243" _type="ExceptionCommand" date="Sun Jun 20 20:58:16 EDT 2021" starttimestamp="1624232406782" timestamp="4690104" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6e9c1a87]
Execution exception caused by invocation exception caused by:
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
SceneControllerButtonDynamics did not pass completely:java.lang.ClassCastException class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1244" _type="ExceptionCommand" date="Sun Jun 20 20:58:17 EDT 2021" starttimestamp="1624232406782" timestamp="4690292" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=460; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@e140362]
java.beans.PropertyChangeEvent[propertyName=Angle; oldValue=2.356194490192345; newValue=1.6689710972195777; propagationId=null; source=grail.geometryFigs.RotatingLine@7634e29b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=410; propagationId=null; source=grail.geometryFigs.RotatingLine@6e9c1a87]
Exception in thread "Thread-6" Exception in thread "Thread-7" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Boolean (java.lang.Double and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.RotatingLine.setAngle(RotatingLine.java:117)
	at grail.geometryFigs.RotatingLine.rotate(RotatingLine.java:64)
	at AnimationMethods.ABridgeSceneAnimator.animateGuard(ABridgeSceneAnimator.java:27)
	at AnimationMethods.SceneLockedAnimationCommand.run(SceneLockedAnimationCommand.java:24)
	at java.base/java.lang.Thread.run(Thread.java:834)
Exception in thread "Thread-5" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1246" _type="PauseCommand" date="Sun Jun 20 20:58:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4693279">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2986]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1245" _type="ExceptionCommand" date="Sun Jun 20 20:58:20 EDT 2021" starttimestamp="1624232406782" timestamp="4693278" type="Exception">
    <exceptionString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=410; newValue=410; propagationId=null; source=grail.geometryFigs.RotatingLine@6e9c1a87]
Execution exception caused by invocation exception caused by:

java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
AssertingBridgeSceneDynamics did not pass completely:java.lang.ClassCastException class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1248" _type="PauseCommand" date="Sun Jun 20 20:58:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4695789">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2511]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1247" _type="ExceptionCommand" date="Sun Jun 20 20:58:22 EDT 2021" starttimestamp="1624232406782" timestamp="4695789" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=Radius; oldValue=0.7853981633974483; newValue=0.0; propagationId=null; source=grail.geometryFigs.RestrictedLine@5a8fec27]
Execution exception caused by invocation exception caused by:

java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Boolean (java.lang.Double and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.RestrictedLine.setAngle(RestrictedLine.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Boolean (java.lang.Double and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.RestrictedLine.setAngle(RestrictedLine.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
ArthurIsNotAContortionist did not pass completely:Exception in tested code:class java.lang.Double cannot be cast to class java.lang.Boolean (java.lang.Double and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1250" _type="PauseCommand" date="Sun Jun 20 20:58:39 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4712893">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[17104]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1249" _type="ExceptionCommand" date="Sun Jun 20 20:58:39 EDT 2021" starttimestamp="1624232406782" timestamp="4712893" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=410; newValue=420; propagationId=null; source=grail.geometryFigs.RotatingLine@6e9c1a87]
Exception in thread "Thread-8" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1251" _type="ExceptionCommand" date="Sun Jun 20 20:58:40 EDT 2021" starttimestamp="1624232406782" timestamp="4713451" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp301ss21.assignment4.async.AsyncArthurAnimation.doTest(AsyncArthurAnimation.java:15)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1252" _type="ConsoleOutput" date="Sun Jun 20 20:58:40 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4713494" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp301ss21.assignment4.async.AsyncArthurAnimation.doTest(AsyncArthurAnimation.java:15)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶¶SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No m"), Diff(INSERT,"java.lang.AssertionError: Child thread not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp301ss21.assignment4.async.AsyncArthurAnimation.doTest(AsyncArthurAnimation.java:15)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkM"), Diff(EQUAL,"ethod"), Diff(DELETE," "), Diff(INSERT,"."), Diff(EQUAL,"in"), Diff(DELETE," class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0¶"), Diff(INSERT,"vokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1253" _type="ExceptionCommand" date="Sun Jun 20 20:58:40 EDT 2021" starttimestamp="1624232406782" timestamp="4713967" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=430; propagationId=null; source=grail.geometryFigs.RotatingLine@6e9c1a87]
Exception in thread "Thread-9" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.beans.PropertyChangeEvent[propertyName=X; oldValue=430; newValue=440; propagationId=null; source=grail.geometryFigs.RotatingLine@6e9c1a87]
Exception in thread "Thread-10" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1254" _type="ConsoleOutput" date="Sun Jun 20 20:58:40 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4714090" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Child thread not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶"), Diff(EQUAL,"	at gradingTools.comp"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,"01"), Diff(DELETE,"f16"), Diff(INSERT,"ss21"), Diff(EQUAL,".assignment"), Diff(DELETE,"10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp301ss21.assignment4.async.AsyncArthurAnimation.doTest(AsyncArthurAnimation.java:15)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"12"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelp"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"4"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"grail.geometryFigs.Alocatable.setX(Alocatable"), Diff(EQUAL,".java:"), Diff(DELETE,"30"), Diff(INSERT,"4"), Diff(EQUAL,"0)¶	at gra"), Diff(DELETE,"der.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase"), Diff(INSERT,"il.compositeFigs.MontyAvatar.combineFigs(MontyAvatar"), Diff(EQUAL,".java:"), Diff(DELETE,"161"), Diff(INSERT,"92"), Diff(EQUAL,")¶	at gra"), Diff(DELETE,"der.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"il.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	"), Diff(INSERT,"AnimationMethods.ABridgeSceneAnim"), Diff(EQUAL,"at"), Diff(DELETE," "), Diff(EQUAL,"or"), Diff(DELETE,"g.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,".animateAvatar(ABridgeSceneAnimator.java:17)¶	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"30"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.base/java.lang.Thread.run(Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"187"), Diff(INSERT,"834"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1256" _type="PauseCommand" date="Sun Jun 20 20:58:46 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4719627">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5537]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1255" _type="ExceptionCommand" date="Sun Jun 20 20:58:46 EDT 2021" starttimestamp="1624232406782" timestamp="4719627" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1257" _type="ConsoleOutput" date="Sun Jun 20 20:58:46 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4719650" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶"), Diff(EQUAL,"	at gradingTools.comp"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"01"), Diff(DELETE,"ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics"), Diff(INSERT,"f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:12"), Diff(DELETE,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelp"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"48"), Diff(INSERT,"71"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grail.geometryFigs.Alocatable.setX(Alocatable"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"30"), Diff(EQUAL,"0)¶	at gra"), Diff(DELETE,"il.compositeFigs.MontyAvatar.combineFigs(MontyAvatar"), Diff(INSERT,"der.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"161"), Diff(EQUAL,")¶	at gra"), Diff(DELETE,"il.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar"), Diff(INSERT,"der.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"113"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"AnimationMethods.ABridgeSceneAnim"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".animateAvatar(ABridgeSceneAnimator.java:17)¶	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)¶	at java.base/java.lang.Thread.run(Thread.java:834"), Diff(INSERT,"g.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1258" _type="ConsoleOutput" date="Sun Jun 20 20:58:46 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4719812" type="ConsoleOutput">
    <outputString><![CDATA[A4InterfaceAsType did not pass completely:%0.4

A4NamedConstants did not pass completely:See console trace about lines failing  this check%0.3617391304347826

A4PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.3375

A4MnemonicNames did not pass completely:See console trace about lines failing  this check%0.349685534591195

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(INSERT,"A4InterfaceAsType did not pass completely:%0.4¶¶A4NamedConstants did not pass completely:See console trace about lines failing  this check%0.3617391304347826¶¶A4PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.3375¶¶A4MnemonicNames did not pass completely:See console trace about lines failing  this check%0.349685534591195¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1259" _type="ConsoleOutput" date="Sun Jun 20 20:58:46 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4719948" type="ConsoleOutput">
    <outputString><![CDATA[A4Encapsulation did not pass completely:%0.4


A4NonPublicAccessModifiersMatched did not pass completely:%0.4
A4CommonPropertiesAreInherited did not pass completely:See console trace about lines failing  this check%0.32432432432432434


]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A4"), Diff(DELETE,"InterfaceAsType"), Diff(INSERT,"Encapsulation"), Diff(EQUAL," did not pass completely:%0.4¶¶"), Diff(INSERT,"¶"), Diff(EQUAL,"A4N"), Diff(DELETE,"amedConstants did not pass completely:See console trace about lines failing  this check%0.3617391304347826¶¶A4PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.3375¶¶A4MnemonicNames"), Diff(INSERT,"onPublicAccessModifiersMatched did not pass completely:%0.4¶A4CommonPropertiesAreInherited"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0.3"), Diff(DELETE,"49685534591195"), Diff(INSERT,"2432432432432434¶"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="1261" _type="PauseCommand" date="Sun Jun 20 20:58:53 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4726641">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6693]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1260" _type="ExceptionCommand" date="Sun Jun 20 20:58:53 EDT 2021" starttimestamp="1624232406782" timestamp="4726641" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=260; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@2dc67173]
Exception in thread "Thread-11" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1262" _type="ExceptionCommand" date="Sun Jun 20 20:58:54 EDT 2021" starttimestamp="1624232406782" timestamp="4727242" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1263" _type="ConsoleOutput" date="Sun Jun 20 20:58:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4727260" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A4Encapsulation did not pass completely:%0.4¶¶¶A4NonPublicAccessModifiersMatched did not pass completely:%0.4¶A4CommonPropertiesAreInherited did not pass completely:See console trace about lines failing  this check%0.32432432432432434¶¶"), Diff(INSERT,"java.lang.AssertionError: Child thread not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1264" _type="ExceptionCommand" date="Sun Jun 20 20:58:54 EDT 2021" starttimestamp="1624232406782" timestamp="4727708" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=470; newValue=480; propagationId=null; source=grail.geometryFigs.RotatingLine@e140362]
Exception in thread "Thread-12" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1265" _type="ExceptionCommand" date="Sun Jun 20 20:58:55 EDT 2021" starttimestamp="1624232406782" timestamp="4728265" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1266" _type="ConsoleOutput" date="Sun Jun 20 20:58:55 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4728265" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child thread not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶")]]]></diff>
  </Command>
  <Command __id="1267" _type="ExceptionCommand" date="Sun Jun 20 20:58:55 EDT 2021" starttimestamp="1624232406782" timestamp="4728777" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=320; newValue=330; propagationId=null; source=grail.geometryFigs.RotatingLine@733d98d3]
Exception in thread "Thread-13" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1268" _type="ExceptionCommand" date="Sun Jun 20 20:58:56 EDT 2021" starttimestamp="1624232406782" timestamp="4729333" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1269" _type="ConsoleOutput" date="Sun Jun 20 20:58:56 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="4729333" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child thread not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.checkOutput(AsyncArthurAnimationTestCase.java:200)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶")]]]></diff>
  </Command>
  <Command __id="1271" _type="PauseCommand" date="Sun Jun 20 21:02:00 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="4913800">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[184467]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1270" _type="ShellCommand" date="Sun Jun 20 21:02:00 EDT 2021" starttimestamp="1624232406782" timestamp="4913800" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1272" _type="RunCommand" date="Sun Jun 20 21:02:01 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4914735" type="Run" />
  <Command __id="1273" _type="RunCommand" date="Sun Jun 20 21:02:01 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4914736" type="Run" />
  <Command __id="1275" _type="PauseCommand" date="Sun Jun 20 21:02:13 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4927048">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[12312]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1276" _type="MoveCaretCommand" caretOffset="216" date="Sun Jun 20 21:02:14 EDT 2021" docOffset="274" starttimestamp="1624232406782" timestamp="4927369" />
  <Command __id="1278" _type="PauseCommand" date="Sun Jun 20 21:02:15 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4929115">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1746]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1279" _type="SelectTextCommand" caretOffset="887" date="Sun Jun 20 21:02:16 EDT 2021" end="887" start="438" starttimestamp="1624232406782" timestamp="4929254" />
  <Command __id="1281" _type="PauseCommand" date="Sun Jun 20 21:02:17 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4930742">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1488]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1280" _type="MoveCaretCommand" caretOffset="426" date="Sun Jun 20 21:02:17 EDT 2021" docOffset="516" starttimestamp="1624232406782" timestamp="4930742" />
  <Command __id="1283" _type="PauseCommand" date="Sun Jun 20 21:02:19 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4932719">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1977]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1282" _type="MoveCaretCommand" caretOffset="227" date="Sun Jun 20 21:02:19 EDT 2021" docOffset="317" starttimestamp="1624232406782" timestamp="4932719" />
  <Command __id="1285" _type="PauseCommand" date="Sun Jun 20 21:02:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4933922">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1203]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 21:02:20 EDT 2021" starttimestamp="1624232406782" timestamp="4933928" />
  <Command __id="1288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 21:02:20 EDT 2021" starttimestamp="1624232406782" timestamp="4934099" />
  <Command __id="1290" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 21:02:21 EDT 2021" starttimestamp="1624232406782" timestamp="4934277" />
  <Command __id="1292" _type="PauseCommand" date="Sun Jun 20 21:02:23 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4937154">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2876]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1293" _type="InsertStringCommand" date="Sun Jun 20 21:02:23 EDT 2021" starttimestamp="1624232406782" timestamp="4937157" timestamp2="4937157">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="1295" _type="PauseCommand" date="Sun Jun 20 21:02:26 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4940037">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2880]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1296" _type="InsertStringCommand" date="Sun Jun 20 21:02:26 EDT 2021" starttimestamp="1624232406782" timestamp="4940040" timestamp2="4940040">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="1298" _type="InsertStringCommand" date="Sun Jun 20 21:02:26 EDT 2021" starttimestamp="1624232406782" timestamp="4940171" timestamp2="4940171">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="1300" _type="PauseCommand" date="Sun Jun 20 21:02:30 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4943993">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3822]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1301" _type="SelectTextCommand" caretOffset="723" date="Sun Jun 20 21:02:30 EDT 2021" end="723" start="518" starttimestamp="1624232406782" timestamp="4944159" />
  <Command __id="1303" _type="PauseCommand" date="Sun Jun 20 21:02:33 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4946433">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2274]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1304" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 21:02:33 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="4946576" />
  <Command __id="1306" _type="PauseCommand" date="Sun Jun 20 21:02:35 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4948646">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2070]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1307" _type="MoveCaretCommand" caretOffset="401" date="Sun Jun 20 21:02:35 EDT 2021" docOffset="401" starttimestamp="1624232406782" timestamp="4948784" />
  <Command __id="1309" _type="PauseCommand" date="Sun Jun 20 21:02:38 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4951788">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3004]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1310" _type="MoveCaretCommand" caretOffset="201" date="Sun Jun 20 21:02:38 EDT 2021" docOffset="201" starttimestamp="1624232406782" timestamp="4951936" />
  <Command __id="1312" _type="PauseCommand" date="Sun Jun 20 21:02:40 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4953269">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1333]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1313" _type="MoveCaretCommand" caretOffset="498" date="Sun Jun 20 21:02:40 EDT 2021" docOffset="498" starttimestamp="1624232406782" timestamp="4953415" />
  <Command __id="1315" _type="PauseCommand" date="Sun Jun 20 21:02:43 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4956950">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3535]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1316" _type="MoveCaretCommand" caretOffset="216" date="Sun Jun 20 21:02:43 EDT 2021" docOffset="274" starttimestamp="1624232406782" timestamp="4957080" />
  <Command __id="1318" _type="PauseCommand" date="Sun Jun 20 21:02:45 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4958365">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1285]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1319" _type="MoveCaretCommand" caretOffset="227" date="Sun Jun 20 21:02:45 EDT 2021" docOffset="317" starttimestamp="1624232406782" timestamp="4958522" />
  <Command __id="1321" _type="PauseCommand" date="Sun Jun 20 21:02:48 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4961447">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2925]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1322" _type="SelectTextCommand" caretOffset="723" date="Sun Jun 20 21:02:48 EDT 2021" end="723" start="518" starttimestamp="1624232406782" timestamp="4961583" />
  <Command __id="1324" _type="PauseCommand" date="Sun Jun 20 21:02:52 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4965419">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3836]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1325" _type="MoveCaretCommand" caretOffset="401" date="Sun Jun 20 21:02:52 EDT 2021" docOffset="401" starttimestamp="1624232406782" timestamp="4965547" />
  <Command __id="1327" _type="PauseCommand" date="Sun Jun 20 21:03:08 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="4981722">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16175]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1328" _type="MoveCaretCommand" caretOffset="954" date="Sun Jun 20 21:03:08 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="4981877" />
  <Command __id="1330" _type="PauseCommand" date="Sun Jun 20 21:03:10 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4983327">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1450]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1329" _type="ShellCommand" date="Sun Jun 20 21:03:10 EDT 2021" starttimestamp="1624232406782" timestamp="4983327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1332" _type="PauseCommand" date="Sun Jun 20 21:03:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="4985201">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1874]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1331" _type="ShellCommand" date="Sun Jun 20 21:03:11 EDT 2021" starttimestamp="1624232406782" timestamp="4985201" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1333" _type="EclipseCommand" commandID="" date="Sun Jun 20 21:03:12 EDT 2021" starttimestamp="1624232406782" timestamp="4985329" />
  <Command __id="1334" _type="EclipseCommand" commandID="" date="Sun Jun 20 21:03:12 EDT 2021" starttimestamp="1624232406782" timestamp="4985391" />
  <Command __id="1335" _type="RunCommand" date="Sun Jun 20 21:03:12 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4985455" type="Run" />
  <Command __id="1336" _type="RunCommand" date="Sun Jun 20 21:03:12 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4985455" type="Run" />
  <Command __id="1337" _type="ShellCommand" date="Sun Jun 20 21:03:13 EDT 2021" starttimestamp="1624232406782" timestamp="4986301" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1339" _type="PauseCommand" date="Sun Jun 20 21:03:18 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="4991383">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5082]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1338" _type="ShellCommand" date="Sun Jun 20 21:03:18 EDT 2021" starttimestamp="1624232406782" timestamp="4991383" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1341" _type="PauseCommand" date="Sun Jun 20 21:03:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="4995872">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4489]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1340" _type="ShellCommand" date="Sun Jun 20 21:03:22 EDT 2021" starttimestamp="1624232406782" timestamp="4995872" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1343" _type="PauseCommand" date="Sun Jun 20 21:03:29 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="5002528">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6655]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1342" _type="ExceptionCommand" date="Sun Jun 20 21:03:29 EDT 2021" starttimestamp="1624232406782" timestamp="5002527" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1344" _type="ConsoleOutput" date="Sun Jun 20 21:03:29 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5002529" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child "), Diff(DELETE,"thread not found:"), Diff(INSERT,"1 and Child 2 are not synchronized "), Diff(EQUAL,"%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment1"), Diff(DELETE,"0.a"), Diff(INSERT,"1.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11."), Diff(EQUAL,"sync.testcases."), Diff(DELETE,"As"), Diff(INSERT,"S"), Diff(EQUAL,"yncArthurAnimationTestCase.checkOutput("), Diff(DELETE,"As"), Diff(INSERT,"S"), Diff(EQUAL,"yncArthurAnimationTestCase.java:"), Diff(DELETE,"200"), Diff(INSERT,"86"), Diff(EQUAL,")¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at "), Diff(INSERT,"java.base/"), Diff(EQUAL,"jdk.internal.reflect."), Diff(DELETE,"Generated"), Diff(INSERT,"NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.Native"), Diff(EQUAL,"MethodAccessor"), Diff(DELETE,"30"), Diff(INSERT,"Impl"), Diff(EQUAL,".invoke("), Diff(DELETE,"Unknown Source"), Diff(INSERT,"NativeMethodAccessorImpl.java:62"), Diff(EQUAL,")¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶"), Diff(DELETE,"	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶")]]]></diff>
  </Command>
  <Command __id="1346" _type="PauseCommand" date="Sun Jun 20 21:03:30 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="5003918">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1389]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1345" _type="ExceptionCommand" date="Sun Jun 20 21:03:30 EDT 2021" starttimestamp="1624232406782" timestamp="5003918" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1347" _type="ConsoleOutput" date="Sun Jun 20 21:03:30 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5003918" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶")]]]></diff>
  </Command>
  <Command __id="1349" _type="PauseCommand" date="Sun Jun 20 21:03:31 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="5005208">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1290]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1348" _type="ExceptionCommand" date="Sun Jun 20 21:03:31 EDT 2021" starttimestamp="1624232406782" timestamp="5005208" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1350" _type="ConsoleOutput" date="Sun Jun 20 21:03:31 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5005209" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶")]]]></diff>
  </Command>
  <Command __id="1352" _type="PauseCommand" date="Sun Jun 20 21:03:33 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="5006549">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1340]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1351" _type="ExceptionCommand" date="Sun Jun 20 21:03:33 EDT 2021" starttimestamp="1624232406782" timestamp="5006549" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1353" _type="ConsoleOutput" date="Sun Jun 20 21:03:33 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5006549" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶")]]]></diff>
  </Command>
  <Command __id="1355" _type="PauseCommand" date="Sun Jun 20 21:03:43 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="5017173">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10624]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1354" _type="ConsoleOutput" date="Sun Jun 20 21:03:43 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5017173" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 21:03:43 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 21:03:43 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1357" _type="PauseCommand" date="Sun Jun 20 21:03:45 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="5019065">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1892]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1356" _type="ConsoleOutput" date="Sun Jun 20 21:03:45 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5019065" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 21:03:45 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 21:03:45 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Sun Jun 20 21:03:4"), Diff(DELETE,"3"), Diff(INSERT,"5 EDT 2021¶Start O(n2) inter- and intra class method calls:Sun Jun 20 21:03:45"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1358" _type="ConsoleOutput" date="Sun Jun 20 21:03:45 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5019215" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 21:03:45 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Sun Jun 20 21:03:45 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 21:03:45 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1359" _type="ConsoleOutput" date="Sun Jun 20 21:03:46 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5019843" type="ConsoleOutput">
    <outputString><![CDATA[Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method calls:Sun Jun 20 21:03:45 EDT 2021"), Diff(INSERT,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1360" _type="ConsoleOutput" date="Sun Jun 20 21:03:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5020449" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 21:03:47 EDT 2021
Generating checks:Sun Jun 20 21:03:47 EDT 2021
Finished Generating checks:Sun Jun 20 21:03:47 EDT 2021
Generating externals:Sun Jun 20 21:03:47 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void¶Illegal signature,setEnabled:boolean:-> void,  too many :setEnabled:boolean:-> void"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 21:03:47 EDT 2021¶Generating checks:Sun Jun 20 21:03:47 EDT 2021¶Finished Generating checks:Sun Jun 20 21:03:47 EDT 2021¶Generating externals:Sun Jun 20 21:03:47 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1361" _type="ConsoleOutput" date="Sun Jun 20 21:03:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5020781" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 21:03:47 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 21:03:47 EDT 2021¶Generating checks:Sun Jun 20 21:03:47 EDT 2021¶Finished Generating checks:Sun Jun 20 21:03:47 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 21:03:47 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1362" _type="ConsoleOutput" date="Sun Jun 20 21:03:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5020895" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-13,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 21:03:47 EDT 2021"), Diff(INSERT,"Thread[Thread-13,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1363" _type="ConsoleOutput" date="Sun Jun 20 21:03:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5020965" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-14,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1364" _type="ConsoleOutput" date="Sun Jun 20 21:03:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5021022" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-15,5,main]: before wait
Thread[Thread-16,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"4"), Diff(INSERT,"5,5,main]: before wait¶Thread[Thread-16"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1366" _type="PauseCommand" date="Sun Jun 20 21:03:48 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="5022126">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1104]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1365" _type="ConsoleOutput" date="Sun Jun 20 21:03:48 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5022126" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-13,5,main]: after wait
Thread[Thread-16,5,main]: after wait
Thread[Thread-15,5,main]: after wait
Thread[Thread-14,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"T"), Diff(INSERT,"pool-1-t"), Diff(EQUAL,"hread-1"), Diff(DELETE,"5"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"before wait¶Thread[Thread-16,5,main]: before"), Diff(INSERT,"after notifyAll¶Thread[Thread-13,5,main]: after wait¶Thread[Thread-16,5,main]: after wait¶Thread[Thread-15,5,main]: after wait¶Thread[Thread-14,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1368" _type="PauseCommand" date="Sun Jun 20 21:03:54 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="5027390">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5264]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1367" _type="ConsoleOutput" date="Sun Jun 20 21:03:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5027390" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-17,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-13,5,main]: after wait¶Thread[Thread-16,5,main]: after wait¶Thread[Thread-15,5,main]: after wait¶Thread[Thread-14,5,main]: after"), Diff(INSERT,"Thread-17,5,main]: before"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1369" _type="ConsoleOutput" date="Sun Jun 20 21:03:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5027456" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-18,5,main]: before wait
Thread[Thread-19,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"7"), Diff(INSERT,"8,5,main]: before wait¶Thread[Thread-19"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1370" _type="ConsoleOutput" date="Sun Jun 20 21:03:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5027552" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-17,5,main]: after wait
Thread[Thread-19,5,main]: after wait
Thread[Thread-18,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"T"), Diff(INSERT,"pool-1-t"), Diff(EQUAL,"hread-1"), Diff(DELETE,"8"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"before wait¶Thread[Thread-19,5,main]: before"), Diff(INSERT,"after notifyAll¶Thread[Thread-17,5,main]: after wait¶Thread[Thread-19,5,main]: after wait¶Thread[Thread-18,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1372" _type="PauseCommand" date="Sun Jun 20 21:04:26 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="5059884">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[32332]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1371" _type="ConsoleOutput" date="Sun Jun 20 21:04:26 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5059884" type="ConsoleOutput">
    <outputString><![CDATA[
SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0
SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-17,5,main]: after wait¶Thread[Thread-19,5,main]: after wait¶Thread[Thread-18,5,main]: after wait"), Diff(INSERT,"¶SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1373" _type="ExceptionCommand" date="Sun Jun 20 21:04:26 EDT 2021" starttimestamp="1624232406782" timestamp="5059994" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=760; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@cf969b3]
Execution exception caused by invocation exception caused by:
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
SceneControllerButtonDynamics did not pass completely:java.lang.ClassCastException class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1375" _type="PauseCommand" date="Sun Jun 20 21:04:30 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="5064164">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[4170]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1374" _type="ExceptionCommand" date="Sun Jun 20 21:04:30 EDT 2021" starttimestamp="1624232406782" timestamp="5064164" type="Exception">
    <exceptionString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@cf969b3]
Execution exception caused by invocation exception caused by:

java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:123)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
AssertingBridgeSceneDynamics did not pass completely:java.lang.ClassCastException class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1377" _type="PauseCommand" date="Sun Jun 20 21:04:38 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="5071496">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[7332]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1376" _type="ConsoleOutput" date="Sun Jun 20 21:04:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5071496" type="ConsoleOutput">
    <outputString><![CDATA[
A4PackageDeclarations did not pass completely:%0.6
A4SimplifyBooleanExpressions did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/compositeFigs/FiveChars.java:189:54: Expression can be simplified. [SimplifyBooleanExpression]%0.0

A4SimplifyBooleanReturns did not pass completely:%0.6

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶SceneControllerRegistersAsPropertyChangeListener"), Diff(INSERT,"A4PackageDeclarations did not pass completely:%0.6¶A4SimplifyBooleanExpressions"), Diff(EQUAL," did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/"), Diff(DELETE,"MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]"), Diff(INSERT,"compositeFigs/FiveChars.java:189:54: Expression can be simplified. [SimplifyBooleanExpression]%0.0¶¶A4SimplifyBooleanReturns did not pass completely:"), Diff(EQUAL,"%0."), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="1378" _type="ConsoleOutput" date="Sun Jun 20 21:04:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5071565" type="ConsoleOutput">
    <outputString><![CDATA[A4NoHiddenFields did not pass completely:%0.6


A4NamingConventions did not pass completely:%0.6
A4InterfaceAsType did not pass completely:%0.6

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A4PackageDeclaration"), Diff(INSERT,"A4NoHiddenField"), Diff(EQUAL,"s did not pass completely:%0.6¶"), Diff(DELETE,"A4SimplifyBooleanExpress"), Diff(INSERT,"¶¶A4NamingConvent"), Diff(EQUAL,"ions did not pass completely:"), Diff(DELETE,"[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/compositeFigs/FiveChars.java:189:54: Expression can be simplified. [SimplifyBooleanExpression]%0.0¶¶A4SimplifyBooleanReturns"), Diff(INSERT,"%0.6¶A4InterfaceAsType"), Diff(EQUAL," did not pass completely:%0.6¶¶")]]]></diff>
  </Command>
  <Command __id="1379" _type="ConsoleOutput" date="Sun Jun 20 21:04:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5071588" type="ConsoleOutput">
    <outputString><![CDATA[A4NamedConstants did not pass completely:See console trace about lines failing  this check%0.5426086956521738

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A4N"), Diff(DELETE,"oHiddenField"), Diff(INSERT,"amedConstant"), Diff(EQUAL,"s did not pass completely:"), Diff(DELETE,"%0.6¶¶¶A4NamingConventions did not pass completely:%0.6¶A4InterfaceAsType did not pass completely:%0.6"), Diff(INSERT,"See console trace about lines failing  this check%0.5426086956521738"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="1380" _type="ConsoleOutput" date="Sun Jun 20 21:04:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5071666" type="ConsoleOutput">
    <outputString><![CDATA[A4PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.50625

A4MnemonicNames did not pass completely:See console trace about lines failing  this check%0.5245283018867924

A4Encapsulation did not pass completely:%0.6

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A4"), Diff(DELETE,"NamedConstant"), Diff(INSERT,"PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.50625¶¶A4MnemonicName"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0.5"), Diff(DELETE,"426086956521738"), Diff(INSERT,"245283018867924¶¶A4Encapsulation did not pass completely:%0.6"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="1381" _type="ConsoleOutput" date="Sun Jun 20 21:04:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5071738" type="ConsoleOutput">
    <outputString><![CDATA[A4NonPublicAccessModifiersMatched did not pass completely:%0.6

A4CommonPropertiesAreInherited did not pass completely:See console trace about lines failing  this check%0.4864864864864865

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A4"), Diff(INSERT,"Non"), Diff(EQUAL,"Public"), Diff(DELETE,"MethodsOverride"), Diff(INSERT,"AccessModifiersMatched"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"See console trace about lines failing  this check%0.50625¶¶A4MnemonicNames"), Diff(INSERT,"%0.6¶¶A4CommonPropertiesAreInherited"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"5245283018867924¶¶A4Encapsulation did not pass completely:%0.6"), Diff(INSERT,"4864864864864865"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="1382" _type="ConsoleOutput" date="Sun Jun 20 21:04:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="5071791" type="ConsoleOutput">
    <outputString><![CDATA[A4CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.2296875
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A4"), Diff(DELETE,"NonPublicAccessModifiersMatched did not pass completely:%0.6¶¶A4CommonProperti"), Diff(INSERT,"CommonSignatur"), Diff(EQUAL,"esAreInherited did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"486486486486486"), Diff(INSERT,"229687"), Diff(EQUAL,"5¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="1390" _type="PauseCommand" date="Sun Jun 20 21:54:56 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="8090158">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3502]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1389" _type="RunCommand" date="Sun Jun 20 21:54:56 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8090158" type="Run" />
  <Command __id="1391" _type="RunCommand" date="Sun Jun 20 21:54:56 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8090159" type="Run" />
  <Command __id="1392" _type="ShellCommand" date="Sun Jun 20 21:54:57 EDT 2021" starttimestamp="1624232406782" timestamp="8090802" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1394" _type="PauseCommand" date="Sun Jun 20 21:55:25 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="8118741">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[27939]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1393" _type="ExceptionCommand" date="Sun Jun 20 21:55:25 EDT 2021" starttimestamp="1624232406782" timestamp="8118741" type="Exception">
    <exceptionString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1395" _type="ConsoleOutput" date="Sun Jun 20 21:55:25 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8118748" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A4CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.2296875"), Diff(INSERT,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1399" _type="PauseCommand" date="Sun Jun 20 21:55:49 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="8143206">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8606]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1398" _type="RunCommand" date="Sun Jun 20 21:55:49 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8143206" type="Run" />
  <Command __id="1400" _type="RunCommand" date="Sun Jun 20 21:55:49 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8143207" type="Run" />
  <Command __id="1402" _type="PauseCommand" date="Sun Jun 20 21:55:56 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="8150039">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6832]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1401" _type="ShellCommand" date="Sun Jun 20 21:55:56 EDT 2021" starttimestamp="1624232406782" timestamp="8150039" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1404" _type="PauseCommand" date="Sun Jun 20 21:56:13 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="8166958">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16919]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="1403" _type="BalloonCommand" date="Sun Jun 20 21:56:13 EDT 2021" message="*******************************************
Worked 20 minutes(fixed)/20 minutes(context based) from
Sun Jun 20 20:40:06 EDT 2021 to Sun Jun 20 21:55:56 EDT 2021
Edited 1 Projects: 
	grailA4FinalProject
Edited 4 Files: 
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneAnimator.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java
Number of insert: 266
Number of delete: 87
" starttimestamp="1624232406782" timestamp="8166958">
    <fineGrainedWorkTime><![CDATA[20]]></fineGrainedWorkTime>
    <insert><![CDATA[266]]></insert>
    <startTime><![CDATA[1624236006878]]></startTime>
    <endTime><![CDATA[1624240556821]]></endTime>
    <workTime><![CDATA[20]]></workTime>
    <delete><![CDATA[87]]></delete>
  </Command>
  <Command __id="1406" _type="PauseCommand" date="Sun Jun 20 22:00:30 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="8423583">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[256625]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1405" _type="ShellCommand" date="Sun Jun 20 22:00:30 EDT 2021" starttimestamp="1624232406782" timestamp="8423583" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1425" _type="PauseCommand" date="Sun Jun 20 22:00:38 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8431454">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1111]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1424" _type="RunCommand" date="Sun Jun 20 22:00:38 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8431454" type="Run" />
  <Command __id="1426" _type="RunCommand" date="Sun Jun 20 22:00:38 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8431455" type="Run" />
  <Command __id="1427" _type="ShellCommand" date="Sun Jun 20 22:00:39 EDT 2021" starttimestamp="1624232406782" timestamp="8432312" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1429" _type="PauseCommand" date="Sun Jun 20 22:00:50 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="8444083">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11771]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1428" _type="ExceptionCommand" date="Sun Jun 20 22:00:50 EDT 2021" starttimestamp="1624232406782" timestamp="8444083" type="Exception">
    <exceptionString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1430" _type="ConsoleOutput" date="Sun Jun 20 22:00:50 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8444083" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶")]]]></diff>
  </Command>
  <Command __id="1432" _type="PauseCommand" date="Sun Jun 20 22:01:14 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="8467753">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[23670]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1431" _type="ExceptionCommand" date="Sun Jun 20 22:01:14 EDT 2021" starttimestamp="1624232406782" timestamp="8467753" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1433" _type="ConsoleOutput" date="Sun Jun 20 22:01:14 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8467759" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶"), Diff(EQUAL,"java.lang.AssertionError: "), Diff(DELETE,"14 checks out of 34 fail. See console error messages%0.5882352941176471"), Diff(INSERT,"Child 1 and Child 2 are not synchronized %0.0"), Diff(EQUAL,"¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	"), Diff(INSERT,"at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	"), Diff(EQUAL,"at gradingTools.comp401f16.assignment"), Diff(DELETE,"6"), Diff(INSERT,"11.sync"), Diff(EQUAL,".testcases."), Diff(DELETE,"BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamic"), Diff(INSERT,"SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimation"), Diff(EQUAL,"TestCase.java:"), Diff(DELETE,"82"), Diff(INSERT,"65"), Diff(EQUAL,")¶	at gradingTools.comp401f16.assignment1"), Diff(DELETE,"0"), Diff(INSERT,"1.sync"), Diff(EQUAL,".testcases."), Diff(DELETE,"AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamic"), Diff(INSERT,"SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimation"), Diff(EQUAL,"TestCase.java:"), Diff(DELETE,"477"), Diff(INSERT,"86"), Diff(EQUAL,")¶	at gradingTools.comp401f16.assignment"), Diff(DELETE,"6"), Diff(INSERT,"10.async"), Diff(EQUAL,".testcases."), Diff(DELETE,"BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamic"), Diff(INSERT,"AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimation"), Diff(EQUAL,"TestCase.java:"), Diff(DELETE,"93"), Diff(INSERT,"246"), Diff(EQUAL,")¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	"), Diff(INSERT,"at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	"), Diff(EQUAL,"at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶"), Diff(INSERT,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶")]]]></diff>
  </Command>
  <Command __id="1435" _type="PauseCommand" date="Sun Jun 20 22:01:15 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8469139">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1380]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1434" _type="ExceptionCommand" date="Sun Jun 20 22:01:15 EDT 2021" starttimestamp="1624232406782" timestamp="8469139" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1436" _type="ConsoleOutput" date="Sun Jun 20 22:01:15 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8469139" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶")]]]></diff>
  </Command>
  <Command __id="1438" _type="PauseCommand" date="Sun Jun 20 22:01:17 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8470427">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1288]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1437" _type="ExceptionCommand" date="Sun Jun 20 22:01:17 EDT 2021" starttimestamp="1624232406782" timestamp="8470427" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1439" _type="ConsoleOutput" date="Sun Jun 20 22:01:17 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8470427" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶")]]]></diff>
  </Command>
  <Command __id="1441" _type="PauseCommand" date="Sun Jun 20 22:01:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8471769">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1342]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1440" _type="ExceptionCommand" date="Sun Jun 20 22:01:18 EDT 2021" starttimestamp="1624232406782" timestamp="8471769" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1442" _type="ConsoleOutput" date="Sun Jun 20 22:01:18 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8471770" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶")]]]></diff>
  </Command>
  <Command __id="1444" _type="PauseCommand" date="Sun Jun 20 22:01:24 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="8477448">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5678]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1443" _type="ConsoleOutput" date="Sun Jun 20 22:01:24 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8477448" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 22:01:24 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 22:01:24 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1446" _type="PauseCommand" date="Sun Jun 20 22:01:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8479189">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1741]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1445" _type="ConsoleOutput" date="Sun Jun 20 22:01:25 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8479189" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 22:01:25 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 22:01:25 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Sun Jun 20 22:01:25 EDT 2021¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Sun Jun 20 22:01:2"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1447" _type="ConsoleOutput" date="Sun Jun 20 22:01:26 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8479295" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 22:01:26 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Sun Jun 20 22:01:25 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 22:01:2"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1449" _type="PauseCommand" date="Sun Jun 20 22:01:27 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8480590">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1295]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1448" _type="ConsoleOutput" date="Sun Jun 20 22:01:27 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8480590" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 22:01:27 EDT 2021
Generating checks:Sun Jun 20 22:01:27 EDT 2021
Finished Generating checks:Sun Jun 20 22:01:27 EDT 2021
Generating externals:Sun Jun 20 22:01:27 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 22:01:27 EDT 2021¶Generating checks:Sun Jun 20 22:01:27 EDT 2021¶Finished Generating checks:Sun Jun 20 22:01:27 EDT 2021¶Generating externa"), Diff(EQUAL,"ls:Sun Jun 20 22:01:2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1450" _type="ConsoleOutput" date="Sun Jun 20 22:01:27 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8481017" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 22:01:27 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 22:01:27 EDT 2021¶Generating checks:Sun Jun 20 22:01:27 EDT 2021¶Finished Generating checks:Sun Jun 20 22:01:27 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 22:01:27 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1451" _type="ConsoleOutput" date="Sun Jun 20 22:01:27 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8481164" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-13,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 22:01:27 EDT 2021"), Diff(INSERT,"Thread[Thread-13,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1452" _type="ConsoleOutput" date="Sun Jun 20 22:01:28 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8481230" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-14,5,main]: before wait
Thread[Thread-15,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"3"), Diff(INSERT,"4,5,main]: before wait¶Thread[Thread-15"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1453" _type="ConsoleOutput" date="Sun Jun 20 22:01:28 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8481378" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-16,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"4,5,main]: before wait¶Thread[Thread-15"), Diff(INSERT,"6"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1455" _type="PauseCommand" date="Sun Jun 20 22:01:29 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8482388">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1010]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1454" _type="ConsoleOutput" date="Sun Jun 20 22:01:29 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8482388" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-13,5,main]: after wait
Thread[Thread-16,5,main]: after wait
Thread[Thread-15,5,main]: after wait
Thread[Thread-14,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"Thread-16,5,main]: before"), Diff(INSERT,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-13,5,main]: after wait¶Thread[Thread-16,5,main]: after wait¶Thread[Thread-15,5,main]: after wait¶Thread[Thread-14,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1457" _type="PauseCommand" date="Sun Jun 20 22:01:34 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="8487650">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5262]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1456" _type="ConsoleOutput" date="Sun Jun 20 22:01:34 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8487650" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-17,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-13,5,main]: after wait¶Thread[Thread-16,5,main]: after wait¶Thread[Thread-15,5,main]: after wait¶Thread[Thread-14,5,main]: after"), Diff(INSERT,"Thread-17,5,main]: before"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1458" _type="ConsoleOutput" date="Sun Jun 20 22:01:34 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8487713" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-18,5,main]: before wait
Thread[Thread-19,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-1"), Diff(DELETE,"7"), Diff(INSERT,"8,5,main]: before wait¶Thread[Thread-19"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1459" _type="ConsoleOutput" date="Sun Jun 20 22:01:34 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8487818" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-17,5,main]: after wait
Thread[Thread-19,5,main]: after wait
Thread[Thread-18,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"T"), Diff(INSERT,"pool-1-t"), Diff(EQUAL,"hread-1"), Diff(DELETE,"8"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"before wait¶Thread[Thread-19,5,main]: before"), Diff(INSERT,"after notifyAll¶Thread[Thread-17,5,main]: after wait¶Thread[Thread-19,5,main]: after wait¶Thread[Thread-18,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1461" _type="PauseCommand" date="Sun Jun 20 22:01:36 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="8489649">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1831]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1460" _type="ConsoleOutput" date="Sun Jun 20 22:01:36 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8489649" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-17,5,main]: after wait¶Thread[Thread-19,5,main]: after wait¶Thread[Thread-18,5,main]: after wait"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1463" _type="PauseCommand" date="Sun Jun 20 22:01:57 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="8510413">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[20764]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1462" _type="ConsoleOutput" date="Sun Jun 20 22:01:57 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8510413" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1472" _type="PauseCommand" date="Sun Jun 20 22:02:43 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="8556883">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2346]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1471" _type="RunCommand" date="Sun Jun 20 22:02:43 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8556883" type="Run" />
  <Command __id="1473" _type="RunCommand" date="Sun Jun 20 22:02:43 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8556883" type="Run" />
  <Command __id="1474" _type="ShellCommand" date="Sun Jun 20 22:02:44 EDT 2021" starttimestamp="1624232406782" timestamp="8557435" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1476" _type="PauseCommand" date="Sun Jun 20 22:02:53 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="8566436">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9001]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1475" _type="ConsoleOutput" date="Sun Jun 20 22:02:53 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8566436" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@2c9e50bb]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@2c9e50bb]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=880; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=920; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
in precondition
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspa"), Diff(INSERT,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; sour"), Diff(EQUAL,"ce"), Diff(DELETE,"/"), Diff(INSERT,"="), Diff(EQUAL,"grail"), Diff(DELETE,"A4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶"), Diff(INSERT,".geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@2c9e50bb]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@2c9e50bb]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=880; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=920; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶in precondition"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1477" _type="ExceptionCommand" date="Sun Jun 20 22:02:53 EDT 2021" starttimestamp="1624232406782" timestamp="8566462" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=320; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=320; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=650; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=225; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=690; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=225; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1478" _type="ConsoleOutput" date="Sun Jun 20 22:02:53 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="8566493" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=320; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=320; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=650; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=225; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=690; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=225; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"678d600d"), Diff(INSERT,"7fe40d30"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"678d600d"), Diff(INSERT,"7fe40d30"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"72354163"), Diff(INSERT,"2cd5d0dc"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"72354163"), Diff(INSERT,"2cd5d0dc"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"14be6cea"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"14be6cea"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"62e629f9"), Diff(INSERT,"4afbfd4e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"62e629f9"), Diff(INSERT,"4afbfd4e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6ee7b0a0"), Diff(INSERT,"1529f4ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6ee7b0a0"), Diff(INSERT,"1529f4ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@5"), Diff(DELETE,"0baaef"), Diff(INSERT,"599b8a"), Diff(EQUAL,"e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@5"), Diff(DELETE,"0baaef"), Diff(INSERT,"599b8a"), Diff(EQUAL,"e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"8"), Diff(INSERT,"14"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"3681da46"), Diff(INSERT,"17f895e5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"3681da46]¶in precondition"), Diff(INSERT,"17f895e5]"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"Lets Go"), Diff(INSERT,"400"), Diff(EQUAL,"; newValue="), Diff(INSERT,"670"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"MontyString@3681da46"), Diff(INSERT,"RotatingLine@7fe40d30"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"Y"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"Lets Go"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue="), Diff(DELETE,"Quest?"), Diff(INSERT,"270"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"MontyString@2c9e50bb]¶in precondition"), Diff(INSERT,"RotatingLine@7fe40d30]"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"Quest?"), Diff(INSERT,"400"), Diff(EQUAL,"; newValue="), Diff(INSERT,"670"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"MontyString@2c9e50bb"), Diff(INSERT,"RotatingLine@2cd5d0dc"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"Y"), Diff(EQUAL,"; oldValue="), Diff(INSERT,"470"), Diff(EQUAL,"; newValue="), Diff(DELETE,"Grail"), Diff(INSERT,"270"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"MontyString@3681da46]¶in precondition"), Diff(INSERT,"RotatingLine@2cd5d0dc]"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"67"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"678d600d"), Diff(INSERT,"14be6cea"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue="), Diff(DELETE,"4"), Diff(INSERT,"2"), Diff(EQUAL,"70; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"678d600d"), Diff(INSERT,"14be6cea"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"67"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"otatingLine@72354163"), Diff(INSERT,"estrictedLine@4afbfd4e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"47"), Diff(INSERT,"52"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"47"), Diff(INSERT,"32"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"otatingLine@72354163"), Diff(INSERT,"estrictedLine@4afbfd4e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"67"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"otating"), Diff(INSERT,"estricted"), Diff(EQUAL,"Line@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"1529f4ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"47"), Diff(INSERT,"52"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"47"), Diff(INSERT,"32"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"otating"), Diff(INSERT,"estricted"), Diff(EQUAL,"Line@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"1529f4ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"40"), Diff(INSERT,"38"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"90"), Diff(INSERT,"65"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"RestrictedLine@62e629f9"), Diff(INSERT,"CharHeads@5599b8ae"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"520"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue="), Diff(DELETE,"520"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"RestrictedLine@62e629f9"), Diff(INSERT,"CharHeads@5599b8ae"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=4"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"0; newValue="), Diff(INSERT,"6"), Diff(EQUAL,"9"), Diff(DELETE,"0"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"RestrictedLine@6ee7b0a0"), Diff(INSERT,"MontyString@17f895e5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"520"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue="), Diff(DELETE,"520"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"RestrictedLine@6ee7b0a0]"), Diff(INSERT,"MontyString@17f895e5]¶in precondition"), Diff(EQUAL,"¶java."), Diff(DELETE,"beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=880; propagationId=null; source=grail.geometryFigs.CharHeads@50baaefe]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFig"), Diff(INSERT,"lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTool"), Diff(EQUAL,"s."), Diff(DELETE,"C"), Diff(INSERT,"s"), Diff(EQUAL,"har"), Diff(DELETE,"Heads@50baaefe]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=920; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶in precondition"), Diff(INSERT,"ed.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1480" _type="PauseCommand" date="Sun Jun 20 22:03:00 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="8573660">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7167]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1479" _type="ShellCommand" date="Sun Jun 20 22:03:00 EDT 2021" starttimestamp="1624232406782" timestamp="8573660" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1484" _type="PauseCommand" date="Sun Jun 20 22:05:39 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="8732744">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11660]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1483" _type="RunCommand" date="Sun Jun 20 22:05:39 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8732744" type="Run" />
  <Command __id="1485" _type="RunCommand" date="Sun Jun 20 22:05:39 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="8732744" type="Run" />
  <Command __id="1486" _type="ShellCommand" date="Sun Jun 20 22:05:39 EDT 2021" starttimestamp="1624232406782" timestamp="8733088" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1487" _type="ShellCommand" date="Sun Jun 20 22:05:40 EDT 2021" starttimestamp="1624232406782" timestamp="8733923" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1489" _type="PauseCommand" date="Sun Jun 20 22:09:45 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="8978439">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[244516]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1488" _type="ShellCommand" date="Sun Jun 20 22:09:45 EDT 2021" starttimestamp="1624232406782" timestamp="8978439" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1491" _type="PauseCommand" date="Sun Jun 20 22:10:24 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="9017584">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[39145]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1490" _type="ShellCommand" date="Sun Jun 20 22:10:24 EDT 2021" starttimestamp="1624232406782" timestamp="9017584" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1089" _type="Insert" date="Sun Jun 20 20:52:43 EDT 2021" docASTNodeCount="86" docActiveCodeLength="717" docExpressionCount="54" docLength="717" length="24" offset="474" repeat="22" starttimestamp="1624232406782" timestamp="4357044" timestamp2="4364289">
    <text><![CDATA[
		waitState = waitType;]]></text>
  </DocumentChange>
  <Command __id="1135" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:53:07 EDT 2021" docASTNodeCount="1645" docActiveCodeLength="11229" docExpressionCount="1065" docLength="11587" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4380496">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <DocumentChange __id="1143" _type="Insert" date="Sun Jun 20 20:53:14 EDT 2021" docASTNodeCount="1646" docActiveCodeLength="11234" docExpressionCount="1066" docLength="11592" length="5" offset="11503" repeat="5" starttimestamp="1624232406782" timestamp="4388053" timestamp2="4389066">
    <text><![CDATA[, tru]]></text>
  </DocumentChange>
  <DocumentChange __id="1154" _type="Insert" date="Sun Jun 20 20:53:17 EDT 2021" docASTNodeCount="1646" docActiveCodeLength="11235" docExpressionCount="1066" docLength="11593" length="1" offset="11508" starttimestamp="1624232406782" timestamp="4391110">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="1159" _type="Insert" date="Sun Jun 20 20:53:49 EDT 2021" docASTNodeCount="1646" docActiveCodeLength="11238" docExpressionCount="1066" docLength="11596" length="3" offset="11566" starttimestamp="1624232406782" timestamp="4422323">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1171" _type="Replace" date="Sun Jun 20 20:54:16 EDT 2021" docASTNodeCount="1652" docActiveCodeLength="11314" docExpressionCount="1071" docLength="11672" endLine="400" insertionLength="78" int_docASTNodeCount="1646" int_docActiveCodeLength="11236" int_docExpressionCount="1066" int_docLength="11594" length="2" offset="11567" startLine="400" starttimestamp="1624232406782" timestamp="4449912">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();]]></insertedText>
  </DocumentChange>
  <Command __id="1178" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:56:22 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4575263">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="1213" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:57:23 EDT 2021" docASTNodeCount="1652" docActiveCodeLength="11314" docExpressionCount="1071" docLength="11672" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4636682">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator()"), Diff(INSERT,", true"), Diff(EQUAL,"));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	"), Diff(INSERT,"	BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	"), Diff(EQUAL,"}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import AnimationMethods.SceneLockedAnimationCommand;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	

	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	

	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	

	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	public synchronized void lockstepGuard() {
		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <Command __id="1216" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 20:57:47 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4661077">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="1274" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:13 EDT 2021" docASTNodeCount="42" docActiveCodeLength="278" docExpressionCount="26" docLength="278" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4927048">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶@Tags(Comp301Tags.ANIMATOR)¶public interface BridgeSceneAnimator {¶	¶	public void animateAvatar(Avatars anAvatar);¶¶	void animateGuard(Avatars anAvatar);¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1277" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:15 EDT 2021" docASTNodeCount="165" docActiveCodeLength="981" docExpressionCount="114" docLength="981" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4929115">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶@Tags(Comp301Tags.ANIMATOR)¶public class ABridgeSceneAnimator implements BridgeSceneAnimator {¶	static final int START = 0,¶					MOVE_BY = 10,¶					MARCH_TIME = 500;¶	@Override¶	public void  animateAvatar(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    	ThreadSupport.sleep(MARCH_TIME);¶    	anAvatar.moveAvatar(MOVE_BY, START);    	¶    	i++;¶    	}¶	}¶	@Override¶	public void  animateGuard(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    		if(i%2 == 0) {	¶		    	ThreadSupport.sleep(MARCH_TIME);¶		    	anAvatar.getArms().getRightLine().rotate(-7);¶		    	anAvatar.getArms().getLeftLine().rotate(7);¶		    	i++;¶    			}¶    		ThreadSupport.sleep(MARCH_TIME);¶	    	anAvatar.getArms().getRightLine().rotate(7);¶	    	anAvatar.getArms().getLeftLine().rotate(-7);¶	    	i++;¶    	}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1284" _type="Delete" date="Sun Jun 20 21:02:20 EDT 2021" docASTNodeCount="164" docActiveCodeLength="978" docExpressionCount="113" docLength="978" endLine="10" length="3" offset="314" repeat="3" startLine="10" starttimestamp="1624232406782" timestamp="4933922" timestamp2="4934275">
    <text><![CDATA[500]]></text>
  </DocumentChange>
  <DocumentChange __id="1291" _type="Insert" date="Sun Jun 20 21:02:23 EDT 2021" docASTNodeCount="165" docActiveCodeLength="979" docExpressionCount="114" docLength="979" length="1" offset="314" starttimestamp="1624232406782" timestamp="4937153">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="1294" _type="Insert" date="Sun Jun 20 21:02:26 EDT 2021" docASTNodeCount="165" docActiveCodeLength="981" docExpressionCount="114" docLength="981" length="2" offset="315" repeat="2" starttimestamp="1624232406782" timestamp="4940037" timestamp2="4940168">
    <text><![CDATA[50]]></text>
  </DocumentChange>
  <Command __id="1299" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:30 EDT 2021" docASTNodeCount="104" docActiveCodeLength="790" docExpressionCount="64" docLength="832" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4943993">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶@Tags(Comp301Tags.ANIMATING_COMMAND)¶¶public class BridgeSceneAnimationCommand implements Runnable {¶	¶	Avatars anAvatar;¶	static BridgeSceneAnimator anAnimator;¶	boolean waitState = false;¶	¶	¶	public BridgeSceneAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		anAvatar = montyAvatar;¶		//anAnimator = new ABridgeSceneAnimator();¶		anAnimator = montyAnimator;¶		waitState = waitCommand;¶	}¶	¶¶	@Override¶	public void run() {¶		if(waitState) {¶			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();¶			anAnimator.animateAvatar(anAvatar);¶		}¶		anAnimator.animateAvatar(anAvatar);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1302" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:33 EDT 2021" docASTNodeCount="219" docActiveCodeLength="1479" docExpressionCount="94" docLength="2014" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4946433">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveAvatars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.beans.PropertyChangeListener;¶¶import grail.geometryFigs.MovingL;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.annotations.Visible;¶¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public interface FiveAvatars {¶	¶	public Avatars getArthur();¶	public Avatars getGalahad();¶	public Avatars getGuard();¶	public Avatars getLancelot();¶	public Avatars getRobin();¶	public Gorges getGorge();¶	public MovingL getGuardArea();¶	public MovingL getKnightArea();¶	public void approach(Avatars anAvatar);¶	public boolean getOccupied();¶	public boolean getKnightTurn();¶	public void say(String question);¶	public void passed();¶	public void failed();¶	public void scroll(int moveInX, int moveInY);¶	@Visible(false)¶	public Avatars getInteractingKnight();¶	public boolean prePassed();¶	public boolean preSay();¶	public boolean preApproach();¶	public void approach(String name);¶	public boolean preFailed();¶	public void updateSpeakTurn(boolean newTurn);¶	public  void addPropertyChangeListener(PropertyChangeListener aListener);¶	public void newOccupation(boolean newState);¶//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {¶//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	¶//	}¶	void asynchronousArthur();¶	void asynchronousGalahad();¶	void asynchronousLancelot();¶	void asynchronousRobin();¶	void asynchronousGuard();¶	void waitingArthur();¶	void waitingGalahad();¶	void waitingLancelot();¶	void waitingRobin();¶	void startAnimation();¶	void lockstepArthur();¶	void lockstepGalahad();¶	void lockstepLancelot();¶"), Diff(INSERT,"	void lockstepRobin();¶"), Diff(EQUAL,"}")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.beans.PropertyChangeListener;

import grail.geometryFigs.MovingL;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.annotations.Visible;

@Tags(Comp301Tags.BRIDGE_SCENE)

public interface FiveAvatars {
	
	public Avatars getArthur();
	public Avatars getGalahad();
	public Avatars getGuard();
	public Avatars getLancelot();
	public Avatars getRobin();
	public Gorges getGorge();
	public MovingL getGuardArea();
	public MovingL getKnightArea();
	public void approach(Avatars anAvatar);
	public boolean getOccupied();
	public boolean getKnightTurn();
	public void say(String question);
	public void passed();
	public void failed();
	public void scroll(int moveInX, int moveInY);
	@Visible(false)
	public Avatars getInteractingKnight();
	public boolean prePassed();
	public boolean preSay();
	public boolean preApproach();
	public void approach(String name);
	public boolean preFailed();
	public void updateSpeakTurn(boolean newTurn);
	public  void addPropertyChangeListener(PropertyChangeListener aListener);
	public void newOccupation(boolean newState);
//	public static void addPropertyChangeListener(PropertyChangeListener aListener) {
//		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
//		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
//		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);	
//	}
	void asynchronousArthur();
	void asynchronousGalahad();
	void asynchronousLancelot();
	void asynchronousRobin();
	void asynchronousGuard();
	void waitingArthur();
	void waitingGalahad();
	void waitingLancelot();
	void waitingRobin();
	void startAnimation();
	void lockstepArthur();
	void lockstepGalahad();
	void lockstepLancelot();
	void lockstepRobin();
}]]></snapshot>
  </Command>
  <Command __id="1305" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:35 EDT 2021" docASTNodeCount="56" docActiveCodeLength="409" docExpressionCount="30" docLength="409" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4948646">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneGuardAnimation.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶¶public class BridgeSceneGuardAnimation implements Runnable {¶¶	Avatars anAvatar;¶	BridgeSceneAnimator anAnimator;¶	¶	¶	public BridgeSceneGuardAnimation(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {¶		anAvatar = montyAvatar;¶		anAnimator = montyAnimator;¶	}¶	@Override¶	public void run() {¶		anAnimator.animateGuard(anAvatar);¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1308" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:38 EDT 2021" docASTNodeCount="23" docActiveCodeLength="205" docExpressionCount="16" docLength="205" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4951788">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneLockedAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATING_ANIMATOR)¶public class ABridgeSceneLockedAnimator extends ABridgeSceneAnimator {¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1311" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:40 EDT 2021" docASTNodeCount="86" docActiveCodeLength="717" docExpressionCount="54" docLength="717" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4953269">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/SceneLockedAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)¶public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {¶	¶	boolean waitState = false;¶¶	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator"), Diff(INSERT,", boolean waitType"), Diff(EQUAL,") {¶		super(montyAvatar, montyAnimator);¶		"), Diff(INSERT,"waitState = waitType;¶		"), Diff(EQUAL,"¶	}¶	¶	public void run() {¶		if(waitState) {¶			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();¶			anAnimator.animateGuard(anAvatar);¶		}¶		anAnimator.animateGuard(anAvatar);¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.COORDINATED_ANIMATING_COMMAND)
public class SceneLockedAnimationCommand extends BridgeSceneGuardAnimation {
	
	boolean waitState = false;

	public SceneLockedAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitType) {
		super(montyAvatar, montyAnimator);
		waitState = waitType;
		
	}
	
	public void run() {
		if(waitState) {
			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();
			anAnimator.animateGuard(anAvatar);
		}
		anAnimator.animateGuard(anAvatar);
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="1314" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:43 EDT 2021" docASTNodeCount="42" docActiveCodeLength="278" docExpressionCount="26" docLength="278" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4956950">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶@Tags(Comp301Tags.ANIMATOR)¶public interface BridgeSceneAnimator {¶	¶	public void animateAvatar(Avatars anAvatar);¶¶	void animateGuard(Avatars anAvatar);¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1317" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:45 EDT 2021" docASTNodeCount="165" docActiveCodeLength="981" docExpressionCount="114" docLength="981" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4958365">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/ABridgeSceneAnimator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶@Tags(Comp301Tags.ANIMATOR)¶public class ABridgeSceneAnimator implements BridgeSceneAnimator {¶	static final int START = 0,¶					MOVE_BY = 10,¶					MARCH_TIME = "), Diff(INSERT,"2"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,"0;¶	@Override¶	public void  animateAvatar(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    	ThreadSupport.sleep(MARCH_TIME);¶    	anAvatar.moveAvatar(MOVE_BY, START);    	¶    	i++;¶    	}¶	}¶	@Override¶	public void  animateGuard(Avatars anAvatar) {¶		int i = START;¶    	while (i < MOVE_BY) {¶    		if(i%2 == 0) {	¶		    	ThreadSupport.sleep(MARCH_TIME);¶		    	anAvatar.getArms().getRightLine().rotate(-7);¶		    	anAvatar.getArms().getLeftLine().rotate(7);¶		    	i++;¶    			}¶    		ThreadSupport.sleep(MARCH_TIME);¶	    	anAvatar.getArms().getRightLine().rotate(7);¶	    	anAvatar.getArms().getLeftLine().rotate(-7);¶	    	i++;¶    	}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package AnimationMethods;

import grail.compositeFigs.Avatars;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.misc.ThreadSupport;
@Tags(Comp301Tags.ANIMATOR)
public class ABridgeSceneAnimator implements BridgeSceneAnimator {
	static final int START = 0,
					MOVE_BY = 10,
					MARCH_TIME = 250;
	@Override
	public void  animateAvatar(Avatars anAvatar) {
		int i = START;
    	while (i < MOVE_BY) {
    	ThreadSupport.sleep(MARCH_TIME);
    	anAvatar.moveAvatar(MOVE_BY, START);    	
    	i++;
    	}
	}
	@Override
	public void  animateGuard(Avatars anAvatar) {
		int i = START;
    	while (i < MOVE_BY) {
    		if(i%2 == 0) {	
		    	ThreadSupport.sleep(MARCH_TIME);
		    	anAvatar.getArms().getRightLine().rotate(-7);
		    	anAvatar.getArms().getLeftLine().rotate(7);
		    	i++;
    			}
    		ThreadSupport.sleep(MARCH_TIME);
	    	anAvatar.getArms().getRightLine().rotate(7);
	    	anAvatar.getArms().getLeftLine().rotate(-7);
	    	i++;
    	}
	}

}
]]></snapshot>
  </Command>
  <Command __id="1320" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:48 EDT 2021" docASTNodeCount="104" docActiveCodeLength="790" docExpressionCount="64" docLength="832" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4961447">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneAnimationCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶@Tags(Comp301Tags.ANIMATING_COMMAND)¶¶public class BridgeSceneAnimationCommand implements Runnable {¶	¶	Avatars anAvatar;¶	static BridgeSceneAnimator anAnimator;¶	boolean waitState = false;¶	¶	¶	public BridgeSceneAnimationCommand(Avatars montyAvatar, BridgeSceneAnimator montyAnimator, boolean waitCommand) {¶		anAvatar = montyAvatar;¶		//anAnimator = new ABridgeSceneAnimator();¶		anAnimator = montyAnimator;¶		waitState = waitCommand;¶	}¶	¶¶	@Override¶	public void run() {¶		if(waitState) {¶			BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().waitForProceed();¶			anAnimator.animateAvatar(anAvatar);¶		}¶		anAnimator.animateAvatar(anAvatar);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1323" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:02:52 EDT 2021" docASTNodeCount="56" docActiveCodeLength="409" docExpressionCount="30" docLength="409" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4965419">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/AnimationMethods/BridgeSceneGuardAnimation.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package AnimationMethods;¶¶import grail.compositeFigs.Avatars;¶¶public class BridgeSceneGuardAnimation implements Runnable {¶¶	Avatars anAvatar;¶	BridgeSceneAnimator anAnimator;¶	¶	¶	public BridgeSceneGuardAnimation(Avatars montyAvatar, BridgeSceneAnimator montyAnimator) {¶		anAvatar = montyAvatar;¶		anAnimator = montyAnimator;¶	}¶	@Override¶	public void run() {¶		anAnimator.animateGuard(anAvatar);¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1326" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 21:03:08 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="4981722">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="1493" _type="PauseCommand" date="Sun Jun 20 22:10:33 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="9026291">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8707]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1492" _type="ShellCommand" date="Sun Jun 20 22:10:33 EDT 2021" starttimestamp="1624232406782" timestamp="9026291" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1495" _type="MoveCaretCommand" caretOffset="10723" date="Sun Jun 20 22:10:33 EDT 2021" docOffset="11645" starttimestamp="1624232406782" timestamp="9026619" />
  <Command __id="1497" _type="PauseCommand" date="Sun Jun 20 22:21:58 EDT 2021" range="10m-20m" starttimestamp="1624232406782" timestamp="9712051">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[685432]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1496" _type="MoveCaretCommand" caretOffset="4544" date="Sun Jun 20 22:21:58 EDT 2021" docOffset="5466" starttimestamp="1624232406782" timestamp="9712051" />
  <Command __id="1499" _type="PauseCommand" date="Sun Jun 20 22:22:06 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="9719708">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7657]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1500" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.open.editor" date="Sun Jun 20 22:22:06 EDT 2021" starttimestamp="1624232406782" timestamp="9719748" />
  <Command __id="1501" _type="SelectTextCommand" caretOffset="362" date="Sun Jun 20 22:22:06 EDT 2021" end="362" start="352" starttimestamp="1624232406782" timestamp="9719948" />
  <Command __id="1503" _type="PauseCommand" date="Sun Jun 20 22:22:12 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="9726010">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6062]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1502" _type="ShellCommand" date="Sun Jun 20 22:22:12 EDT 2021" starttimestamp="1624232406782" timestamp="9726010" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1505" _type="PauseCommand" date="Sun Jun 20 22:22:14 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="9727902">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1892]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1504" _type="ShellCommand" date="Sun Jun 20 22:22:14 EDT 2021" starttimestamp="1624232406782" timestamp="9727902" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1507" _type="MoveCaretCommand" caretOffset="1812" date="Sun Jun 20 22:22:15 EDT 2021" docOffset="2302" starttimestamp="1624232406782" timestamp="9728330" />
  <Command __id="1509" _type="PauseCommand" date="Sun Jun 20 22:23:32 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="9805660">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[77330]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1508" _type="ShellCommand" date="Sun Jun 20 22:23:32 EDT 2021" starttimestamp="1624232406782" timestamp="9805660" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1511" _type="PauseCommand" date="Sun Jun 20 22:23:42 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="9815957">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10297]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1510" _type="ShellCommand" date="Sun Jun 20 22:23:42 EDT 2021" starttimestamp="1624232406782" timestamp="9815957" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1513" _type="SelectTextCommand" caretOffset="570" date="Sun Jun 20 22:23:43 EDT 2021" end="570" start="483" starttimestamp="1624232406782" timestamp="9816386" />
  <Command __id="1515" _type="PauseCommand" date="Sun Jun 20 22:24:49 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="9882238">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[65852]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1514" _type="ShellCommand" date="Sun Jun 20 22:24:49 EDT 2021" starttimestamp="1624232406782" timestamp="9882238" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1517" _type="PauseCommand" date="Sun Jun 20 22:24:52 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="9885643">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3405]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1516" _type="ShellCommand" date="Sun Jun 20 22:24:52 EDT 2021" starttimestamp="1624232406782" timestamp="9885643" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1519" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 22:24:52 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="9885989" />
  <Command __id="1521" _type="PauseCommand" date="Sun Jun 20 22:26:39 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="9992733">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[106744]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1522" _type="MoveCaretCommand" caretOffset="4544" date="Sun Jun 20 22:26:39 EDT 2021" docOffset="5466" starttimestamp="1624232406782" timestamp="9992889" />
  <Command __id="1527" _type="PauseCommand" date="Sun Jun 20 22:30:42 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="10235764">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4033]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1526" _type="RunCommand" date="Sun Jun 20 22:30:42 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="10235764" type="Run" />
  <Command __id="1528" _type="RunCommand" date="Sun Jun 20 22:30:42 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="10235764" type="Run" />
  <Command __id="1529" _type="ShellCommand" date="Sun Jun 20 22:30:43 EDT 2021" starttimestamp="1624232406782" timestamp="10236309" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1531" _type="PauseCommand" date="Sun Jun 20 22:30:57 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="10250948">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14639]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1530" _type="ExceptionCommand" date="Sun Jun 20 22:30:57 EDT 2021" starttimestamp="1624232406782" timestamp="10250948" type="Exception">
    <exceptionString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1532" _type="ConsoleOutput" date="Sun Jun 20 22:30:57 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="10251050" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@7fe40d30]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=270; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=320; propagationId=null; source=grail.geometryFigs.RestrictedLine@4afbfd4e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=670; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=320; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=650; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=225; propagationId=null; source=grail.geometryFigs.CharHeads@5599b8ae]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=690; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=225; propagationId=null; source=grail.geometryFigs.MontyString@17f895e5]¶in precondition¶java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71"), Diff(INSERT,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1534" _type="PauseCommand" date="Sun Jun 20 22:31:08 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="10262012">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10962]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1533" _type="ShellCommand" date="Sun Jun 20 22:31:08 EDT 2021" starttimestamp="1624232406782" timestamp="10262012" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1536" _type="PauseCommand" date="Sun Jun 20 22:34:16 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="10449493">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[187481]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1537" _type="MoveCaretCommand" caretOffset="4544" date="Sun Jun 20 22:34:16 EDT 2021" docOffset="5466" starttimestamp="1624232406782" timestamp="10449750" />
  <Command __id="1539" _type="PauseCommand" date="Sun Jun 20 22:36:58 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="10611678">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[161928]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1538" _type="ShellCommand" date="Sun Jun 20 22:36:58 EDT 2021" starttimestamp="1624232406782" timestamp="10611678" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1541" _type="PauseCommand" date="Sun Jun 20 22:37:06 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="10619585">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7907]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1540" _type="ConsoleOutput" date="Sun Jun 20 22:37:06 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="10619585" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 22:37:06 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶java.lang.AssertionError: 14 checks out of 34 fail. See console error messages%0.5882352941176471¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp401f16.assignment10.testcases.AssertingBridgeSceneDynamicTestCase.checkOutput(AssertingBridgeSceneDynamicTestCase.java:477)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.doTest(BridgeSceneDynamicTestCase.java:93)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 22:37:06 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1543" _type="PauseCommand" date="Sun Jun 20 22:37:08 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="10621521">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1936]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1542" _type="ConsoleOutput" date="Sun Jun 20 22:37:08 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="10621521" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 22:37:08 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 22:37:08 EDT 2021
End O(n2) inter- and intra class method calls:Sun Jun 20 22:37:08 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and running first pass check"), Diff(INSERT,"size:123¶Running second pass checks Sun Jun 20 22:37:08 EDT 2021¶Start O(n2) inter- and intra class method calls:Sun Jun 20 22:37:08 EDT 2021¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Sun Jun 20 22:37:0"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1545" _type="PauseCommand" date="Sun Jun 20 22:37:09 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="10622951">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1430]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1544" _type="ConsoleOutput" date="Sun Jun 20 22:37:09 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="10622951" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 22:37:09 EDT 2021
Generating checks:Sun Jun 20 22:37:09 EDT 2021
Finished Generating checks:Sun Jun 20 22:37:09 EDT 2021
Generating externals:Sun Jun 20 22:37:09 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Sun Jun 20 22:37:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Sun Jun 20 22:37:09 EDT 2021¶Finished Generating check"), Diff(EQUAL,"s:Sun Jun 20 22:37:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Sun Jun 20 22:37:0"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1546" _type="ConsoleOutput" date="Sun Jun 20 22:37:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="10623449" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 22:37:10 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 22:37:09 EDT 2021¶Generating checks:Sun Jun 20 22:37:09 EDT 2021¶Finished Generating checks:Sun Jun 20 22:37:09 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 22:37:"), Diff(INSERT,"1"), Diff(EQUAL,"0"), Diff(DELETE,"9"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1547" _type="ConsoleOutput" date="Sun Jun 20 22:37:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="10623636" type="ConsoleOutput">
    <outputString><![CDATA[
SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generat"), Diff(INSERT,"¶SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Miss"), Diff(EQUAL,"ing "), Diff(DELETE,"ex"), Diff(INSERT,"in"), Diff(EQUAL,"ter"), Diff(DELETE,"nals:Sun Jun 20 22:37:10 EDT 2021"), Diff(INSERT,"face java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1549" _type="PauseCommand" date="Sun Jun 20 22:37:49 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="10662724">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[39088]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1548" _type="ShellCommand" date="Sun Jun 20 22:37:49 EDT 2021" starttimestamp="1624232406782" timestamp="10662724" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1551" _type="PauseCommand" date="Sun Jun 20 22:38:28 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="10702052">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[39328]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1550" _type="ShellCommand" date="Sun Jun 20 22:38:28 EDT 2021" starttimestamp="1624232406782" timestamp="10702052" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1553" _type="PauseCommand" date="Sun Jun 20 22:43:00 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="10973688">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[271636]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1552" _type="ShellCommand" date="Sun Jun 20 22:43:00 EDT 2021" starttimestamp="1624232406782" timestamp="10973688" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1555" _type="PauseCommand" date="Sun Jun 20 22:43:05 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="10978661">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4973]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1554" _type="MoveCaretCommand" caretOffset="753" date="Sun Jun 20 22:43:05 EDT 2021" docOffset="1675" starttimestamp="1624232406782" timestamp="10978661" />
  <Command __id="1557" _type="PauseCommand" date="Sun Jun 20 22:45:31 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="11124413">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[145752]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1556" _type="MoveCaretCommand" caretOffset="7571" date="Sun Jun 20 22:45:31 EDT 2021" docOffset="8493" starttimestamp="1624232406782" timestamp="11124413" />
  <Command __id="1559" _type="PauseCommand" date="Sun Jun 20 22:45:32 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11126115">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1702]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1560" _type="InsertStringCommand" date="Sun Jun 20 22:45:32 EDT 2021" starttimestamp="1624232406782" timestamp="11126121" timestamp2="11126121">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1562" _type="PauseCommand" date="Sun Jun 20 22:45:53 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="11146627">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[20506]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1563" _type="InsertStringCommand" date="Sun Jun 20 22:45:53 EDT 2021" starttimestamp="1624232406782" timestamp="11146630" timestamp2="11146630">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1565" _type="InsertStringCommand" date="Sun Jun 20 22:45:53 EDT 2021" starttimestamp="1624232406782" timestamp="11147122" timestamp2="11147122">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1567" _type="InsertStringCommand" date="Sun Jun 20 22:45:53 EDT 2021" starttimestamp="1624232406782" timestamp="11147168" timestamp2="11147168">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1569" _type="InsertStringCommand" date="Sun Jun 20 22:45:54 EDT 2021" starttimestamp="1624232406782" timestamp="11147305" timestamp2="11147305">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1571" _type="InsertStringCommand" date="Sun Jun 20 22:45:54 EDT 2021" starttimestamp="1624232406782" timestamp="11147440" timestamp2="11147440">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1573" _type="InsertStringCommand" date="Sun Jun 20 22:45:54 EDT 2021" starttimestamp="1624232406782" timestamp="11147687" timestamp2="11147687">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1575" _type="InsertStringCommand" date="Sun Jun 20 22:45:55 EDT 2021" starttimestamp="1624232406782" timestamp="11148289" timestamp2="11148289">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1576" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 22:45:55 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="11148299" />
  <Command __id="1494" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:10:33 EDT 2021" docASTNodeCount="1652" docActiveCodeLength="11314" docExpressionCount="1071" docLength="11672" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="9026444">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="1498" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:22:06 EDT 2021" docASTNodeCount="164" docActiveCodeLength="1099" docExpressionCount="96" docLength="1099" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="9719708">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/Avatars.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;

import java.beans.PropertyChangeListener;

import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.StringShape;
import tags301.Comp301Tags;
import util.annotations.Tags;
@Tags(Comp301Tags.AVATAR)

public interface Avatars {
	
	public StringShape getStringShape();
	public ImageShapes getHead();
	public AngleShapes getArms();
	public AngleShapes getLegs();
	public MovingL getTorso();
	public void combineFigs(int commonX, int commonY);
	public void moveAvatar(int newX, int newY);
	public void move(int newX, int newY);
	public void scale(double scaleBy);
	public void armLegMiniFact();
	public static void addPropertyChangeListener(Avatars anAvatar, PropertyChangeListener aListener) {
		AngleShapes.addPropertyChangeListener(anAvatar.getArms(), aListener);
		AngleShapes.addPropertyChangeListener(anAvatar.getLegs(), aListener);
		anAvatar.getTorso().addPropertyChangeListener(aListener);
		anAvatar.getHead().addPropertyChangeListener(aListener);
		anAvatar.getStringShape().addPropertyChangeListener(aListener);
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="1506" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:22:14 EDT 2021" docASTNodeCount="836" docActiveCodeLength="4766" docExpressionCount="593" docLength="5303" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="9728117">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/MontyAvatar.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeListener;
import java.io.IOException;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import grail.extras.Tables;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MontyString;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.StringShape;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.AVATAR)


public class MontyAvatar implements Avatars {
	
	static final double
		INITIAL_LIMB_RAD = 20,
		USUAL_LLINE_ANG = (Math.PI/4),
		USUAL_RLINE_ANG = 3*(Math.PI/4),
		TORSO_ANGLE = Math.PI/2,
		TORSO_LENGTH = 50;
		;
	static final int
		ORIG_X = 0,
		ORIG_Y = 0;
	static final String AVATAR_SAYS = "Lets Go";
	
	StringShape textSpoken;
	ImageShapes character;
	AngleShapes arms;
	AngleShapes legs;
	MovingL torso;
	
	public MontyAvatar(ImageShapes newHead) {
		character = newHead;
		int attachPointX = character.getX() + ((character.getWidth())/2);
		int attachPointY = character.getY() + (character.getHeight());
		armLegMiniFact();
		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);
		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);
		this.combineFigs(attachPointX, attachPointY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	@Override
	public void armLegMiniFact() {
		arms = new ArmsAndLegs(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);
//		try {
//			legs = new RealisticLegs(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);
	}
	@Override
	public StringShape getStringShape() {
		return textSpoken;
	}
	@Override
	public ImageShapes getHead() {
		return character;
	}
	@Override
	public AngleShapes getArms() {
		return arms;
	}
	@Override
	public AngleShapes getLegs() {
		return legs;
	}
	@Override
	public MovingL getTorso() {
		return torso;
	}
	@Override
	public void combineFigs(int comunX, int comunY) {
			
		arms.getLeftLine().setX(comunX);
		arms.getLeftLine().setY(comunY);
		arms.getRightLine().setX(comunX);
		arms.getRightLine().setY(comunY);
		
		torso.setX(comunX);
		torso.setY(comunY);
		
		int lowTorsoY = comunY + torso.getHeight();
		int lowTorsoX = comunX + torso.getWidth();
		legs.getLeftLine().setX(lowTorsoX);
		legs.getLeftLine().setY(lowTorsoY);
		legs.getRightLine().setX(lowTorsoX);
		legs.getRightLine().setY(lowTorsoY);
		
		
	}
	@Override
	public void moveAvatar(int newX, int newY) {
		int newAttachX = arms.getLeftLine().getX() + newX;
		int newAttachY = arms.getLeftLine().getY() + newY;
		combineFigs(newAttachX, newAttachY);
		int newPicLocX = character.getX() + newX;
		int newPicLocY = character.getY() + newY;
		character.setX(newPicLocX);
		character.setY(newPicLocY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	@Override
	public void move(int newX, int newY) {
		//int newAttachX = arms.getLeftLine().getX() + newX;
		//int newAttachY = arms.getLeftLine().getY() + newY;
		combineFigs(newX, newY);
		//int newPicLocX = character.getX() + newX;
		//int newPicLocY = character.getY() + newY;
		character.setX(newX - (character.getWidth())/2);
		character.setY(newY - character.getHeight());
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	
	
	@Override
	public void scale(double scaleBy) {
		double newRadL = arms.getLeftLine().getRadius()*scaleBy;
		double newRadR = arms.getRightLine().getRadius()*scaleBy;
		double newRadTo = torso.getRadius()*scaleBy;
		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());
		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;
		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;
		int newHeadHeight = (int)(character.getHeight()*scaleBy);
		int newHeadWidth = (int) (character.getWidth()*scaleBy);
		character.setHeight(newHeadHeight);
		character.setWidth(newHeadWidth);
		int attachPointX = character.getX() + ((character.getWidth())/2);
		int attachPointY = character.getY() + (character.getHeight());
		arms.getLeftLine().setRadius(newRadL);
		arms.getRightLine().setRadius(newRadR);
		legs.getLeftLine().setRadius(newRadLegL);
		legs.getRightLine().setRadius(newRadLegR);
		torso.setRadius(newRadTo);
		legs.moveLimbs(ORIG_X, legAttach);
		this.combineFigs(attachPointX, attachPointY);
		int stringX = character.getX() + character.getWidth();
		int stringY = character.getY();
		textSpoken.setX(stringX);
		textSpoken.setY(stringY);
	}
	
	//public static void addPropertyChangeListener(Avatars anAvatar, PropertyChangeListener aListener) {
	//	anAvatar.getArms().ad
	//}
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="1512" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:23:42 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1384" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="9816096">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/Alocatable.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.geometryFigs;

import java.beans.PropertyChangeEvent;

import java.beans.PropertyChangeListener;
import java.util.List;

import util.models.PropertyListenerRegisterer;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.compositeFigs.BridgeSceneFactory;
import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;

@Tags(Comp301Tags.LOCATABLE)
@PropertyNames({"X", "Y"})
@EditablePropertyNames({"X", "Y"})


public abstract class Alocatable implements Locatable {
	
	int x;
	int y;
	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();
	@Override
	public int getX() {
		return x;
	}

	@Override
	public int getY() {
		return y;
	}
	@Override
	public void setX(int newX) {
		int oldX = getX();
		x = newX;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", oldX,
				newX));
	}
	@Override
	public void setY(int newY) {
		int oldY = getY();
		y = newY;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,
				newY));
	}
	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 
		propertySupport.add(aListener);
	}
	@Override
	public List<PropertyChangeListener> getPropertyChangeListeners() {
		return propertySupport.getPropertyChangeListenerList();
	}

}
]]></snapshot>
  </Command>
  <Command __id="1518" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:24:52 EDT 2021" docASTNodeCount="307" docActiveCodeLength="1821" docExpressionCount="185" docLength="1896" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="9885789">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/AnObservableHelper.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.MVC;

	import java.beans.PropertyChangeEvent;


	import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

public class AnObservableHelper implements ObservableHelp {
		public static final int MAX_SIZE = 50;
		
		List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
		//PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];
		int size = 0;
		
		@Override
		public List<PropertyChangeListener> getPropertyChangeListenerList() {
			return contents;
		}
		@Override
		public int size() {
			return size;
		}
		@Override
		public PropertyChangeListener get (int index) {
			return contents.get(index);
		}
		
		@Override
		public boolean isFull() {
			return size == MAX_SIZE;

		}
		@Override
		public void add(PropertyChangeListener listener) {
			if (isFull())
				System.out.println("Adding item to a full collection");
			else {
				contents.add(size, listener);
				size++;
			}
		}
		
		@Override
		public void notifyAllListeners(PropertyChangeEvent event) {
			for (int index = 0; index < size(); index++) {			
				get(index).propertyChange(event);
			}
		}
	
		@Override
		public void remove(PropertyChangeListener element) {
			contents.remove(contents.indexOf(element));
			size--;
		}
		@Override
		public void remove(int startIndex) {
			shiftUp(startIndex);
			size--;
		}
		
		private void shiftUp(int startIndex) {
			for (int index = startIndex; index + 1 < size; index++)
				contents.set(index, contents.get(index + 1));
		}
		@Override
		public int indexOf(PropertyChangeListener element) {
			int index;
			for (index = 0; index < size && !element.equals(contents.get(index)); index++)
				;
			return index;
		}
		@Override
		public boolean member(PropertyChangeListener element) {
			return indexOf(element) < size;

		}
		@Override
		public void clear() {
			size = 0;
		}
	}


]]></snapshot>
  </Command>
  <Command __id="1520" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:26:39 EDT 2021" docASTNodeCount="1652" docActiveCodeLength="11314" docExpressionCount="1071" docLength="11672" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="9992733">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="1523" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:30:38 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="10231628">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="1535" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:34:16 EDT 2021" docASTNodeCount="1652" docActiveCodeLength="11314" docExpressionCount="1071" docLength="11672" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="10449493">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <DocumentChange __id="1558" _type="Insert" date="Sun Jun 20 22:45:32 EDT 2021" docASTNodeCount="1652" docActiveCodeLength="11317" docExpressionCount="1071" docLength="11675" length="3" offset="8493" starttimestamp="1624232406782" timestamp="11126115">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1561" _type="Insert" date="Sun Jun 20 22:45:53 EDT 2021" docASTNodeCount="1656" docActiveCodeLength="11327" docExpressionCount="1074" docLength="11685" length="10" offset="8496" repeat="10" starttimestamp="1624232406782" timestamp="11146627" timestamp2="11148944">
    <text><![CDATA[helper.add]]></text>
  </DocumentChange>
  <DocumentChange __id="1582" _type="Replace" date="Sun Jun 20 22:45:59 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" endLine="285" insertionLength="15" int_docASTNodeCount="1654" int_docActiveCodeLength="11324" int_docExpressionCount="1072" int_docLength="11682" length="3" offset="8503" startLine="285" starttimestamp="1624232406782" timestamp="11152820">
    <deletedText><![CDATA[add]]></deletedText>
    <insertedText><![CDATA[add(aListener);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1584" _type="Replace" date="Sun Jun 20 22:46:00 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11331" docExpressionCount="1075" docLength="11689" endLine="285" insertionLength="1" int_docASTNodeCount="1656" int_docActiveCodeLength="11330" int_docExpressionCount="1074" int_docLength="11688" length="9" offset="8507" startLine="285" starttimestamp="1624232406782" timestamp="11153461">
    <deletedText><![CDATA[aListener]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <Command __id="1581" _type="PauseCommand" date="Sun Jun 20 22:45:59 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11152812">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4513]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1580" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 22:45:59 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="11152812" />
  <Command __id="1583" _type="InsertStringCommand" date="Sun Jun 20 22:45:59 EDT 2021" starttimestamp="1624232406782" timestamp="11152867" timestamp2="11152867">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1585" _type="InsertStringCommand" date="Sun Jun 20 22:46:00 EDT 2021" starttimestamp="1624232406782" timestamp="11153465" timestamp2="11153465">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1587" _type="InsertStringCommand" date="Sun Jun 20 22:46:00 EDT 2021" starttimestamp="1624232406782" timestamp="11153812" timestamp2="11153812">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1589" _type="InsertStringCommand" date="Sun Jun 20 22:46:00 EDT 2021" starttimestamp="1624232406782" timestamp="11154031" timestamp2="11154031">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1591" _type="InsertStringCommand" date="Sun Jun 20 22:46:00 EDT 2021" starttimestamp="1624232406782" timestamp="11154165" timestamp2="11154165">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1593" _type="InsertStringCommand" date="Sun Jun 20 22:46:01 EDT 2021" starttimestamp="1624232406782" timestamp="11154373" timestamp2="11154373">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1595" _type="InsertStringCommand" date="Sun Jun 20 22:46:01 EDT 2021" starttimestamp="1624232406782" timestamp="11154525" timestamp2="11154525">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1598" _type="PauseCommand" date="Sun Jun 20 22:46:02 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11155899">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1374]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1597" _type="InsertStringCommand" date="Sun Jun 20 22:46:02 EDT 2021" starttimestamp="1624232406782" timestamp="11155899" timestamp2="11155899">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1600" _type="InsertStringCommand" date="Sun Jun 20 22:46:02 EDT 2021" starttimestamp="1624232406782" timestamp="11156124" timestamp2="11156124">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1602" _type="InsertStringCommand" date="Sun Jun 20 22:46:03 EDT 2021" starttimestamp="1624232406782" timestamp="11156416" timestamp2="11156416">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1607" _type="PauseCommand" date="Sun Jun 20 22:46:12 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11165477">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7110]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1606" _type="RunCommand" date="Sun Jun 20 22:46:12 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11165476" type="Run" />
  <Command __id="1608" _type="RunCommand" date="Sun Jun 20 22:46:12 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11165477" type="Run" />
  <Command __id="1610" _type="PauseCommand" date="Sun Jun 20 22:46:15 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11169135">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3658]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1611" _type="SelectTextCommand" caretOffset="190" date="Sun Jun 20 22:46:16 EDT 2021" end="190" start="181" starttimestamp="1624232406782" timestamp="11169409" />
  <Command __id="1613" _type="PauseCommand" date="Sun Jun 20 22:46:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11171397">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1988]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1612" _type="ShellCommand" date="Sun Jun 20 22:46:18 EDT 2021" starttimestamp="1624232406782" timestamp="11171397" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1615" _type="PauseCommand" date="Sun Jun 20 22:46:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11173924">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2527]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1614" _type="ShellCommand" date="Sun Jun 20 22:46:20 EDT 2021" starttimestamp="1624232406782" timestamp="11173924" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1616" _type="EclipseCommand" commandID="" date="Sun Jun 20 22:46:20 EDT 2021" starttimestamp="1624232406782" timestamp="11174072" />
  <Command __id="1617" _type="EclipseCommand" commandID="" date="Sun Jun 20 22:46:20 EDT 2021" starttimestamp="1624232406782" timestamp="11174140" />
  <Command __id="1618" _type="ConsoleOutput" date="Sun Jun 20 22:46:21 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11174845" type="ConsoleOutput">
    <outputString><![CDATA[Cannot invoke "unc.symbolTable.STType.isExternal()" because "anSTType" is null Description:Check:unc.checks.ExpectedGettersCheck@3d9b2a97 ast:package[1x0] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.javaStack:
unc.checks.TagBasedCheck.lookupTags(TagBasedCheck.java:620)
unc.checks.TagBasedCheck.getTags(TagBasedCheck.java:680)
unc.checks.TagBasedCheck.matchesTypeUnifying(TagBasedCheck.java:964)
unc.checks.BeanTypedPropertiesCheck.matchGetter(BeanTypedPropertiesCheck.java:269)
unc.checks.ExpectedGettersCheck.matchType(ExpectedGettersCheck.java:56)
unc.checks.BeanTypedPropertiesCheck.matchType(BeanTypedPropertiesCheck.java:248)
unc.checks.BeanTypedPropertiesCheck.matchProperty(BeanTypedPropertiesCheck.java:192)
unc.checks.BeanTypedPropertiesCheck.matchProperties(BeanTypedPropertiesCheck.java:144)
unc.checks.BeanTypedPropertiesCheck.processStrings(BeanTypedPropertiesCheck.java:359)
unc.checks.TagBasedCheck.doStringArrayBasedPendingCheck(TagBasedCheck.java:2336)
unc.checks.BeanTypedPropertiesCheck.doPendingCheck(BeanTypedPropertiesCheck.java:323)
unc.checks.ExpectedGettersCheck.doPendingCheck(ExpectedGettersCheck.java:63)
unc.checks.ComprehensiveVisitCheck.maybeAddToPendingTypeChecks(ComprehensiveVisitCheck.java:2890)
unc.checks.BeanPropertiesCheck.doFinishTree(BeanPropertiesCheck.java:200)
unc.checks.ExpectedGettersCheck.doFinishTree(ExpectedGettersCheck.java:76)
unc.checks.UNCCheck.finishTree(UNCCheck.java:509)
unc.tools.checkstyle.AnExtendibleTreeWalker.notifyEnd(AnExtendibleTreeWalker.java:330)
unc.tools.checkstyle.AnExtendibleTreeWalker.walk(AnExtendibleTreeWalker.java:285)
unc.tools.checkstyle.AnExtendibleTreeWalker.processFiltered(AnExtendibleTreeWalker.java:157)
unc.tools.checkstyle.ANonCachingTreeWalker.processFiltered(ANonCachingTreeWalker.java:11)
com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87)
com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337)
com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298)
com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221)
net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:146)
net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)
net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)
org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)
org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)
org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:292)
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:481)
org.eclipse.core.internal.resources.Project$1.run(Project.java:565)
org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)
org.eclipse.core.internal.resources.Project.internalBuild(Project.java:603)
org.eclipse.core.internal.resources.Project.build(Project.java:116)
org.eclipse.debug.core.model.LaunchConfigurationDelegate.lambda$0(LaunchConfigurationDelegate.java:406)
org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)
org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2312)
org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildProjects(LaunchConfigurationDelegate.java:412)
org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildForLaunch(LaunchConfigurationDelegate.java:122)
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:777)
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)
org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1021)
org.eclipse.debug.internal.ui.DebugUIPlugin$2.run(DebugUIPlugin.java:1224)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0"), Diff(INSERT,"Cannot invoke "unc.symbolTable.STType.isExternal()" because "anSTType" is null Description:Check:unc.checks.ExpectedGettersCheck@3d9b2a97 ast:package[1x0] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.javaStack:¶unc.checks.TagBasedCheck.lookupTags(TagBasedCheck.java:620)¶unc.checks.TagBasedCheck.getTags(TagBasedCheck.java:680)¶unc.checks.TagBasedCheck.matchesTypeUnifying(TagBasedCheck.java:964)¶unc.checks.BeanTypedPropertiesCheck.matchGetter(BeanTypedPropertiesCheck.java:269)¶unc.checks.ExpectedGettersCheck.matchType(ExpectedGettersCheck.java:56)¶unc.checks.BeanTypedPropertiesCheck.matchType(BeanTypedPropertiesCheck.java:248)¶unc.checks.BeanTypedPropertiesCheck.matchProperty(BeanTypedPropertiesCheck.java:192)¶unc.checks.BeanTypedPropertiesCheck.matchProperties(BeanTypedPropertiesCheck.java:144)¶unc.checks.BeanTypedPropertiesCheck.processStrings(BeanTypedPropertiesCheck.java:359)¶unc.checks.TagBasedCheck.doStringArrayBasedPendingCheck(TagBasedCheck.java:2336)¶unc.checks.BeanTypedPropertiesCheck.doPendingCheck(BeanTypedPropertiesCheck.java:323)¶unc.checks.ExpectedGettersCheck.doPendingCheck(ExpectedGettersCheck.java:63)¶unc.checks.ComprehensiveVisitCheck.maybeAddToPendingTypeChecks(ComprehensiveVisitCheck.java:2890)¶unc.checks.BeanPropertiesCheck.doFinishTree(BeanPropertiesCheck.java:200)¶unc.checks.ExpectedGettersCheck.doFinishTree(ExpectedGettersCheck.java:76)¶unc.checks.UNCCheck.finishTree(UNCCheck.java:509)¶unc.tools.checkstyle.AnExtendibleTreeWalker.notifyEnd(AnExtendibleTreeWalker.java:330)¶unc.tools.checkstyle.AnExtendibleTreeWalker.walk(AnExtendibleTreeWalker.java:285)¶unc.tools.checkstyle.AnExtendibleTreeWalker.processFiltered(AnExtendibleTreeWalker.java:157)¶unc.tools.checkstyle.ANonCachingTreeWalker.processFiltered(ANonCachingTreeWalker.java:11)¶com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87)¶com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337)¶com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298)¶com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221)¶net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:146)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)¶org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)¶org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:292)¶org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:481)¶org.eclipse.core.internal.resources.Project$1.run(Project.java:565)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Project.internalBuild(Project.java:603)¶org.eclipse.core.internal.resources.Project.build(Project.java:116)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.lambda$0(LaunchConfigurationDelegate.java:406)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2312)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildProjects(LaunchConfigurationDelegate.java:412)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildForLaunch(LaunchConfigurationDelegate.java:122)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:777)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)¶org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1021)¶org.eclipse.debug.internal.ui.DebugUIPlugin$2.run(DebugUIPlugin.java:1224)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1619" _type="RunCommand" date="Sun Jun 20 22:46:21 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11174869" type="Run" />
  <Command __id="1620" _type="RunCommand" date="Sun Jun 20 22:46:21 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11174869" type="Run" />
  <Command __id="1621" _type="ShellCommand" date="Sun Jun 20 22:46:22 EDT 2021" starttimestamp="1624232406782" timestamp="11175621" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1623" _type="PauseCommand" date="Sun Jun 20 22:46:30 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11183789">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8168]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1622" _type="ConsoleOutput" date="Sun Jun 20 22:46:30 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11183789" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Cannot invoke "unc.symbolTable.STType.isExternal()" because "anSTType" is null Description:Check:unc.checks.ExpectedGettersCheck@3d9b2a97 ast:package[1x0] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.javaStack:¶unc.checks.TagBasedCheck.lookupTags(TagBasedCheck.java:620)¶unc.checks.TagBasedCheck.getTags(TagBasedCheck.java:680)¶unc.checks.TagBasedCheck.matchesTypeUnifying(TagBasedCheck.java:964)¶unc.checks.BeanTypedPropertiesCheck.matchGetter(BeanTypedPropertiesCheck.java:269)¶unc.checks.ExpectedGettersCheck.matchType(ExpectedGettersCheck.java:56)¶unc.checks.BeanTypedPropertiesCheck.matchType(BeanTypedPropertiesCheck.java:248)¶unc.checks.BeanTypedPropertiesCheck.matchProperty(BeanTypedPropertiesCheck.java:192)¶unc.checks.BeanTypedPropertiesCheck.matchProperties(BeanTypedPropertiesCheck.java:144)¶unc.checks.BeanTypedPropertiesCheck.processStrings(BeanTypedPropertiesCheck.java:359)¶unc.checks.TagBasedCheck.doStringArrayBasedPendingCheck(TagBasedCheck.java:2336)¶unc.checks.BeanTypedPropertiesCheck.doPendingCheck(BeanTypedPropertiesCheck.java:323)¶unc.checks.ExpectedGettersCheck.doPendingCheck(ExpectedGettersCheck.java:63)¶unc.checks.ComprehensiveVisitCheck.maybeAddToPendingTypeChecks(ComprehensiveVisitCheck.java:2890)¶unc.checks.BeanPropertiesCheck.doFinishTree(BeanPropertiesCheck.java:200)¶unc.checks.ExpectedGettersCheck.doFinishTree(ExpectedGettersCheck.java:76)¶unc.checks.UNCCheck.finishTree(UNCCheck.java:509)¶unc.tools.checkstyle.AnExtendibleTreeWalker.notifyEnd(AnExtendibleTreeWalker.java:330)¶unc.tools.checkstyle.AnExtendibleTreeWalker.walk(AnExtendibleTreeWalker.java:285)¶unc.tools.checkstyle.AnExtendibleTreeWalker.processFiltered(AnExtendibleTreeWalker.java:157)¶unc.tools.checkstyle.ANonCachingTreeWalker.processFiltered(ANonCachingTreeWalker.java:11)¶com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:87)¶com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:337)¶com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:298)¶com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:221)¶net.sf.eclipsecs.core.builder.Auditor.runAudit(Auditor.java:146)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.handleBuildSelection(CheckstyleBuilder.java:307)¶net.sf.eclipsecs.core.builder.CheckstyleBuilder.build(CheckstyleBuilder.java:173)¶org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:846)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:229)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:277)¶org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:330)¶org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:333)¶org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:292)¶org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:481)¶org.eclipse.core.internal.resources.Project$1.run(Project.java:565)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Project.internalBuild(Project.java:603)¶org.eclipse.core.internal.resources.Project.build(Project.java:116)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.lambda$0(LaunchConfigurationDelegate.java:406)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2292)¶org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2312)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildProjects(LaunchConfigurationDelegate.java:412)¶org.eclipse.debug.core.model.LaunchConfigurationDelegate.buildForLaunch(LaunchConfigurationDelegate.java:122)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:777)¶org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:716)¶org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1021)¶org.eclipse.debug.internal.ui.DebugUIPlugin$2.run(DebugUIPlugin.java:1224)"), Diff(INSERT,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1625" _type="PauseCommand" date="Sun Jun 20 22:47:14 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="11228040">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[44251]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1624" _type="ConsoleOutput" date="Sun Jun 20 22:47:14 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11228040" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 22:47:14 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 22:47:14 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1627" _type="PauseCommand" date="Sun Jun 20 22:47:16 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11230077">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2037]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1626" _type="ConsoleOutput" date="Sun Jun 20 22:47:16 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11230077" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 22:47:16 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 22:47:16 EDT 2021
End O(n2) inter- and intra class method calls:Sun Jun 20 22:47:16 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Sun Jun 20 22:47:14"), Diff(INSERT," Sun Jun 20 22:47:16 EDT 2021¶Start O(n2) inter- and intra class method calls:Sun Jun 20 22:47:16 EDT 2021¶End O(n2) inter- and intra class method calls:Sun Jun 20 22:47:16"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1629" _type="PauseCommand" date="Sun Jun 20 22:47:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11231701">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1624]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1628" _type="ConsoleOutput" date="Sun Jun 20 22:47:18 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11231701" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 22:47:18 EDT 2021
Generating checks:Sun Jun 20 22:47:18 EDT 2021
Finished Generating checks:Sun Jun 20 22:47:18 EDT 2021
Generating externals:Sun Jun 20 22:47:18 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Sun Jun 20 22:47:1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Sun Jun 20 22:47:18 EDT 2021¶Finished Generating check"), Diff(EQUAL,"s:Sun Jun 20 22:47:1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Sun Jun 20 22:47:1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1630" _type="ConsoleOutput" date="Sun Jun 20 22:47:18 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11232038" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 22:47:18 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 22:47:18 EDT 2021¶Generating checks:Sun Jun 20 22:47:18 EDT 2021¶Finished Generating checks:Sun Jun 20 22:47:18 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 22:47:18 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1631" _type="ConsoleOutput" date="Sun Jun 20 22:47:19 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11232481" type="ConsoleOutput">
    <outputString><![CDATA[SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0

SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0


SceneControllerCallsSetEnabled did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!setEnabled:boolean-> void. [MissingMethodCall]%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 22:47:18 EDT 2021"), Diff(INSERT,"SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶¶SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0¶¶¶SceneControllerCallsSetEnabled did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!setEnabled:boolean-> void. [MissingMethodCall]%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1632" _type="ExceptionCommand" date="Sun Jun 20 22:47:19 EDT 2021" starttimestamp="1624232406782" timestamp="11232539" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@59ddd06c]
Execution exception caused by invocation exception caused by:
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
SceneControllerButtonDynamics did not pass completely:java.lang.ClassCastException class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1634" _type="PauseCommand" date="Sun Jun 20 22:48:10 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="11283907">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[51368]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1633" _type="ConsoleOutput" date="Sun Jun 20 22:48:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11283907" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-1,5,main]: before wait
Thread[Thread-2,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶¶SceneControllerRegistersAsPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!addPropertyChangeListener:PropertyChangeListener->void. [MissingMethodCall]%0.0¶¶¶SceneControllerCallsSetEnabled did not pass completely:[WARN] /Users/gabomm99/eclipse-workspace/grailA4FinalProject/./src/grail/MVC/BridgeSceneController.java:1: No method in class grail.MVC.BridgeSceneController:[@Comp301Tags.BRIDGE_SCENE_CONTROLLER] has not made expected call (.*)!setEnabled:boolean-> void. [MissingMethodCall]%0.0"), Diff(INSERT,"Thread[Thread-1,5,main]: before wait¶Thread[Thread-2,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1635" _type="ConsoleOutput" date="Sun Jun 20 22:48:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11284002" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,5,main]: before wait
Thread[Thread-4,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,",5,main]: before wait¶Thread[Thread-"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1637" _type="PauseCommand" date="Sun Jun 20 22:48:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11285113">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1111]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1636" _type="ConsoleOutput" date="Sun Jun 20 22:48:11 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11285113" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-1,5,main]: after wait
Thread[Thread-4,5,main]: after wait
Thread[Thread-3,5,main]: after wait
Thread[Thread-2,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"T"), Diff(INSERT,"pool-1-t"), Diff(EQUAL,"hread-"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"before wait¶Thread[Thread-4,5,main]: before"), Diff(INSERT,"after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1638" _type="ExceptionCommand" date="Sun Jun 20 22:48:12 EDT 2021" starttimestamp="1624232406782" timestamp="11285366" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=130; propagationId=null; source=grail.geometryFigs.RotatingLine@25d33de1]
Exception in thread "Thread-4" java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=70; propagationId=null; source=grail.geometryFigs.RotatingLine@613d0645]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=410; propagationId=null; source=grail.geometryFigs.RotatingLine@59ddd06c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=670; newValue=680; propagationId=null; source=grail.geometryFigs.RotatingLine@118a9f05]
Exception in thread "Thread-1" Exception in thread "Thread-3" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
Exception in thread "Thread-2" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1639" _type="ExceptionCommand" date="Sun Jun 20 22:48:12 EDT 2021" starttimestamp="1624232406782" timestamp="11286120" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1640" _type="ConsoleOutput" date="Sun Jun 20 22:48:12 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11286135" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after wait"), Diff(INSERT,"java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1641" _type="ConsoleOutput" date="Sun Jun 20 22:48:13 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11286322" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-6,5,main]: before wait
Thread[Thread-7,5,main]: before wait
Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-5,5,main]: after wait
Thread[Thread-7,5,main]: after wait
Thread[Thread-6,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)"), Diff(INSERT,"Thread[Thread-6,5,main]: before wait¶Thread[Thread-7,5,main]: before wait¶Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1642" _type="ExceptionCommand" date="Sun Jun 20 22:48:13 EDT 2021" starttimestamp="1624232406782" timestamp="11286538" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=410; newValue=420; propagationId=null; source=grail.geometryFigs.RotatingLine@59ddd06c]
Exception in thread "Thread-5" java.beans.PropertyChangeEvent[propertyName=X; oldValue=680; newValue=690; propagationId=null; source=grail.geometryFigs.RotatingLine@118a9f05]
java.beans.PropertyChangeEvent[propertyName=Angle; oldValue=2.356194490192345; newValue=1.6689710972195777; propagationId=null; source=grail.geometryFigs.RotatingLine@28183bdf]
Exception in thread "Thread-6" Exception in thread "Thread-7" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Boolean (java.lang.Double and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.RotatingLine.setAngle(RotatingLine.java:117)
	at grail.geometryFigs.RotatingLine.rotate(RotatingLine.java:64)
	at AnimationMethods.ABridgeSceneAnimator.animateGuard(ABridgeSceneAnimator.java:27)
	at AnimationMethods.SceneLockedAnimationCommand.run(SceneLockedAnimationCommand.java:22)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1644" _type="PauseCommand" date="Sun Jun 20 22:48:20 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11293294">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[6756]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1643" _type="ExceptionCommand" date="Sun Jun 20 22:48:20 EDT 2021" starttimestamp="1624232406782" timestamp="11293294" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Number of coordinated threads: 0 instead of 2%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkNumThreads(LockstepAvatarsAnimationTestCase.java:81)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkOutput(LockstepAvatarsAnimationTestCase.java:223)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1645" _type="ConsoleOutput" date="Sun Jun 20 22:48:20 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11293310" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Number of coordinated threads: 0 instead of 2%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkNumThreads(LockstepAvatarsAnimationTestCase.java:81)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkOutput(LockstepAvatarsAnimationTestCase.java:223)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[Thread-6,5,main]: before wait¶Thread[Thread-7,5,main]: before wait¶Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait"), Diff(INSERT,"java.lang.AssertionError: Number of coordinated threads: 0 instead of 2%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkNumThreads(LockstepAvatarsAnimationTestCase.java:81)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkOutput(LockstepAvatarsAnimationTestCase.java:223)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1652" _type="PauseCommand" date="Sun Jun 20 22:49:31 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11364410">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2912]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1651" _type="RunCommand" date="Sun Jun 20 22:49:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11364410" type="Run" />
  <Command __id="1653" _type="RunCommand" date="Sun Jun 20 22:49:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11364411" type="Run" />
  <Command __id="1654" _type="ShellCommand" date="Sun Jun 20 22:49:31 EDT 2021" starttimestamp="1624232406782" timestamp="11365057" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1656" _type="PauseCommand" date="Sun Jun 20 22:49:38 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11372101">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7044]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1655" _type="ConsoleOutput" date="Sun Jun 20 22:49:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11372101" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 22:49:38 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Number of coordinated threads: 0 instead of 2%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkNumThreads(LockstepAvatarsAnimationTestCase.java:81)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkOutput(LockstepAvatarsAnimationTestCase.java:223)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 22:49:38 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1658" _type="PauseCommand" date="Sun Jun 20 22:49:40 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11373899">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1798]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1657" _type="ConsoleOutput" date="Sun Jun 20 22:49:40 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11373899" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 22:49:40 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 22:49:40 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Sun Jun 20 22:49:40 EDT 2021¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Sun Jun 20 22:49:"), Diff(DELETE,"38"), Diff(INSERT,"40"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1659" _type="ConsoleOutput" date="Sun Jun 20 22:49:40 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11373987" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 22:49:40 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Sun Jun 20 22:49:40 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 22:49:40 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1661" _type="PauseCommand" date="Sun Jun 20 22:49:42 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11375372">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1385]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1660" _type="ConsoleOutput" date="Sun Jun 20 22:49:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11375372" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 22:49:42 EDT 2021
Generating checks:Sun Jun 20 22:49:42 EDT 2021
Finished Generating checks:Sun Jun 20 22:49:42 EDT 2021
Generating externals:Sun Jun 20 22:49:42 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 22:49:42 EDT 2021¶Generating checks:Sun Jun 20 22:49:42 EDT 2021¶Finished Generating checks:Sun Jun 20 22:49:42 EDT 2021¶Generating externa"), Diff(EQUAL,"ls:Sun Jun 20 22:49:4"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1662" _type="ConsoleOutput" date="Sun Jun 20 22:49:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11375797" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 22:49:42 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 22:49:42 EDT 2021¶Generating checks:Sun Jun 20 22:49:42 EDT 2021¶Finished Generating checks:Sun Jun 20 22:49:42 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 22:49:42 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="1663" _type="ConsoleOutput" date="Sun Jun 20 22:49:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11375992" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-1,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 22:49:42 EDT 2021"), Diff(INSERT,"Thread[Thread-1,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1664" _type="ConsoleOutput" date="Sun Jun 20 22:49:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11376077" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-2,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1665" _type="ConsoleOutput" date="Sun Jun 20 22:49:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11376128" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1666" _type="ConsoleOutput" date="Sun Jun 20 22:49:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11376181" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-4,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1668" _type="PauseCommand" date="Sun Jun 20 22:49:44 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11377239">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1058]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1667" _type="ConsoleOutput" date="Sun Jun 20 22:49:44 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11377239" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-1,5,main]: after wait
Thread[Thread-4,5,main]: after wait
Thread[Thread-3,5,main]: after wait
Thread[Thread-2,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"Thread-4,5,main]: before"), Diff(INSERT,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1670" _type="PauseCommand" date="Sun Jun 20 22:49:49 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11382500">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5261]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1669" _type="ConsoleOutput" date="Sun Jun 20 22:49:49 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11382500" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-5,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(INSERT,"Thread-5,5,main]: before"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="1671" _type="ConsoleOutput" date="Sun Jun 20 22:49:49 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11382564" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-6,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="1672" _type="ConsoleOutput" date="Sun Jun 20 22:49:49 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11382621" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-7,5,main]: before wait
Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-5,5,main]: after wait
Thread[Thread-7,5,main]: after wait
Thread[Thread-6,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,",5,main]: before wait¶"), Diff(INSERT,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait¶")]]]></diff>
  </Command>
  <Command __id="1674" _type="PauseCommand" date="Sun Jun 20 22:50:03 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="11397087">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14466]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1673" _type="ConsoleOutput" date="Sun Jun 20 22:50:03 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11397087" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[Thread-7,5,main]: before wait¶Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait"), Diff(INSERT,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1676" _type="PauseCommand" date="Sun Jun 20 22:50:19 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="11412692">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15605]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1675" _type="ExceptionCommand" date="Sun Jun 20 22:50:19 EDT 2021" starttimestamp="1624232406782" timestamp="11412692" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1677" _type="ConsoleOutput" date="Sun Jun 20 22:50:19 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11412699" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition"), Diff(INSERT,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1679" _type="PauseCommand" date="Sun Jun 20 22:50:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11414015">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1316]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1678" _type="ExceptionCommand" date="Sun Jun 20 22:50:20 EDT 2021" starttimestamp="1624232406782" timestamp="11414015" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1680" _type="ConsoleOutput" date="Sun Jun 20 22:50:20 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11414015" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶")]]]></diff>
  </Command>
  <Command __id="1682" _type="PauseCommand" date="Sun Jun 20 22:50:22 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11415332">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1317]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1681" _type="ExceptionCommand" date="Sun Jun 20 22:50:22 EDT 2021" starttimestamp="1624232406782" timestamp="11415332" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1683" _type="ConsoleOutput" date="Sun Jun 20 22:50:22 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11415332" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶")]]]></diff>
  </Command>
  <Command __id="1685" _type="PauseCommand" date="Sun Jun 20 22:50:23 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11416671">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1339]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1684" _type="ExceptionCommand" date="Sun Jun 20 22:50:23 EDT 2021" starttimestamp="1624232406782" timestamp="11416671" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1686" _type="ConsoleOutput" date="Sun Jun 20 22:50:23 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="11416671" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.lang.AssertionError: Child 1 and Child 2 are not synchronized %0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkChildrenOrder(SyncArthurAnimationTestCase.java:65)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:86)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶")]]]></diff>
  </Command>
  <Command __id="1691" _type="PauseCommand" date="Sun Jun 20 22:51:22 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="11475752">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[46667]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1690" _type="RunCommand" date="Sun Jun 20 22:51:22 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11475752" type="Run" />
  <Command __id="1692" _type="RunCommand" date="Sun Jun 20 22:51:22 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11475752" type="Run" />
  <Command __id="1693" _type="ShellCommand" date="Sun Jun 20 22:51:22 EDT 2021" starttimestamp="1624232406782" timestamp="11475967" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1695" _type="PauseCommand" date="Sun Jun 20 22:51:26 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11480080">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4113]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1694" _type="ShellCommand" date="Sun Jun 20 22:51:26 EDT 2021" starttimestamp="1624232406782" timestamp="11480080" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1697" _type="PauseCommand" date="Sun Jun 20 22:56:13 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="11766951">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[286871]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="1696" _type="BalloonCommand" date="Sun Jun 20 22:56:13 EDT 2021" message="*******************************************
Worked 22 minutes(fixed)/27 minutes(context based) from
Sun Jun 20 21:56:13 EDT 2021 to Sun Jun 20 22:51:26 EDT 2021
Edited 1 Projects: 
	grailA4FinalProject
Edited 1 Files: 
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java
Number of insert: 21
Number of delete: 0
" starttimestamp="1624232406782" timestamp="11766951">
    <fineGrainedWorkTime><![CDATA[27]]></fineGrainedWorkTime>
    <insert><![CDATA[21]]></insert>
    <startTime><![CDATA[1624240573740]]></startTime>
    <endTime><![CDATA[1624243886862]]></endTime>
    <workTime><![CDATA[22]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="1699" _type="PauseCommand" date="Sun Jun 20 22:57:32 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="11845253">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[78302]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1698" _type="ShellCommand" date="Sun Jun 20 22:57:32 EDT 2021" starttimestamp="1624232406782" timestamp="11845253" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1701" _type="PauseCommand" date="Sun Jun 20 22:57:37 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11850569">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5316]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1700" _type="ShellCommand" date="Sun Jun 20 22:57:37 EDT 2021" starttimestamp="1624232406782" timestamp="11850569" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1703" _type="PauseCommand" date="Sun Jun 20 22:57:40 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11853978">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3409]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1702" _type="ShellCommand" date="Sun Jun 20 22:57:40 EDT 2021" starttimestamp="1624232406782" timestamp="11853978" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1704" _type="MoveCaretCommand" caretOffset="954" date="Sun Jun 20 22:57:40 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="11854079" />
  <Command __id="1706" _type="PauseCommand" date="Sun Jun 20 22:57:58 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="11871609">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17530]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1707" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 22:57:58 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="11871957" />
  <Command __id="1709" _type="PauseCommand" date="Sun Jun 20 22:58:02 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11875996">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4039]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1708" _type="MoveCaretCommand" caretOffset="202" date="Sun Jun 20 22:58:02 EDT 2021" docOffset="686" starttimestamp="1624232406782" timestamp="11875996" />
  <DocumentChange __id="1586" _type="Insert" date="Sun Jun 20 22:46:00 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" length="8" offset="8508" repeat="8" starttimestamp="1624232406782" timestamp="11153811" timestamp2="11156415">
    <text><![CDATA[Listener]]></text>
  </DocumentChange>
  <Command __id="1609" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:46:15 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11169135">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="1705" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 22:57:58 EDT 2021" docASTNodeCount="507" docActiveCodeLength="3240" docExpressionCount="346" docLength="3340" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="11871609">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1711" _type="PauseCommand" date="Sun Jun 20 22:58:05 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11878299">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2303]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1712" _type="InsertStringCommand" date="Sun Jun 20 22:58:05 EDT 2021" starttimestamp="1624232406782" timestamp="11878303" timestamp2="11878303">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1714" _type="InsertStringCommand" date="Sun Jun 20 22:58:05 EDT 2021" starttimestamp="1624232406782" timestamp="11878839" timestamp2="11878839">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1717" _type="PauseCommand" date="Sun Jun 20 22:58:06 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11879981">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1142]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1716" _type="InsertStringCommand" date="Sun Jun 20 22:58:06 EDT 2021" starttimestamp="1624232406782" timestamp="11879981" timestamp2="11879981">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="1719" _type="InsertStringCommand" date="Sun Jun 20 22:58:07 EDT 2021" starttimestamp="1624232406782" timestamp="11880413" timestamp2="11880413">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1721" _type="InsertStringCommand" date="Sun Jun 20 22:58:07 EDT 2021" starttimestamp="1624232406782" timestamp="11880522" timestamp2="11880522">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1723" _type="InsertStringCommand" date="Sun Jun 20 22:58:07 EDT 2021" starttimestamp="1624232406782" timestamp="11880682" timestamp2="11880682">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1725" _type="InsertStringCommand" date="Sun Jun 20 22:58:07 EDT 2021" starttimestamp="1624232406782" timestamp="11880818" timestamp2="11880818">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1727" _type="InsertStringCommand" date="Sun Jun 20 22:58:07 EDT 2021" starttimestamp="1624232406782" timestamp="11880975" timestamp2="11880975">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1729" _type="InsertStringCommand" date="Sun Jun 20 22:58:07 EDT 2021" starttimestamp="1624232406782" timestamp="11881154" timestamp2="11881154">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1731" _type="InsertStringCommand" date="Sun Jun 20 22:58:08 EDT 2021" starttimestamp="1624232406782" timestamp="11881312" timestamp2="11881312">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1733" _type="InsertStringCommand" date="Sun Jun 20 22:58:08 EDT 2021" starttimestamp="1624232406782" timestamp="11881605" timestamp2="11881605">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1735" _type="InsertStringCommand" date="Sun Jun 20 22:58:08 EDT 2021" starttimestamp="1624232406782" timestamp="11881916" timestamp2="11881916">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1737" _type="InsertStringCommand" date="Sun Jun 20 22:58:08 EDT 2021" starttimestamp="1624232406782" timestamp="11882067" timestamp2="11882067">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1739" _type="InsertStringCommand" date="Sun Jun 20 22:58:08 EDT 2021" starttimestamp="1624232406782" timestamp="11882182" timestamp2="11882182">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1741" _type="InsertStringCommand" date="Sun Jun 20 22:58:09 EDT 2021" starttimestamp="1624232406782" timestamp="11882389" timestamp2="11882389">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1743" _type="InsertStringCommand" date="Sun Jun 20 22:58:09 EDT 2021" starttimestamp="1624232406782" timestamp="11882501" timestamp2="11882501">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1745" _type="InsertStringCommand" date="Sun Jun 20 22:58:09 EDT 2021" starttimestamp="1624232406782" timestamp="11882839" timestamp2="11882839">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1747" _type="InsertStringCommand" date="Sun Jun 20 22:58:09 EDT 2021" starttimestamp="1624232406782" timestamp="11883018" timestamp2="11883018">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1749" _type="InsertStringCommand" date="Sun Jun 20 22:58:09 EDT 2021" starttimestamp="1624232406782" timestamp="11883176" timestamp2="11883176">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1751" _type="InsertStringCommand" date="Sun Jun 20 22:58:10 EDT 2021" starttimestamp="1624232406782" timestamp="11883337" timestamp2="11883337">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1753" _type="InsertStringCommand" date="Sun Jun 20 22:58:10 EDT 2021" starttimestamp="1624232406782" timestamp="11883472" timestamp2="11883472">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1755" _type="InsertStringCommand" date="Sun Jun 20 22:58:10 EDT 2021" starttimestamp="1624232406782" timestamp="11883649" timestamp2="11883649">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1757" _type="InsertStringCommand" date="Sun Jun 20 22:58:10 EDT 2021" starttimestamp="1624232406782" timestamp="11883829" timestamp2="11883829">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1759" _type="InsertStringCommand" date="Sun Jun 20 22:58:10 EDT 2021" starttimestamp="1624232406782" timestamp="11884121" timestamp2="11884121">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1761" _type="PauseCommand" date="Sun Jun 20 22:58:16 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11889915">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5794]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1760" _type="ShellCommand" date="Sun Jun 20 22:58:16 EDT 2021" starttimestamp="1624232406782" timestamp="11889915" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1762" _type="ShellCommand" date="Sun Jun 20 22:58:16 EDT 2021" starttimestamp="1624232406782" timestamp="11890058" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1766" _type="PauseCommand" date="Sun Jun 20 22:58:21 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11894371">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4301]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1765" _type="ShellCommand" date="Sun Jun 20 22:58:21 EDT 2021" starttimestamp="1624232406782" timestamp="11894371" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1767" _type="ShellCommand" date="Sun Jun 20 22:58:21 EDT 2021" starttimestamp="1624232406782" timestamp="11894479" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1775" _type="PauseCommand" date="Sun Jun 20 22:58:30 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11903940">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[9410]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1774" _type="SelectTextCommand" caretOffset="2944" date="Sun Jun 20 22:58:30 EDT 2021" end="2977" start="2944" starttimestamp="1624232406782" timestamp="11903940" />
  <Command __id="1777" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 22:58:31 EDT 2021" starttimestamp="1624232406782" timestamp="11904647" />
  <Command __id="1779" _type="PauseCommand" date="Sun Jun 20 22:58:34 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11907517">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2870]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1780" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 22:58:34 EDT 2021" starttimestamp="1624232406782" timestamp="11907519" />
  <Command __id="1782" _type="PauseCommand" date="Sun Jun 20 22:59:26 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="11960194">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[52675]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1783" _type="InsertStringCommand" date="Sun Jun 20 22:59:26 EDT 2021" starttimestamp="1624232406782" timestamp="11960196" timestamp2="11960196">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1785" _type="InsertStringCommand" date="Sun Jun 20 22:59:27 EDT 2021" starttimestamp="1624232406782" timestamp="11960376" timestamp2="11960376">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1787" _type="InsertStringCommand" date="Sun Jun 20 22:59:27 EDT 2021" starttimestamp="1624232406782" timestamp="11960598" timestamp2="11960598">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1789" _type="PauseCommand" date="Sun Jun 20 22:59:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11962102">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1504]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1790" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 22:59:28 EDT 2021" starttimestamp="1624232406782" timestamp="11962104" />
  <Command __id="1792" _type="PauseCommand" date="Sun Jun 20 22:59:30 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11963302">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1198]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1793" _type="InsertStringCommand" date="Sun Jun 20 22:59:30 EDT 2021" starttimestamp="1624232406782" timestamp="11963306" timestamp2="11963306">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1795" _type="InsertStringCommand" date="Sun Jun 20 22:59:30 EDT 2021" starttimestamp="1624232406782" timestamp="11963865" timestamp2="11963865">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1797" _type="InsertStringCommand" date="Sun Jun 20 22:59:30 EDT 2021" starttimestamp="1624232406782" timestamp="11964066" timestamp2="11964066">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1799" _type="InsertStringCommand" date="Sun Jun 20 22:59:31 EDT 2021" starttimestamp="1624232406782" timestamp="11964938" timestamp2="11964938">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1801" _type="InsertStringCommand" date="Sun Jun 20 22:59:32 EDT 2021" starttimestamp="1624232406782" timestamp="11965860" timestamp2="11965860">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1802" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 22:59:32 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="11965866" />
  <Command __id="1804" _type="PauseCommand" date="Sun Jun 20 22:59:39 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11972368">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[6502]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1808" _type="PauseCommand" date="Sun Jun 20 22:59:46 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="11979996">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[7628]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1807" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 22:59:46 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="11979996" />
  <Command __id="1810" _type="InsertStringCommand" date="Sun Jun 20 22:59:46 EDT 2021" starttimestamp="1624232406782" timestamp="11980006" timestamp2="11980006">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1710" _type="Insert" date="Sun Jun 20 22:58:05 EDT 2021" docASTNodeCount="509" docActiveCodeLength="3264" docExpressionCount="347" docLength="3364" length="24" offset="686" repeat="24" starttimestamp="1624232406782" timestamp="11878299" timestamp2="11884117">
    <text><![CDATA[, PropertyChangeListener]]></text>
  </DocumentChange>
  <DocumentChange __id="1763" _type="Insert" date="Sun Jun 20 22:58:16 EDT 2021" docASTNodeCount="515" docActiveCodeLength="3306" docExpressionCount="352" docLength="3406" length="42" offset="257" repeat="2" starttimestamp="1624232406782" timestamp="11890070" timestamp2="11890071">
    <text><![CDATA[
import java.beans.PropertyChangeListener;]]></text>
  </DocumentChange>
  <DocumentChange __id="1768" _type="Insert" date="Sun Jun 20 22:58:21 EDT 2021" docASTNodeCount="526" docActiveCodeLength="3381" docExpressionCount="357" docLength="3515" length="109" offset="3400" repeat="4" starttimestamp="1624232406782" timestamp="11894524" timestamp2="11894529">
    <text><![CDATA[
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1772" _type="Insert" date="Sun Jun 20 22:58:21 EDT 2021" docASTNodeCount="532" docActiveCodeLength="3420" docExpressionCount="362" docLength="3554" length="39" offset="257" repeat="2" starttimestamp="1624232406782" timestamp="11894530" timestamp2="11894531">
    <text><![CDATA[
import java.beans.PropertyChangeEvent;]]></text>
  </DocumentChange>
  <DocumentChange __id="1776" _type="Delete" date="Sun Jun 20 22:58:31 EDT 2021" docASTNodeCount="532" docActiveCodeLength="3421" docExpressionCount="362" docLength="3521" endLine="146" length="33" offset="3509" startLine="146" starttimestamp="1624232406782" timestamp="11904642">
    <text><![CDATA[/ TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="1778" _type="Delete" date="Sun Jun 20 22:58:34 EDT 2021" docASTNodeCount="532" docActiveCodeLength="3420" docExpressionCount="362" docLength="3520" endLine="146" length="1" offset="3508" startLine="146" starttimestamp="1624232406782" timestamp="11907517">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <DocumentChange __id="1781" _type="Insert" date="Sun Jun 20 22:59:26 EDT 2021" docASTNodeCount="532" docActiveCodeLength="3423" docExpressionCount="362" docLength="3523" length="3" offset="3508" repeat="3" starttimestamp="1624232406782" timestamp="11960194" timestamp2="11960595">
    <text><![CDATA[if ]]></text>
  </DocumentChange>
  <DocumentChange __id="1788" _type="Delete" date="Sun Jun 20 22:59:28 EDT 2021" docASTNodeCount="532" docActiveCodeLength="3422" docExpressionCount="362" docLength="3522" endLine="146" length="1" offset="3510" startLine="146" starttimestamp="1624232406782" timestamp="11962102">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="1791" _type="Insert" date="Sun Jun 20 22:59:30 EDT 2021" docASTNodeCount="535" docActiveCodeLength="3428" docExpressionCount="363" docLength="3528" length="6" offset="3510" repeat="5" starttimestamp="1624232406782" timestamp="11963302" timestamp2="11965860">
    <text><![CDATA[(evt.)]]></text>
  </DocumentChange>
  <DocumentChange __id="1803" _type="Insert" date="Sun Jun 20 22:59:39 EDT 2021" docASTNodeCount="537" docActiveCodeLength="3431" docExpressionCount="365" docLength="3531" length="3" offset="3515" repeat="3" starttimestamp="1624232406782" timestamp="11972368" timestamp2="11972638">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <DocumentChange __id="1809" _type="Replace" date="Sun Jun 20 22:59:46 EDT 2021" docASTNodeCount="537" docActiveCodeLength="3445" docExpressionCount="365" docLength="3545" endLine="146" insertionLength="17" int_docASTNodeCount="535" int_docActiveCodeLength="3428" int_docExpressionCount="363" int_docLength="3528" length="3" offset="3515" startLine="146" starttimestamp="1624232406782" timestamp="11980002">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getPropertyName()]]></insertedText>
  </DocumentChange>
  <Command __id="1812" _type="PauseCommand" date="Sun Jun 20 22:59:49 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="11982467">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2461]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1813" _type="InsertStringCommand" date="Sun Jun 20 22:59:49 EDT 2021" starttimestamp="1624232406782" timestamp="11982468" timestamp2="11982468">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1815" _type="InsertStringCommand" date="Sun Jun 20 22:59:49 EDT 2021" starttimestamp="1624232406782" timestamp="11982873" timestamp2="11982873">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1817" _type="InsertStringCommand" date="Sun Jun 20 22:59:49 EDT 2021" starttimestamp="1624232406782" timestamp="11983008" timestamp2="11983008">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1820" _type="PauseCommand" date="Sun Jun 20 22:59:51 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11984339">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1331]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1819" _type="InsertStringCommand" date="Sun Jun 20 22:59:51 EDT 2021" starttimestamp="1624232406782" timestamp="11984339" timestamp2="11984339">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1822" _type="InsertStringCommand" date="Sun Jun 20 22:59:51 EDT 2021" starttimestamp="1624232406782" timestamp="11984657" timestamp2="11984657">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1825" _type="PauseCommand" date="Sun Jun 20 22:59:52 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11986187">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1530]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1824" _type="InsertStringCommand" date="Sun Jun 20 22:59:52 EDT 2021" starttimestamp="1624232406782" timestamp="11986187" timestamp2="11986187">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1827" _type="InsertStringCommand" date="Sun Jun 20 22:59:53 EDT 2021" starttimestamp="1624232406782" timestamp="11986389" timestamp2="11986389">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1829" _type="InsertStringCommand" date="Sun Jun 20 22:59:53 EDT 2021" starttimestamp="1624232406782" timestamp="11986542" timestamp2="11986542">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1831" _type="InsertStringCommand" date="Sun Jun 20 22:59:53 EDT 2021" starttimestamp="1624232406782" timestamp="11986699" timestamp2="11986699">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1833" _type="InsertStringCommand" date="Sun Jun 20 22:59:53 EDT 2021" starttimestamp="1624232406782" timestamp="11986905" timestamp2="11986905">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1835" _type="InsertStringCommand" date="Sun Jun 20 22:59:53 EDT 2021" starttimestamp="1624232406782" timestamp="11987086" timestamp2="11987086">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1837" _type="InsertStringCommand" date="Sun Jun 20 22:59:54 EDT 2021" starttimestamp="1624232406782" timestamp="11987355" timestamp2="11987355">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1839" _type="InsertStringCommand" date="Sun Jun 20 22:59:54 EDT 2021" starttimestamp="1624232406782" timestamp="11987468" timestamp2="11987468">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1841" _type="PauseCommand" date="Sun Jun 20 22:59:56 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="11989371">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1903]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1840" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 22:59:56 EDT 2021" starttimestamp="1624232406782" timestamp="11989371" />
  <Command __id="1857" _type="PauseCommand" date="Sun Jun 20 23:02:49 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12162272">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15543]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1858" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 23:02:49 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="12162413" />
  <Command __id="1860" _type="PauseCommand" date="Sun Jun 20 23:02:51 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12164389">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1976]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1861" _type="MoveCaretCommand" caretOffset="2982" date="Sun Jun 20 23:02:51 EDT 2021" docOffset="3547" starttimestamp="1624232406782" timestamp="12164581" />
  <Command __id="1863" _type="PauseCommand" date="Sun Jun 20 23:02:56 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12170144">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5563]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1864" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 23:02:57 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="12170262" />
  <Command __id="1866" _type="PauseCommand" date="Sun Jun 20 23:02:59 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12172305">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2043]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1867" _type="MoveCaretCommand" caretOffset="2982" date="Sun Jun 20 23:02:59 EDT 2021" docOffset="3547" starttimestamp="1624232406782" timestamp="12172425" />
  <Command __id="1869" _type="PauseCommand" date="Sun Jun 20 23:03:04 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12177364">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4939]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1870" _type="InsertStringCommand" date="Sun Jun 20 23:03:04 EDT 2021" starttimestamp="1624232406782" timestamp="12177367" timestamp2="12177367">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1871" _type="InsertStringCommand" date="Sun Jun 20 23:03:04 EDT 2021" starttimestamp="1624232406782" timestamp="12177367" timestamp2="12177367">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1873" _type="InsertStringCommand" date="Sun Jun 20 23:03:04 EDT 2021" starttimestamp="1624232406782" timestamp="12177981" timestamp2="12177981">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1874" _type="InsertStringCommand" date="Sun Jun 20 23:03:04 EDT 2021" starttimestamp="1624232406782" timestamp="12177981" timestamp2="12177981">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1876" _type="PauseCommand" date="Sun Jun 20 23:03:09 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12182245">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4264]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1877" _type="InsertStringCommand" date="Sun Jun 20 23:03:09 EDT 2021" starttimestamp="1624232406782" timestamp="12182248" timestamp2="12182248">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1878" _type="InsertStringCommand" date="Sun Jun 20 23:03:09 EDT 2021" starttimestamp="1624232406782" timestamp="12182248" timestamp2="12182248">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1880" _type="PauseCommand" date="Sun Jun 20 23:03:14 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12187443">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5195]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1881" _type="InsertStringCommand" date="Sun Jun 20 23:03:14 EDT 2021" starttimestamp="1624232406782" timestamp="12187445" timestamp2="12187445">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1882" _type="InsertStringCommand" date="Sun Jun 20 23:03:14 EDT 2021" starttimestamp="1624232406782" timestamp="12187446" timestamp2="12187446">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1884" _type="PauseCommand" date="Sun Jun 20 23:03:17 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12190686">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3240]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1885" _type="InsertStringCommand" date="Sun Jun 20 23:03:17 EDT 2021" starttimestamp="1624232406782" timestamp="12190689" timestamp2="12190689">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1886" _type="InsertStringCommand" date="Sun Jun 20 23:03:17 EDT 2021" starttimestamp="1624232406782" timestamp="12190689" timestamp2="12190689">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1888" _type="PauseCommand" date="Sun Jun 20 23:03:31 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12204902">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[14213]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1889" _type="InsertStringCommand" date="Sun Jun 20 23:03:31 EDT 2021" starttimestamp="1624232406782" timestamp="12204905" timestamp2="12204905">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1890" _type="InsertStringCommand" date="Sun Jun 20 23:03:31 EDT 2021" starttimestamp="1624232406782" timestamp="12204905" timestamp2="12204905">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1892" _type="InsertStringCommand" date="Sun Jun 20 23:03:31 EDT 2021" starttimestamp="1624232406782" timestamp="12205064" timestamp2="12205064">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1893" _type="InsertStringCommand" date="Sun Jun 20 23:03:31 EDT 2021" starttimestamp="1624232406782" timestamp="12205064" timestamp2="12205064">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1895" _type="InsertStringCommand" date="Sun Jun 20 23:03:32 EDT 2021" starttimestamp="1624232406782" timestamp="12205331" timestamp2="12205331">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1896" _type="InsertStringCommand" date="Sun Jun 20 23:03:32 EDT 2021" starttimestamp="1624232406782" timestamp="12205331" timestamp2="12205331">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1898" _type="InsertStringCommand" date="Sun Jun 20 23:03:32 EDT 2021" starttimestamp="1624232406782" timestamp="12206031" timestamp2="12206031">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1899" _type="InsertStringCommand" date="Sun Jun 20 23:03:32 EDT 2021" starttimestamp="1624232406782" timestamp="12206031" timestamp2="12206031">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1900" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 23:03:32 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="12206034" />
  <Command __id="1905" _type="PauseCommand" date="Sun Jun 20 23:03:36 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12209902">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3868]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1904" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:03:36 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="12209902" />
  <Command __id="1907" _type="InsertStringCommand" date="Sun Jun 20 23:03:36 EDT 2021" starttimestamp="1624232406782" timestamp="12209914" timestamp2="12209914">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1908" _type="InsertStringCommand" date="Sun Jun 20 23:03:36 EDT 2021" starttimestamp="1624232406782" timestamp="12209915" timestamp2="12209915">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1910" _type="PauseCommand" date="Sun Jun 20 23:03:38 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12211656">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1741]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1911" _type="InsertStringCommand" date="Sun Jun 20 23:03:38 EDT 2021" starttimestamp="1624232406782" timestamp="12211657" timestamp2="12211657">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1912" _type="InsertStringCommand" date="Sun Jun 20 23:03:38 EDT 2021" starttimestamp="1624232406782" timestamp="12211657" timestamp2="12211657">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1914" _type="InsertStringCommand" date="Sun Jun 20 23:03:38 EDT 2021" starttimestamp="1624232406782" timestamp="12211949" timestamp2="12211949">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1915" _type="InsertStringCommand" date="Sun Jun 20 23:03:38 EDT 2021" starttimestamp="1624232406782" timestamp="12211949" timestamp2="12211949">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1917" _type="InsertStringCommand" date="Sun Jun 20 23:03:38 EDT 2021" starttimestamp="1624232406782" timestamp="12212103" timestamp2="12212103">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1918" _type="InsertStringCommand" date="Sun Jun 20 23:03:38 EDT 2021" starttimestamp="1624232406782" timestamp="12212103" timestamp2="12212103">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1920" _type="InsertStringCommand" date="Sun Jun 20 23:03:39 EDT 2021" starttimestamp="1624232406782" timestamp="12212283" timestamp2="12212283">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1921" _type="InsertStringCommand" date="Sun Jun 20 23:03:39 EDT 2021" starttimestamp="1624232406782" timestamp="12212283" timestamp2="12212283">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1923" _type="PauseCommand" date="Sun Jun 20 23:03:42 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12215998">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3715]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1924" _type="InsertStringCommand" date="Sun Jun 20 23:03:42 EDT 2021" starttimestamp="1624232406782" timestamp="12215998" timestamp2="12215998">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1925" _type="InsertStringCommand" date="Sun Jun 20 23:03:42 EDT 2021" starttimestamp="1624232406782" timestamp="12215998" timestamp2="12215998">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1927" _type="InsertStringCommand" date="Sun Jun 20 23:03:42 EDT 2021" starttimestamp="1624232406782" timestamp="12216179" timestamp2="12216179">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1928" _type="InsertStringCommand" date="Sun Jun 20 23:03:42 EDT 2021" starttimestamp="1624232406782" timestamp="12216179" timestamp2="12216179">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1930" _type="InsertStringCommand" date="Sun Jun 20 23:03:43 EDT 2021" starttimestamp="1624232406782" timestamp="12216558" timestamp2="12216558">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1931" _type="InsertStringCommand" date="Sun Jun 20 23:03:43 EDT 2021" starttimestamp="1624232406782" timestamp="12216558" timestamp2="12216558">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1933" _type="InsertStringCommand" date="Sun Jun 20 23:03:43 EDT 2021" starttimestamp="1624232406782" timestamp="12216719" timestamp2="12216719">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1934" _type="InsertStringCommand" date="Sun Jun 20 23:03:43 EDT 2021" starttimestamp="1624232406782" timestamp="12216719" timestamp2="12216719">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:03:44 EDT 2021" starttimestamp="1624232406782" timestamp="12217456" />
  <Command __id="1936" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:03:44 EDT 2021" starttimestamp="1624232406782" timestamp="12217456" />
  <Command __id="1938" _type="PauseCommand" date="Sun Jun 20 23:03:47 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12220580">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3124]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1937" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:03:47 EDT 2021" starttimestamp="1624232406782" timestamp="12220580" />
  <Command __id="1939" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:03:47 EDT 2021" starttimestamp="1624232406782" timestamp="12220581" />
  <Command __id="1941" _type="PauseCommand" date="Sun Jun 20 23:03:57 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12230550">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9969]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1940" _type="MoveCaretCommand" caretOffset="3012" date="Sun Jun 20 23:03:57 EDT 2021" docOffset="3577" starttimestamp="1624232406782" timestamp="12230550" />
  <Command __id="1942" _type="MoveCaretCommand" caretOffset="3012" date="Sun Jun 20 23:03:57 EDT 2021" docOffset="3577" starttimestamp="1624232406782" timestamp="12230551" />
  <Command __id="1944" _type="PauseCommand" date="Sun Jun 20 23:04:03 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12236554">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6003]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1943" _type="MoveCaretCommand" caretOffset="2991" date="Sun Jun 20 23:04:03 EDT 2021" docOffset="3556" starttimestamp="1624232406782" timestamp="12236554" />
  <Command __id="1945" _type="MoveCaretCommand" caretOffset="2991" date="Sun Jun 20 23:04:03 EDT 2021" docOffset="3556" starttimestamp="1624232406782" timestamp="12236584" />
  <Command __id="1947" _type="PauseCommand" date="Sun Jun 20 23:04:07 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12241170">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4586]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1948" _type="InsertStringCommand" date="Sun Jun 20 23:04:07 EDT 2021" starttimestamp="1624232406782" timestamp="12241175" timestamp2="12241175">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1949" _type="InsertStringCommand" date="Sun Jun 20 23:04:07 EDT 2021" starttimestamp="1624232406782" timestamp="12241175" timestamp2="12241175">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1951" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12241555" timestamp2="12241555">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1952" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12241555" timestamp2="12241555">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1954" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12241781" timestamp2="12241781">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1955" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12241781" timestamp2="12241781">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1957" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12242028" timestamp2="12242028">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1958" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12242028" timestamp2="12242028">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1960" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12242189" timestamp2="12242189">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1961" _type="InsertStringCommand" date="Sun Jun 20 23:04:08 EDT 2021" starttimestamp="1624232406782" timestamp="12242189" timestamp2="12242189">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1963" _type="InsertStringCommand" date="Sun Jun 20 23:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="12242410" timestamp2="12242410">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1964" _type="InsertStringCommand" date="Sun Jun 20 23:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="12242410" timestamp2="12242410">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1966" _type="InsertStringCommand" date="Sun Jun 20 23:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="12242525" timestamp2="12242525">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1967" _type="InsertStringCommand" date="Sun Jun 20 23:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="12242525" timestamp2="12242525">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1968" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="12243128" />
  <Command __id="1969" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:09 EDT 2021" starttimestamp="1624232406782" timestamp="12243128" />
  <Command __id="1970" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243325" />
  <Command __id="1971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243325" />
  <Command __id="1972" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243466" />
  <Command __id="1973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243466" />
  <Command __id="1974" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243714" />
  <Command __id="1975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243714" />
  <Command __id="1976" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243958" />
  <Command __id="1977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12243958" />
  <Command __id="1978" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12244115" />
  <Command __id="1979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:10 EDT 2021" starttimestamp="1624232406782" timestamp="12244115" />
  <Command __id="1980" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:11 EDT 2021" starttimestamp="1624232406782" timestamp="12244611" />
  <Command __id="1981" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:11 EDT 2021" starttimestamp="1624232406782" timestamp="12244611" />
  <Command __id="1983" _type="PauseCommand" date="Sun Jun 20 23:04:12 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12245742">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1131]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1984" _type="InsertStringCommand" date="Sun Jun 20 23:04:12 EDT 2021" starttimestamp="1624232406782" timestamp="12245748" timestamp2="12245748">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1985" _type="InsertStringCommand" date="Sun Jun 20 23:04:12 EDT 2021" starttimestamp="1624232406782" timestamp="12245748" timestamp2="12245748">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1986" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:12 EDT 2021" starttimestamp="1624232406782" timestamp="12246123" />
  <Command __id="1987" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:12 EDT 2021" starttimestamp="1624232406782" timestamp="12246123" />
  <Command __id="1988" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246345" />
  <Command __id="1989" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246345" />
  <Command __id="1990" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246499" />
  <Command __id="1991" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246500" />
  <Command __id="1992" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246661" />
  <Command __id="1993" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246661" />
  <Command __id="1994" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246793" />
  <Command __id="1995" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246793" />
  <Command __id="1996" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246976" />
  <Command __id="1997" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12246976" />
  <Command __id="1998" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12247135" />
  <Command __id="1999" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:13 EDT 2021" starttimestamp="1624232406782" timestamp="12247136" />
  <Command __id="2000" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247291" />
  <Command __id="2001" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247291" />
  <Command __id="2002" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247472" />
  <Command __id="2003" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247472" />
  <Command __id="2004" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247651" />
  <Command __id="2005" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247651" />
  <Command __id="2006" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247832" />
  <Command __id="2007" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:14 EDT 2021" starttimestamp="1624232406782" timestamp="12247832" />
  <Command __id="2008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:15 EDT 2021" starttimestamp="1624232406782" timestamp="12248821" />
  <Command __id="2009" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:15 EDT 2021" starttimestamp="1624232406782" timestamp="12248821" />
  <Command __id="2010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:15 EDT 2021" starttimestamp="1624232406782" timestamp="12248976" />
  <Command __id="2011" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:15 EDT 2021" starttimestamp="1624232406782" timestamp="12248976" />
  <Command __id="2012" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:15 EDT 2021" starttimestamp="1624232406782" timestamp="12249135" />
  <Command __id="2013" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:15 EDT 2021" starttimestamp="1624232406782" timestamp="12249135" />
  <Command __id="2014" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:16 EDT 2021" starttimestamp="1624232406782" timestamp="12249294" />
  <Command __id="2015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:16 EDT 2021" starttimestamp="1624232406782" timestamp="12249294" />
  <Command __id="2016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:16 EDT 2021" starttimestamp="1624232406782" timestamp="12249470" />
  <Command __id="2017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:04:16 EDT 2021" starttimestamp="1624232406782" timestamp="12249470" />
  <Command __id="2018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:17 EDT 2021" starttimestamp="1624232406782" timestamp="12250329" />
  <Command __id="2019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:04:17 EDT 2021" starttimestamp="1624232406782" timestamp="12250329" />
  <Command __id="2021" _type="PauseCommand" date="Sun Jun 20 23:04:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12251433">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1104]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2022" _type="InsertStringCommand" date="Sun Jun 20 23:04:18 EDT 2021" starttimestamp="1624232406782" timestamp="12251439" timestamp2="12251439">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2023" _type="InsertStringCommand" date="Sun Jun 20 23:04:18 EDT 2021" starttimestamp="1624232406782" timestamp="12251439" timestamp2="12251439">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2025" _type="PauseCommand" date="Sun Jun 20 23:04:21 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12254918">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3479]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2024" _type="MoveCaretCommand" caretOffset="3026" date="Sun Jun 20 23:04:21 EDT 2021" docOffset="3591" starttimestamp="1624232406782" timestamp="12254918" />
  <Command __id="2026" _type="MoveCaretCommand" caretOffset="3026" date="Sun Jun 20 23:04:21 EDT 2021" docOffset="3591" starttimestamp="1624232406782" timestamp="12254918" />
  <Command __id="2028" _type="PauseCommand" date="Sun Jun 20 23:04:22 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12256073">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1155]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2029" _type="InsertStringCommand" date="Sun Jun 20 23:04:22 EDT 2021" starttimestamp="1624232406782" timestamp="12256076" timestamp2="12256076">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2030" _type="InsertStringCommand" date="Sun Jun 20 23:04:22 EDT 2021" starttimestamp="1624232406782" timestamp="12256076" timestamp2="12256076">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2032" _type="PauseCommand" date="Sun Jun 20 23:04:27 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12260575">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4499]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2033" _type="InsertStringCommand" date="Sun Jun 20 23:04:27 EDT 2021" starttimestamp="1624232406782" timestamp="12260579" timestamp2="12260579">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2034" _type="InsertStringCommand" date="Sun Jun 20 23:04:27 EDT 2021" starttimestamp="1624232406782" timestamp="12260579" timestamp2="12260579">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1811" _type="Insert" date="Sun Jun 20 22:59:49 EDT 2021" docASTNodeCount="539" docActiveCodeLength="3459" docExpressionCount="367" docLength="3559" length="14" offset="3532" repeat="13" starttimestamp="1624232406782" timestamp="11982467" timestamp2="11987467">
    <text><![CDATA[ == "approach"]]></text>
  </DocumentChange>
  <Command __id="1844" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:01:54 EDT 2021" docASTNodeCount="344" docActiveCodeLength="2140" docExpressionCount="215" docLength="3382" projectName="JavaTeaching" starttimestamp="1624232406782" timestamp="12108072">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/toolkit/BMIFrameAndMVCComposer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.toolkit;

import java.awt.GridLayout;
import java.beans.PropertyChangeListener;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JSlider;
import javax.swing.JTextField;

import bus.uigen.ObjectEditor;
import lectures.mvc.properties.ObservableBMISpreadsheet;

/*
 * TOOLKIT-BASED MVC COMPOSITION 
 * An exercise in creating our own view and controller, based not on console I/O
 * but Toolkit I/O, which supports GUIS
 * Run and interact with the program to see the two GUIS created, one by our view and controller
 * and one by that of ObjectEditor and notice that the two UIs remain in sync, thanks to a common
 * observable model
 * 

 * The controller and view are responsible f * reacting to input and refreshing the display
 * in response to model changes once the GUI is created.

 * The task of creating the GUI is a a separate one, which we will do in this composer object
 * We are essentially creating a widget tree of the kind we saw in an earlier application

 * These variables create nodes of the widget/window tree
 * 
 */
public class BMIFrameAndMVCComposer {
	
	static JFrame frame = new JFrame("BMI Spreadsheet");
	static JTextField heightField = new JTextField();
	static JLabel heightLabel = new JLabel("Height:");
	static JPanel heightPanel = new JPanel();
	static JTextField weightField = new JTextField();
	static JLabel weightLabel = new JLabel("Weight:");
	static JPanel weightPanel = new JPanel();
	static JSlider bmiSlider = new JSlider();
	static JProgressBar bmiProgressBar = new JProgressBar();
	static JPanel bmiPanel = new JPanel();	
	
	public static void main (String args[]) {
		//compose the widget nodes into a tree
		composeLabelledField(heightPanel, heightLabel, heightField);
		composeLabelledField(weightPanel, weightLabel, weightField);
		composeBMI();
		composeFrame();
		
		// compose the model and view and controller
		composeMVC();
	}
	
	public static void composeLabelledField(JPanel aPanel, 
			                 JLabel aLabel, JTextField aField) {
		aPanel.setLayout(new GridLayout(1, 2)); // align the components of aPanel in a row with two columns
		aPanel.add(aLabel);
		aPanel.add(aField);		
	}
	public static void composeBMI() {
		bmiPanel.setLayout(new GridLayout(1, 2));
		bmiPanel.add(bmiSlider);
		bmiPanel.add(bmiProgressBar);		
	}
	public static void composeFrame() {
		frame.setLayout(new GridLayout(3, 1));
		frame.add(heightPanel);
		frame.add(weightPanel);
		frame.add(bmiPanel);
		frame.setSize(250, 150);
		frame.setVisible(true);
	}
	public static void composeMVC() {
		ObservableBMISpreadsheet aBMISpreadsheet = new AnObservableBMISpreadsheet(1.77, 75);
		// The controller needs to react to events in height and weight field, it can 
		// ignore the rest of the widget tree
		new ABMISpreadsheetController(aBMISpreadsheet, heightField, weightField);
		// The view needs access to all lead level nodes showing updatable values
		PropertyChangeListener bmiSpreadsheetView = 
			new ABMISpreadsheetView(heightField, weightField, bmiSlider, bmiProgressBar);
		// Make the view an observer of the model
		aBMISpreadsheet.addPropertyChangeListener(bmiSpreadsheetView);
		
		// This is a separate MVC composition
		ObjectEditor.edit(aBMISpreadsheet);
	}
}

// Go to the controller (F3 on ABMISpreadsheetController)
]]></snapshot>
  </Command>
  <Command __id="1847" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:02:04 EDT 2021" docASTNodeCount="142" docActiveCodeLength="941" docExpressionCount="91" docLength="3047" projectName="JavaTeaching" starttimestamp="1624232406782" timestamp="12117539">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/toolkit/ABMISpreadsheetController.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package lectures.mvc.toolkit;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JTextField;

import lectures.interfaces.BMISpreadsheet;
/**
 * As we see below, ABMISpreadSheetController is not only a controller for 
 * the model, but an observer of the editable widgets, which are not models!
 * 
 * Again, a listener == observer 
 *  
 */
public class ABMISpreadsheetController 
	implements ActionListener { // The observer interface defined by the editable widgets
	JTextField height, weight;
	BMISpreadsheet bmiSpreadsheet;
	public ABMISpreadsheetController (BMISpreadsheet theBMISpreadsheet, JTextField theHeight, JTextField theWeight) {
		height = theHeight;
		weight = theWeight;
		bmiSpreadsheet = theBMISpreadsheet;
		
		/*
		 *  Making this object an observer of two different observable widgets
		 */
		height.addActionListener(this);
		weight.addActionListener(this);
	}
	/*
	 *  Method called on an observer of a textfield when a user enters new 
	 *  text and presses ENTER.
	 */
	public void actionPerformed(ActionEvent event) {
	
		JTextField source = (JTextField) event.getSource();
		String text = source.getText();
		double val = Double.parseDouble(text);
		// Depending on which observable notified, do different things
		if (source == height) {
			
			/*
			 * Step into this call to trace the actions that lead to a 
			 * new BMI value being displayed by the progress bar and slider
			 */
			bmiSpreadsheet.setHeight(val);
			
		} else {
			bmiSpreadsheet.setWeight(val);
		}		
	}	
}
/*
 * 
 * (T/F) ABMISpreadsheetController is an observer of a JSlider widget.
 * 
 * (T/F) ABMISpreadsheetController is an observer of a JTextField widget.
 * 
 * 
 * Put a break point at the start of actionPerformed so you can observe the stack
 * when it is hit.
 * 
 * Debug-run MVCToolkitMain.
 * 
 * Change the slider in the custom UI.
 * 
 * Edit the height field in the custom UI.
 * 
 * (T/F) The actionPerformed method is called in ABMISpreadsheetController
 *  each time a new character is input in the height field.
 * 
 * (T/F) The actionPerformed method is called in ABMISpreadsheetController
 *  when the user presses ENTER to finish editing the height field.
 *  
 * (T/F) The actionPerformed method is called in ABMISpreadsheetController
 *  when the slider is dragged.
 *  
 * (T/F) The actionPerformed method is called in ABMISpreadsheetController:
 *  when the the use releases the slider after dragging it.
 *  
 * (T/F) When the height field is changed, actionPeformed calls setHeight() in
 * the model.
 * 
 * (T/F) When the height field is changed, actionPeformed calls getHeight() in
 * the model.
 * 
 * (T/F) When the height field is changed, actionPeformed calls getBMI() in
 * the model.
 * 
 * (T/F) When the height field is changed, the view calls getBMI() in the model.
 * 
 * (T/F) When the height field is changed, propertyChange() is called in the view.
 *
 *  
 */
]]></snapshot>
  </Command>
  <Command __id="1850" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:02:26 EDT 2021" docASTNodeCount="344" docActiveCodeLength="2140" docExpressionCount="215" docLength="3382" projectName="JavaTeaching" starttimestamp="1624232406782" timestamp="12139227">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/toolkit/BMIFrameAndMVCComposer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.toolkit;¶¶import java.awt.GridLayout;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JPanel;¶import javax.swing.JProgressBar;¶import javax.swing.JSlider;¶import javax.swing.JTextField;¶¶import bus.uigen.ObjectEditor;¶import lectures.mvc.properties.ObservableBMISpreadsheet;¶¶/*¶ * TOOLKIT-BASED MVC COMPOSITION ¶ * An exercise in creating our own view and controller, based not on console I/O¶ * but Toolkit I/O, which supports GUIS¶ * Run and interact with the program to see the two GUIS created, one by our view and controller¶ * and one by that of ObjectEditor and notice that the two UIs remain in sync, thanks to a common¶ * observable model¶ * ¶¶ * The controller and view are responsible f * reacting to input and refreshing the display¶ * in response to model changes once the GUI is created.¶¶ * The task of creating the GUI is a a separate one, which we will do in this composer object¶ * We are essentially creating a widget tree of the kind we saw in an earlier application¶¶ * These variables create nodes of the widget/window tree¶ * ¶ */¶public class BMIFrameAndMVCComposer {¶	¶	static JFrame frame = new JFrame("BMI Spreadsheet");¶	static JTextField heightField = new JTextField();¶	static JLabel heightLabel = new JLabel("Height:");¶	static JPanel heightPanel = new JPanel();¶	static JTextField weightField = new JTextField();¶	static JLabel weightLabel = new JLabel("Weight:");¶	static JPanel weightPanel = new JPanel();¶	static JSlider bmiSlider = new JSlider();¶	static JProgressBar bmiProgressBar = new JProgressBar();¶	static JPanel bmiPanel = new JPanel();	¶	¶	public static void main (String args[]) {¶		//compose the widget nodes into a tree¶		composeLabelledField(heightPanel, heightLabel, heightField);¶		composeLabelledField(weightPanel, weightLabel, weightField);¶		composeBMI();¶		composeFrame();¶		¶		// compose the model and view and controller¶		composeMVC();¶	}¶	¶	public static void composeLabelledField(JPanel aPanel, ¶			                 JLabel aLabel, JTextField aField) {¶		aPanel.setLayout(new GridLayout(1, 2)); // align the components of aPanel in a row with two columns¶		aPanel.add(aLabel);¶		aPanel.add(aField);		¶	}¶	public static void composeBMI() {¶		bmiPanel.setLayout(new GridLayout(1, 2));¶		bmiPanel.add(bmiSlider);¶		bmiPanel.add(bmiProgressBar);		¶	}¶	public static void composeFrame() {¶		frame.setLayout(new GridLayout(3, 1));¶		frame.add(heightPanel);¶		frame.add(weightPanel);¶		frame.add(bmiPanel);¶		frame.setSize(250, 150);¶		frame.setVisible(true);¶	}¶	public static void composeMVC() {¶		ObservableBMISpreadsheet aBMISpreadsheet = new AnObservableBMISpreadsheet(1.77, 75);¶		// The controller needs to react to events in height and weight field, it can ¶		// ignore the rest of the widget tree¶		new ABMISpreadsheetController(aBMISpreadsheet, heightField, weightField);¶		// The view needs access to all lead level nodes showing updatable values¶		PropertyChangeListener bmiSpreadsheetView = ¶			new ABMISpreadsheetView(heightField, weightField, bmiSlider, bmiProgressBar);¶		// Make the view an observer of the model¶		aBMISpreadsheet.addPropertyChangeListener(bmiSpreadsheetView);¶		¶		// This is a separate MVC composition¶		ObjectEditor.edit(aBMISpreadsheet);¶	}¶}¶¶// Go to the controller (F3 on ABMISpreadsheetController)¶")]]]></diff>
  </Command>
  <Command __id="1853" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:02:33 EDT 2021" docASTNodeCount="142" docActiveCodeLength="941" docExpressionCount="91" docLength="3047" projectName="JavaTeaching" starttimestamp="1624232406782" timestamp="12146632">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/toolkit/ABMISpreadsheetController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.toolkit;¶¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶¶import javax.swing.JTextField;¶¶import lectures.interfaces.BMISpreadsheet;¶/**¶ * As we see below, ABMISpreadSheetController is not only a controller for ¶ * the model, but an observer of the editable widgets, which are not models!¶ * ¶ * Again, a listener == observer ¶ *  ¶ */¶public class ABMISpreadsheetController ¶	implements ActionListener { // The observer interface defined by the editable widgets¶	JTextField height, weight;¶	BMISpreadsheet bmiSpreadsheet;¶	public ABMISpreadsheetController (BMISpreadsheet theBMISpreadsheet, JTextField theHeight, JTextField theWeight) {¶		height = theHeight;¶		weight = theWeight;¶		bmiSpreadsheet = theBMISpreadsheet;¶		¶		/*¶		 *  Making this object an observer of two different observable widgets¶		 */¶		height.addActionListener(this);¶		weight.addActionListener(this);¶	}¶	/*¶	 *  Method called on an observer of a textfield when a user enters new ¶	 *  text and presses ENTER.¶	 */¶	public void actionPerformed(ActionEvent event) {¶	¶		JTextField source = (JTextField) event.getSource();¶		String text = source.getText();¶		double val = Double.parseDouble(text);¶		// Depending on which observable notified, do different things¶		if (source == height) {¶			¶			/*¶			 * Step into this call to trace the actions that lead to a ¶			 * new BMI value being displayed by the progress bar and slider¶			 */¶			bmiSpreadsheet.setHeight(val);¶			¶		} else {¶			bmiSpreadsheet.setWeight(val);¶		}		¶	}	¶}¶/*¶ * ¶ * (T/F) ABMISpreadsheetController is an observer of a JSlider widget.¶ * ¶ * (T/F) ABMISpreadsheetController is an observer of a JTextField widget.¶ * ¶ * ¶ * Put a break point at the start of actionPerformed so you can observe the stack¶ * when it is hit.¶ * ¶ * Debug-run MVCToolkitMain.¶ * ¶ * Change the slider in the custom UI.¶ * ¶ * Edit the height field in the custom UI.¶ * ¶ * (T/F) The actionPerformed method is called in ABMISpreadsheetController¶ *  each time a new character is input in the height field.¶ * ¶ * (T/F) The actionPerformed method is called in ABMISpreadsheetController¶ *  when the user presses ENTER to finish editing the height field.¶ *  ¶ * (T/F) The actionPerformed method is called in ABMISpreadsheetController¶ *  when the slider is dragged.¶ *  ¶ * (T/F) The actionPerformed method is called in ABMISpreadsheetController:¶ *  when the the use releases the slider after dragging it.¶ *  ¶ * (T/F) When the height field is changed, actionPeformed calls setHeight() in¶ * the model.¶ * ¶ * (T/F) When the height field is changed, actionPeformed calls getHeight() in¶ * the model.¶ * ¶ * (T/F) When the height field is changed, actionPeformed calls getBMI() in¶ * the model.¶ * ¶ * (T/F) When the height field is changed, the view calls getBMI() in the model.¶ * ¶ * (T/F) When the height field is changed, propertyChange() is called in the view.¶ *¶ *  ¶ */¶")]]]></diff>
  </Command>
  <Command __id="1856" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:02:49 EDT 2021" docASTNodeCount="344" docActiveCodeLength="2140" docExpressionCount="215" docLength="3382" projectName="JavaTeaching" starttimestamp="1624232406782" timestamp="12162272">
    <filePath><![CDATA[/Users/gabomm99/git/JavaTeaching1/src/lectures/mvc/toolkit/BMIFrameAndMVCComposer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package lectures.mvc.toolkit;¶¶import java.awt.GridLayout;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JPanel;¶import javax.swing.JProgressBar;¶import javax.swing.JSlider;¶import javax.swing.JTextField;¶¶import bus.uigen.ObjectEditor;¶import lectures.mvc.properties.ObservableBMISpreadsheet;¶¶/*¶ * TOOLKIT-BASED MVC COMPOSITION ¶ * An exercise in creating our own view and controller, based not on console I/O¶ * but Toolkit I/O, which supports GUIS¶ * Run and interact with the program to see the two GUIS created, one by our view and controller¶ * and one by that of ObjectEditor and notice that the two UIs remain in sync, thanks to a common¶ * observable model¶ * ¶¶ * The controller and view are responsible f * reacting to input and refreshing the display¶ * in response to model changes once the GUI is created.¶¶ * The task of creating the GUI is a a separate one, which we will do in this composer object¶ * We are essentially creating a widget tree of the kind we saw in an earlier application¶¶ * These variables create nodes of the widget/window tree¶ * ¶ */¶public class BMIFrameAndMVCComposer {¶	¶	static JFrame frame = new JFrame("BMI Spreadsheet");¶	static JTextField heightField = new JTextField();¶	static JLabel heightLabel = new JLabel("Height:");¶	static JPanel heightPanel = new JPanel();¶	static JTextField weightField = new JTextField();¶	static JLabel weightLabel = new JLabel("Weight:");¶	static JPanel weightPanel = new JPanel();¶	static JSlider bmiSlider = new JSlider();¶	static JProgressBar bmiProgressBar = new JProgressBar();¶	static JPanel bmiPanel = new JPanel();	¶	¶	public static void main (String args[]) {¶		//compose the widget nodes into a tree¶		composeLabelledField(heightPanel, heightLabel, heightField);¶		composeLabelledField(weightPanel, weightLabel, weightField);¶		composeBMI();¶		composeFrame();¶		¶		// compose the model and view and controller¶		composeMVC();¶	}¶	¶	public static void composeLabelledField(JPanel aPanel, ¶			                 JLabel aLabel, JTextField aField) {¶		aPanel.setLayout(new GridLayout(1, 2)); // align the components of aPanel in a row with two columns¶		aPanel.add(aLabel);¶		aPanel.add(aField);		¶	}¶	public static void composeBMI() {¶		bmiPanel.setLayout(new GridLayout(1, 2));¶		bmiPanel.add(bmiSlider);¶		bmiPanel.add(bmiProgressBar);		¶	}¶	public static void composeFrame() {¶		frame.setLayout(new GridLayout(3, 1));¶		frame.add(heightPanel);¶		frame.add(weightPanel);¶		frame.add(bmiPanel);¶		frame.setSize(250, 150);¶		frame.setVisible(true);¶	}¶	public static void composeMVC() {¶		ObservableBMISpreadsheet aBMISpreadsheet = new AnObservableBMISpreadsheet(1.77, 75);¶		// The controller needs to react to events in height and weight field, it can ¶		// ignore the rest of the widget tree¶		new ABMISpreadsheetController(aBMISpreadsheet, heightField, weightField);¶		// The view needs access to all lead level nodes showing updatable values¶		PropertyChangeListener bmiSpreadsheetView = ¶			new ABMISpreadsheetView(heightField, weightField, bmiSlider, bmiProgressBar);¶		// Make the view an observer of the model¶		aBMISpreadsheet.addPropertyChangeListener(bmiSpreadsheetView);¶		¶		// This is a separate MVC composition¶		ObjectEditor.edit(aBMISpreadsheet);¶	}¶}¶¶// Go to the controller (F3 on ABMISpreadsheetController)¶")]]]></diff>
  </Command>
  <Command __id="1859" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:02:51 EDT 2021" docASTNodeCount="539" docActiveCodeLength="3459" docExpressionCount="367" docLength="3559" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="12164389">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;"), Diff(INSERT,"¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;"), Diff(EQUAL,"¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener"), Diff(INSERT,", PropertyChangeListener"), Diff(EQUAL," {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	"), Diff(INSERT,"@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "approach")¶		¶	}¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "approach")
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="1862" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:02:56 EDT 2021" docASTNodeCount="307" docActiveCodeLength="1821" docExpressionCount="185" docLength="1896" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="12170144">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/AnObservableHelper.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶	import java.beans.PropertyChangeEvent;¶¶¶	import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶public class AnObservableHelper implements ObservableHelp {¶		public static final int MAX_SIZE = 50;¶		¶		List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶		//PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];¶		int size = 0;¶		¶		@Override¶		public List<PropertyChangeListener> getPropertyChangeListenerList() {¶			return contents;¶		}¶		@Override¶		public int size() {¶			return size;¶		}¶		@Override¶		public PropertyChangeListener get (int index) {¶			return contents.get(index);¶		}¶		¶		@Override¶		public boolean isFull() {¶			return size == MAX_SIZE;¶¶		}¶		@Override¶		public void add(PropertyChangeListener listener) {¶			if (isFull())¶				System.out.println("Adding item to a full collection");¶			else {¶				contents.add(size, listener);¶				size++;¶			}¶		}¶		¶		@Override¶		public void notifyAllListeners(PropertyChangeEvent event) {¶			for (int index = 0; index < size(); index++) {			¶				get(index).propertyChange(event);¶			}¶		}¶	¶		@Override¶		public void remove(PropertyChangeListener element) {¶			contents.remove(contents.indexOf(element));¶			size--;¶		}¶		@Override¶		public void remove(int startIndex) {¶			shiftUp(startIndex);¶			size--;¶		}¶		¶		private void shiftUp(int startIndex) {¶			for (int index = startIndex; index + 1 < size; index++)¶				contents.set(index, contents.get(index + 1));¶		}¶		@Override¶		public int indexOf(PropertyChangeListener element) {¶			int index;¶			for (index = 0; index < size && !element.equals(contents.get(index)); index++)¶				;¶			return index;¶		}¶		@Override¶		public boolean member(PropertyChangeListener element) {¶			return indexOf(element) < size;¶¶		}¶		@Override¶		public void clear() {¶			size = 0;¶		}¶	}¶¶¶")]]]></diff>
  </Command>
  <Command __id="1865" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:02:59 EDT 2021" docASTNodeCount="539" docActiveCodeLength="3459" docExpressionCount="367" docLength="3559" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="12172305">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "approach")¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1868" _type="Insert" date="Sun Jun 20 23:03:04 EDT 2021" docASTNodeCount="539" docActiveCodeLength="3469" docExpressionCount="367" docLength="3569" length="10" offset="3547" repeat="2" starttimestamp="1624232406782" timestamp="12177364" timestamp2="12177978">
    <text><![CDATA[ {
			
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1875" _type="Insert" date="Sun Jun 20 23:03:09 EDT 2021" docASTNodeCount="541" docActiveCodeLength="3470" docExpressionCount="368" docLength="3570" length="1" offset="3553" starttimestamp="1624232406782" timestamp="12182245">
    <text><![CDATA[i]]></text>
  </DocumentChange>
  <DocumentChange __id="1879" _type="Insert" date="Sun Jun 20 23:03:14 EDT 2021" docASTNodeCount="539" docActiveCodeLength="3471" docExpressionCount="367" docLength="3571" length="1" offset="3554" starttimestamp="1624232406782" timestamp="12187443">
    <text><![CDATA[f]]></text>
  </DocumentChange>
  <DocumentChange __id="1883" _type="Insert" date="Sun Jun 20 23:03:17 EDT 2021" docASTNodeCount="539" docActiveCodeLength="3473" docExpressionCount="367" docLength="3573" length="2" offset="3555" starttimestamp="1624232406782" timestamp="12190686">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="1887" _type="Insert" date="Sun Jun 20 23:03:31 EDT 2021" docASTNodeCount="544" docActiveCodeLength="3480" docExpressionCount="370" docLength="3580" length="7" offset="3556" repeat="7" starttimestamp="1624232406782" timestamp="12204902" timestamp2="12206796">
    <text><![CDATA[evt.get]]></text>
  </DocumentChange>
  <DocumentChange __id="1906" _type="Replace" date="Sun Jun 20 23:03:36 EDT 2021" docASTNodeCount="544" docActiveCodeLength="3490" docExpressionCount="370" docLength="3590" endLine="147" insertionLength="13" int_docASTNodeCount="542" int_docActiveCodeLength="3477" int_docExpressionCount="368" int_docLength="3577" length="3" offset="3560" startLine="147" starttimestamp="1624232406782" timestamp="12209907">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getNewValue()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1909" _type="Insert" date="Sun Jun 20 23:03:38 EDT 2021" docASTNodeCount="544" docActiveCodeLength="3494" docExpressionCount="370" docLength="3594" length="4" offset="3573" repeat="4" starttimestamp="1624232406782" timestamp="12211656" timestamp2="12212283">
    <text><![CDATA[ == ]]></text>
  </DocumentChange>
  <DocumentChange __id="1922" _type="Insert" date="Sun Jun 20 23:03:42 EDT 2021" docASTNodeCount="546" docActiveCodeLength="3498" docExpressionCount="372" docLength="3598" length="4" offset="3577" repeat="4" starttimestamp="1624232406782" timestamp="12215998" timestamp2="12216718">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="1946" _type="Insert" date="Sun Jun 20 23:04:07 EDT 2021" docASTNodeCount="546" docActiveCodeLength="3505" docExpressionCount="372" docLength="3605" length="7" offset="3556" repeat="7" starttimestamp="1624232406782" timestamp="12241170" timestamp2="12242522">
    <text><![CDATA[Boolean]]></text>
  </DocumentChange>
  <DocumentChange __id="1982" _type="Insert" date="Sun Jun 20 23:04:12 EDT 2021" docASTNodeCount="547" docActiveCodeLength="3506" docExpressionCount="373" docLength="3606" length="1" offset="3556" starttimestamp="1624232406782" timestamp="12245742">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="2020" _type="Insert" date="Sun Jun 20 23:04:18 EDT 2021" docASTNodeCount="549" docActiveCodeLength="3507" docExpressionCount="374" docLength="3607" length="1" offset="3564" starttimestamp="1624232406782" timestamp="12251433">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="2027" _type="Insert" date="Sun Jun 20 23:04:22 EDT 2021" docASTNodeCount="549" docActiveCodeLength="3509" docExpressionCount="374" docLength="3609" length="2" offset="3591" starttimestamp="1624232406782" timestamp="12256073">
    <text><![CDATA[ {]]></text>
  </DocumentChange>
  <DocumentChange __id="2031" _type="Insert" date="Sun Jun 20 23:04:27 EDT 2021" docASTNodeCount="549" docActiveCodeLength="3519" docExpressionCount="374" docLength="3619" length="10" offset="3593" starttimestamp="1624232406782" timestamp="12260575">
    <text><![CDATA[
				
			}]]></text>
  </DocumentChange>
  <Command __id="2036" _type="PauseCommand" date="Sun Jun 20 23:04:32 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12266033">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5454]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2035" _type="Insert" date="Sun Jun 20 23:04:32 EDT 2021" docASTNodeCount="553" docActiveCodeLength="3533" docExpressionCount="377" docLength="3633" length="14" offset="3598" repeat="14" starttimestamp="1624232406782" timestamp="12266033" timestamp2="12270806">
    <text><![CDATA[buttons.getApp]]></text>
  </DocumentChange>
  <Command __id="2037" _type="InsertStringCommand" date="Sun Jun 20 23:04:32 EDT 2021" starttimestamp="1624232406782" timestamp="12266035" timestamp2="12266035">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2038" _type="InsertStringCommand" date="Sun Jun 20 23:04:32 EDT 2021" starttimestamp="1624232406782" timestamp="12266035" timestamp2="12266035">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2040" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266304" timestamp2="12266304">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2041" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266305" timestamp2="12266305">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2043" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266484" timestamp2="12266484">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2044" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266485" timestamp2="12266485">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2046" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266641" timestamp2="12266641">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2047" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266641" timestamp2="12266641">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2049" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266825" timestamp2="12266825">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2050" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12266825" timestamp2="12266825">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2052" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12267024" timestamp2="12267024">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2053" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12267024" timestamp2="12267024">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2055" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12267208" timestamp2="12267208">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2056" _type="InsertStringCommand" date="Sun Jun 20 23:04:33 EDT 2021" starttimestamp="1624232406782" timestamp="12267208" timestamp2="12267208">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2058" _type="InsertStringCommand" date="Sun Jun 20 23:04:34 EDT 2021" starttimestamp="1624232406782" timestamp="12267613" timestamp2="12267613">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2059" _type="InsertStringCommand" date="Sun Jun 20 23:04:34 EDT 2021" starttimestamp="1624232406782" timestamp="12267613" timestamp2="12267613">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2060" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 23:04:34 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="12267623" />
  <Command __id="2068" _type="PauseCommand" date="Sun Jun 20 23:04:38 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12271774">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4151]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2067" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:04:38 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="12271774" />
  <DocumentChange __id="2069" _type="Replace" date="Sun Jun 20 23:04:38 EDT 2021" docASTNodeCount="553" docActiveCodeLength="3540" docExpressionCount="377" docLength="3640" endLine="148" insertionLength="13" int_docASTNodeCount="549" int_docActiveCodeLength="3527" int_docExpressionCount="374" int_docLength="3627" length="6" offset="3606" startLine="148" starttimestamp="1624232406782" timestamp="12271779">
    <deletedText><![CDATA[getApp]]></deletedText>
    <insertedText><![CDATA[getApproach()]]></insertedText>
  </DocumentChange>
  <Command __id="2070" _type="InsertStringCommand" date="Sun Jun 20 23:04:38 EDT 2021" starttimestamp="1624232406782" timestamp="12271787" timestamp2="12271787">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2071" _type="InsertStringCommand" date="Sun Jun 20 23:04:38 EDT 2021" starttimestamp="1624232406782" timestamp="12271788" timestamp2="12271788">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2073" _type="InsertStringCommand" date="Sun Jun 20 23:04:39 EDT 2021" starttimestamp="1624232406782" timestamp="12272295" timestamp2="12272295">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2074" _type="InsertStringCommand" date="Sun Jun 20 23:04:39 EDT 2021" starttimestamp="1624232406782" timestamp="12272295" timestamp2="12272295">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2075" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 23:04:39 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="12272306" />
  <DocumentChange __id="2072" _type="Insert" date="Sun Jun 20 23:04:39 EDT 2021" docASTNodeCount="553" docActiveCodeLength="3541" docExpressionCount="377" docLength="3641" length="1" offset="3619" starttimestamp="1624232406782" timestamp="12272291">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="2077" _type="PauseCommand" date="Sun Jun 20 23:04:59 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="12293015">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[20709]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2076" _type="Insert" date="Sun Jun 20 23:04:59 EDT 2021" docASTNodeCount="557" docActiveCodeLength="3546" docExpressionCount="381" docLength="3646" length="5" offset="3620" repeat="5" starttimestamp="1624232406782" timestamp="12293015" timestamp2="12295556">
    <text><![CDATA[setEn]]></text>
  </DocumentChange>
  <Command __id="2083" _type="PauseCommand" date="Sun Jun 20 23:05:04 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12297223">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4208]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2082" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:05:04 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="12297223" />
  <Command __id="2085" _type="InsertStringCommand" date="Sun Jun 20 23:05:04 EDT 2021" starttimestamp="1624232406782" timestamp="12297255" timestamp2="12297255">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2086" _type="InsertStringCommand" date="Sun Jun 20 23:05:04 EDT 2021" starttimestamp="1624232406782" timestamp="12297255" timestamp2="12297255">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2088" _type="PauseCommand" date="Sun Jun 20 23:05:06 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12299668">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2413]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2087" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:05:06 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="12299668" />
  <Command __id="2089" _type="MoveCaretCommand" caretOffset="3028" date="Sun Jun 20 23:05:06 EDT 2021" docOffset="3593" starttimestamp="1624232406782" timestamp="12299726" />
  <Command __id="2090" _type="MoveCaretCommand" caretOffset="3028" date="Sun Jun 20 23:05:06 EDT 2021" docOffset="3593" starttimestamp="1624232406782" timestamp="12299726" />
  <Command __id="2092" _type="PauseCommand" date="Sun Jun 20 23:05:08 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12301568">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1842]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2091" _type="MoveCaretCommand" caretOffset="3082" date="Sun Jun 20 23:05:08 EDT 2021" docOffset="3647" starttimestamp="1624232406782" timestamp="12301568" />
  <Command __id="2093" _type="MoveCaretCommand" caretOffset="3082" date="Sun Jun 20 23:05:08 EDT 2021" docOffset="3647" starttimestamp="1624232406782" timestamp="12301568" />
  <Command __id="2095" _type="PauseCommand" date="Sun Jun 20 23:05:11 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12305089">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3521]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2094" _type="SelectTextCommand" caretOffset="2943" date="Sun Jun 20 23:05:11 EDT 2021" end="3078" start="2943" starttimestamp="1624232406782" timestamp="12305089" />
  <Command __id="2096" _type="SelectTextCommand" caretOffset="2943" date="Sun Jun 20 23:05:11 EDT 2021" end="3078" start="2943" starttimestamp="1624232406782" timestamp="12305089" />
  <Command __id="2097" _type="CopyCommand" date="Sun Jun 20 23:05:12 EDT 2021" starttimestamp="1624232406782" timestamp="12305727" />
  <Command __id="2098" _type="MoveCaretCommand" caretOffset="3078" date="Sun Jun 20 23:05:13 EDT 2021" docOffset="3643" starttimestamp="1624232406782" timestamp="12306566" />
  <Command __id="2099" _type="MoveCaretCommand" caretOffset="3078" date="Sun Jun 20 23:05:13 EDT 2021" docOffset="3643" starttimestamp="1624232406782" timestamp="12306566" />
  <Command __id="2101" _type="InsertStringCommand" date="Sun Jun 20 23:05:14 EDT 2021" starttimestamp="1624232406782" timestamp="12307511" timestamp2="12307511">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2102" _type="InsertStringCommand" date="Sun Jun 20 23:05:14 EDT 2021" starttimestamp="1624232406782" timestamp="12307511" timestamp2="12307511">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2104" _type="PauseCommand" date="Sun Jun 20 23:05:15 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12308804">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1293]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:05:15 EDT 2021" starttimestamp="1624232406782" timestamp="12308806" />
  <Command __id="2106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:05:15 EDT 2021" starttimestamp="1624232406782" timestamp="12308806" />
  <Command __id="2108" _type="PauseCommand" date="Sun Jun 20 23:05:17 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12310567">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1761]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2109" _type="PasteCommand" date="Sun Jun 20 23:05:17 EDT 2021" starttimestamp="1624232406782" timestamp="12310578" />
  <Command __id="2111" _type="PauseCommand" date="Sun Jun 20 23:05:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12313260">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2682]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2110" _type="MoveCaretCommand" caretOffset="3082" date="Sun Jun 20 23:05:20 EDT 2021" docOffset="3647" starttimestamp="1624232406782" timestamp="12313260" />
  <Command __id="2112" _type="MoveCaretCommand" caretOffset="3082" date="Sun Jun 20 23:05:20 EDT 2021" docOffset="3647" starttimestamp="1624232406782" timestamp="12313260" />
  <Command __id="2114" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:05:20 EDT 2021" starttimestamp="1624232406782" timestamp="12314145" />
  <Command __id="2115" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:05:20 EDT 2021" starttimestamp="1624232406782" timestamp="12314145" />
  <Command __id="2117" _type="PauseCommand" date="Sun Jun 20 23:05:23 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12316906">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2761]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2118" _type="InsertStringCommand" date="Sun Jun 20 23:05:23 EDT 2021" starttimestamp="1624232406782" timestamp="12316909" timestamp2="12316909">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2119" _type="InsertStringCommand" date="Sun Jun 20 23:05:23 EDT 2021" starttimestamp="1624232406782" timestamp="12316909" timestamp2="12316909">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2121" _type="InsertStringCommand" date="Sun Jun 20 23:05:23 EDT 2021" starttimestamp="1624232406782" timestamp="12317045" timestamp2="12317045">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2122" _type="InsertStringCommand" date="Sun Jun 20 23:05:23 EDT 2021" starttimestamp="1624232406782" timestamp="12317045" timestamp2="12317045">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2124" _type="PauseCommand" date="Sun Jun 20 23:05:25 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12319066">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2021]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2125" _type="InsertStringCommand" date="Sun Jun 20 23:05:25 EDT 2021" starttimestamp="1624232406782" timestamp="12319070" timestamp2="12319070">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2126" _type="InsertStringCommand" date="Sun Jun 20 23:05:25 EDT 2021" starttimestamp="1624232406782" timestamp="12319070" timestamp2="12319070">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2128" _type="InsertStringCommand" date="Sun Jun 20 23:05:26 EDT 2021" starttimestamp="1624232406782" timestamp="12319566" timestamp2="12319566">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2129" _type="InsertStringCommand" date="Sun Jun 20 23:05:26 EDT 2021" starttimestamp="1624232406782" timestamp="12319566" timestamp2="12319566">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2131" _type="PauseCommand" date="Sun Jun 20 23:05:27 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12320621">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1055]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2132" _type="InsertStringCommand" date="Sun Jun 20 23:05:27 EDT 2021" starttimestamp="1624232406782" timestamp="12320625" timestamp2="12320625">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2133" _type="InsertStringCommand" date="Sun Jun 20 23:05:27 EDT 2021" starttimestamp="1624232406782" timestamp="12320625" timestamp2="12320625">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2135" _type="PauseCommand" date="Sun Jun 20 23:05:47 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="12340867">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[20242]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2134" _type="MoveCaretCommand" caretOffset="3078" date="Sun Jun 20 23:05:47 EDT 2021" docOffset="3643" starttimestamp="1624232406782" timestamp="12340867" />
  <Command __id="2136" _type="MoveCaretCommand" caretOffset="3078" date="Sun Jun 20 23:05:47 EDT 2021" docOffset="3643" starttimestamp="1624232406782" timestamp="12340868" />
  <Command __id="2138" _type="PauseCommand" date="Sun Jun 20 23:05:54 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12347846">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6978]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2139" _type="InsertStringCommand" date="Sun Jun 20 23:05:54 EDT 2021" starttimestamp="1624232406782" timestamp="12347850" timestamp2="12347850">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2140" _type="InsertStringCommand" date="Sun Jun 20 23:05:54 EDT 2021" starttimestamp="1624232406782" timestamp="12347850" timestamp2="12347850">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2142" _type="PauseCommand" date="Sun Jun 20 23:06:02 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12355334">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7484]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2141" _type="SelectTextCommand" caretOffset="3073" date="Sun Jun 20 23:06:02 EDT 2021" end="3073" start="3033" starttimestamp="1624232406782" timestamp="12355334" />
  <Command __id="2143" _type="SelectTextCommand" caretOffset="3073" date="Sun Jun 20 23:06:02 EDT 2021" end="3073" start="3033" starttimestamp="1624232406782" timestamp="12355335" />
  <Command __id="2145" _type="PauseCommand" date="Sun Jun 20 23:06:03 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12357117">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1782]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2144" _type="CopyCommand" date="Sun Jun 20 23:06:03 EDT 2021" starttimestamp="1624232406782" timestamp="12357117" />
  <Command __id="2147" _type="PauseCommand" date="Sun Jun 20 23:06:05 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12358260">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1143]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2146" _type="MoveCaretCommand" caretOffset="3079" date="Sun Jun 20 23:06:05 EDT 2021" docOffset="3644" starttimestamp="1624232406782" timestamp="12358260" />
  <Command __id="2148" _type="MoveCaretCommand" caretOffset="3079" date="Sun Jun 20 23:06:05 EDT 2021" docOffset="3644" starttimestamp="1624232406782" timestamp="12358260" />
  <Command __id="2150" _type="PauseCommand" date="Sun Jun 20 23:06:06 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12359575">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1315]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2151" _type="PasteCommand" date="Sun Jun 20 23:06:06 EDT 2021" starttimestamp="1624232406782" timestamp="12359579" />
  <Command __id="2153" _type="PauseCommand" date="Sun Jun 20 23:06:08 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12361689">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2110]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2152" _type="MoveCaretCommand" caretOffset="3117" date="Sun Jun 20 23:06:08 EDT 2021" docOffset="3682" starttimestamp="1624232406782" timestamp="12361689" />
  <Command __id="2154" _type="MoveCaretCommand" caretOffset="3117" date="Sun Jun 20 23:06:08 EDT 2021" docOffset="3682" starttimestamp="1624232406782" timestamp="12361689" />
  <Command __id="2156" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12362671" />
  <Command __id="2157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12362671" />
  <Command __id="2159" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12362857" />
  <Command __id="2160" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12362858" />
  <Command __id="2162" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12363014" />
  <Command __id="2163" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12363014" />
  <Command __id="2165" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12363149" />
  <Command __id="2166" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:09 EDT 2021" starttimestamp="1624232406782" timestamp="12363149" />
  <Command __id="2168" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:10 EDT 2021" starttimestamp="1624232406782" timestamp="12363332" />
  <Command __id="2169" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:10 EDT 2021" starttimestamp="1624232406782" timestamp="12363332" />
  <Command __id="2171" _type="PauseCommand" date="Sun Jun 20 23:06:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12365191">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1859]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2172" _type="InsertStringCommand" date="Sun Jun 20 23:06:11 EDT 2021" starttimestamp="1624232406782" timestamp="12365197" timestamp2="12365197">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2173" _type="InsertStringCommand" date="Sun Jun 20 23:06:11 EDT 2021" starttimestamp="1624232406782" timestamp="12365197" timestamp2="12365197">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2175" _type="InsertStringCommand" date="Sun Jun 20 23:06:12 EDT 2021" starttimestamp="1624232406782" timestamp="12365441" timestamp2="12365441">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2176" _type="InsertStringCommand" date="Sun Jun 20 23:06:12 EDT 2021" starttimestamp="1624232406782" timestamp="12365441" timestamp2="12365441">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2178" _type="InsertStringCommand" date="Sun Jun 20 23:06:12 EDT 2021" starttimestamp="1624232406782" timestamp="12365892" timestamp2="12365892">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2179" _type="InsertStringCommand" date="Sun Jun 20 23:06:12 EDT 2021" starttimestamp="1624232406782" timestamp="12365892" timestamp2="12365892">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2181" _type="InsertStringCommand" date="Sun Jun 20 23:06:12 EDT 2021" starttimestamp="1624232406782" timestamp="12366094" timestamp2="12366094">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2182" _type="InsertStringCommand" date="Sun Jun 20 23:06:12 EDT 2021" starttimestamp="1624232406782" timestamp="12366095" timestamp2="12366095">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2184" _type="PauseCommand" date="Sun Jun 20 23:06:14 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12367789">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1694]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2183" _type="MoveCaretCommand" caretOffset="3118" date="Sun Jun 20 23:06:14 EDT 2021" docOffset="3683" starttimestamp="1624232406782" timestamp="12367789" />
  <Command __id="2185" _type="MoveCaretCommand" caretOffset="3118" date="Sun Jun 20 23:06:14 EDT 2021" docOffset="3683" starttimestamp="1624232406782" timestamp="12367790" />
  <Command __id="2187" _type="PauseCommand" date="Sun Jun 20 23:06:15 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12369084">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1294]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2188" _type="InsertStringCommand" date="Sun Jun 20 23:06:15 EDT 2021" starttimestamp="1624232406782" timestamp="12369089" timestamp2="12369089">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="2189" _type="InsertStringCommand" date="Sun Jun 20 23:06:15 EDT 2021" starttimestamp="1624232406782" timestamp="12369089" timestamp2="12369089">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="2191" _type="PauseCommand" date="Sun Jun 20 23:06:19 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12372435">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3346]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2190" _type="MoveCaretCommand" caretOffset="3123" date="Sun Jun 20 23:06:19 EDT 2021" docOffset="3688" starttimestamp="1624232406782" timestamp="12372435" />
  <Command __id="2192" _type="MoveCaretCommand" caretOffset="3123" date="Sun Jun 20 23:06:19 EDT 2021" docOffset="3688" starttimestamp="1624232406782" timestamp="12372435" />
  <Command __id="2194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:20 EDT 2021" starttimestamp="1624232406782" timestamp="12373273" />
  <Command __id="2195" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:20 EDT 2021" starttimestamp="1624232406782" timestamp="12373273" />
  <Command __id="2197" _type="PauseCommand" date="Sun Jun 20 23:06:23 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12376474">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3201]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2196" _type="SelectTextCommand" caretOffset="3265" date="Sun Jun 20 23:06:23 EDT 2021" end="3265" start="3173" starttimestamp="1624232406782" timestamp="12376474" />
  <Command __id="2198" _type="SelectTextCommand" caretOffset="3265" date="Sun Jun 20 23:06:23 EDT 2021" end="3265" start="3173" starttimestamp="1624232406782" timestamp="12376474" />
  <Command __id="2200" _type="PauseCommand" date="Sun Jun 20 23:06:25 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12379032">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2558]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2199" _type="MoveCaretCommand" caretOffset="3217" date="Sun Jun 20 23:06:25 EDT 2021" docOffset="3782" starttimestamp="1624232406782" timestamp="12379032" />
  <Command __id="2201" _type="MoveCaretCommand" caretOffset="3217" date="Sun Jun 20 23:06:25 EDT 2021" docOffset="3782" starttimestamp="1624232406782" timestamp="12379032" />
  <Command __id="2202" _type="MoveCaretCommand" caretOffset="3173" date="Sun Jun 20 23:06:26 EDT 2021" docOffset="3738" starttimestamp="1624232406782" timestamp="12379611" />
  <Command __id="2203" _type="MoveCaretCommand" caretOffset="3173" date="Sun Jun 20 23:06:26 EDT 2021" docOffset="3738" starttimestamp="1624232406782" timestamp="12379611" />
  <Command __id="2205" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:27 EDT 2021" starttimestamp="1624232406782" timestamp="12380362" />
  <Command __id="2206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:27 EDT 2021" starttimestamp="1624232406782" timestamp="12380362" />
  <Command __id="2207" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Sun Jun 20 23:06:27 EDT 2021" starttimestamp="1624232406782" timestamp="12381081" />
  <Command __id="2208" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Sun Jun 20 23:06:27 EDT 2021" starttimestamp="1624232406782" timestamp="12381081" />
  <Command __id="2210" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:28 EDT 2021" starttimestamp="1624232406782" timestamp="12381996" />
  <Command __id="2211" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:28 EDT 2021" starttimestamp="1624232406782" timestamp="12381996" />
  <Command __id="2212" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Sun Jun 20 23:06:29 EDT 2021" starttimestamp="1624232406782" timestamp="12382786" />
  <Command __id="2213" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Sun Jun 20 23:06:29 EDT 2021" starttimestamp="1624232406782" timestamp="12382786" />
  <Command __id="2214" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:06:30 EDT 2021" starttimestamp="1624232406782" timestamp="12383233" />
  <Command __id="2215" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:06:30 EDT 2021" starttimestamp="1624232406782" timestamp="12383233" />
  <Command __id="2216" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:06:30 EDT 2021" starttimestamp="1624232406782" timestamp="12383392" />
  <Command __id="2217" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:06:30 EDT 2021" starttimestamp="1624232406782" timestamp="12383392" />
  <Command __id="2218" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:06:30 EDT 2021" starttimestamp="1624232406782" timestamp="12383705" />
  <Command __id="2219" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:06:30 EDT 2021" starttimestamp="1624232406782" timestamp="12383705" />
  <Command __id="2220" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:06:31 EDT 2021" starttimestamp="1624232406782" timestamp="12384248" />
  <Command __id="2221" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:06:31 EDT 2021" starttimestamp="1624232406782" timestamp="12384249" />
  <DocumentChange __id="2084" _type="Replace" date="Sun Jun 20 23:05:04 EDT 2021" docASTNodeCount="556" docActiveCodeLength="3559" docExpressionCount="380" docLength="3659" endLine="148" insertionLength="18" int_docASTNodeCount="553" int_docActiveCodeLength="3541" int_docExpressionCount="377" int_docLength="3641" length="5" offset="3620" startLine="148" starttimestamp="1624232406782" timestamp="12297226">
    <deletedText><![CDATA[setEn]]></deletedText>
    <insertedText><![CDATA[setEnabled(false);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2100" _type="Insert" date="Sun Jun 20 23:05:14 EDT 2021" docASTNodeCount="556" docActiveCodeLength="3563" docExpressionCount="380" docLength="3663" length="4" offset="3643" starttimestamp="1624232406782" timestamp="12307504">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2103" _type="Delete" date="Sun Jun 20 23:05:15 EDT 2021" docASTNodeCount="556" docActiveCodeLength="3562" docExpressionCount="380" docLength="3662" endLine="150" length="1" offset="3646" startLine="150" starttimestamp="1624232406782" timestamp="12308804">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2107" _type="Replace" date="Sun Jun 20 23:05:17 EDT 2021" docASTNodeCount="580" docActiveCodeLength="3701" docExpressionCount="398" docLength="3801" endLine="150" insertionLength="141" int_docASTNodeCount="556" int_docActiveCodeLength="3560" int_docExpressionCount="380" int_docLength="3660" length="2" offset="3644" startLine="150" starttimestamp="1624232406782" timestamp="12310567">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[			if(evt.getPropertyName() == "approach") {
				if((Boolean)evt.getNewValue() == true) {
					buttons.getApproach().setEnabled(false);
				}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2113" _type="Delete" date="Sun Jun 20 23:05:20 EDT 2021" docASTNodeCount="580" docActiveCodeLength="3700" docExpressionCount="398" docLength="3800" endLine="150" length="1" offset="3646" startLine="150" starttimestamp="1624232406782" timestamp="12314142">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2116" _type="Insert" date="Sun Jun 20 23:05:23 EDT 2021" docASTNodeCount="582" docActiveCodeLength="3702" docExpressionCount="400" docLength="3802" length="2" offset="3646" repeat="2" starttimestamp="1624232406782" timestamp="12316906" timestamp2="12317042">
    <text><![CDATA[el]]></text>
  </DocumentChange>
  <DocumentChange __id="2123" _type="Insert" date="Sun Jun 20 23:05:25 EDT 2021" docASTNodeCount="582" docActiveCodeLength="3703" docExpressionCount="400" docLength="3803" length="1" offset="3648" starttimestamp="1624232406782" timestamp="12319066">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="2127" _type="Replace" date="Sun Jun 20 23:05:26 EDT 2021" docASTNodeCount="582" docActiveCodeLength="3705" docExpressionCount="400" docLength="3805" endLine="150" insertionLength="7" int_docASTNodeCount="580" int_docActiveCodeLength="3698" int_docExpressionCount="398" int_docLength="3798" length="5" offset="3644" startLine="150" starttimestamp="1624232406782" timestamp="12319563">
    <deletedText><![CDATA[		els]]></deletedText>
    <insertedText><![CDATA[			else]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2130" _type="Insert" date="Sun Jun 20 23:05:27 EDT 2021" docASTNodeCount="580" docActiveCodeLength="3706" docExpressionCount="398" docLength="3806" length="1" offset="3651" starttimestamp="1624232406782" timestamp="12320621">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="2137" _type="Insert" date="Sun Jun 20 23:05:54 EDT 2021" docASTNodeCount="580" docActiveCodeLength="3707" docExpressionCount="398" docLength="3807" length="1" offset="3643" starttimestamp="1624232406782" timestamp="12347846">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="2149" _type="Insert" date="Sun Jun 20 23:06:06 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3747" docExpressionCount="404" docLength="3847" length="40" offset="3644" starttimestamp="1624232406782" timestamp="12359575">
    <text><![CDATA[buttons.getApproach().setEnabled(false);]]></text>
  </DocumentChange>
  <DocumentChange __id="2155" _type="Delete" date="Sun Jun 20 23:06:09 EDT 2021" docASTNodeCount="586" docActiveCodeLength="3742" docExpressionCount="403" docLength="3842" endLine="149" length="5" offset="3677" repeat="5" startLine="149" starttimestamp="1624232406782" timestamp="12362668" timestamp2="12363327">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <DocumentChange __id="2170" _type="Insert" date="Sun Jun 20 23:06:11 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3746" docExpressionCount="404" docLength="3846" length="4" offset="3677" repeat="4" starttimestamp="1624232406782" timestamp="12365191" timestamp2="12366091">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="2186" _type="Insert" date="Sun Jun 20 23:06:15 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3747" docExpressionCount="404" docLength="3847" length="1" offset="3683" starttimestamp="1624232406782" timestamp="12369084">
    <text><![CDATA[}]]></text>
  </DocumentChange>
  <DocumentChange __id="2193" _type="Delete" date="Sun Jun 20 23:06:20 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3746" docExpressionCount="404" docLength="3846" endLine="150" length="1" offset="3687" startLine="150" starttimestamp="1624232406782" timestamp="12373270">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2204" _type="Delete" date="Sun Jun 20 23:06:27 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3745" docExpressionCount="404" docLength="3845" endLine="151" length="1" offset="3737" startLine="151" starttimestamp="1624232406782" timestamp="12380359">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2209" _type="Delete" date="Sun Jun 20 23:06:28 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3744" docExpressionCount="404" docLength="3844" endLine="152" length="1" offset="3780" startLine="152" starttimestamp="1624232406782" timestamp="12381995">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="2223" _type="PauseCommand" date="Sun Jun 20 23:06:43 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12396731">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12482]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2222" _type="MoveCaretCommand" caretOffset="3164" date="Sun Jun 20 23:06:43 EDT 2021" docOffset="3729" starttimestamp="1624232406782" timestamp="12396731" />
  <Command __id="2224" _type="MoveCaretCommand" caretOffset="3164" date="Sun Jun 20 23:06:43 EDT 2021" docOffset="3729" starttimestamp="1624232406782" timestamp="12396734" />
  <DocumentChange __id="2225" _type="Delete" date="Sun Jun 20 23:06:44 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3736" docExpressionCount="404" docLength="3836" endLine="150" length="8" offset="3721" repeat="8" startLine="150" starttimestamp="1624232406782" timestamp="12397633" timestamp2="12400672">
    <text><![CDATA[approach]]></text>
  </DocumentChange>
  <Command __id="2226" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12397635" />
  <Command __id="2227" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12397636" />
  <Command __id="2229" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12397799" />
  <Command __id="2230" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12397799" />
  <Command __id="2232" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12397934" />
  <Command __id="2233" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12397934" />
  <Command __id="2235" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12398136" />
  <Command __id="2236" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:44 EDT 2021" starttimestamp="1624232406782" timestamp="12398136" />
  <Command __id="2238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:45 EDT 2021" starttimestamp="1624232406782" timestamp="12398403" />
  <Command __id="2239" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:45 EDT 2021" starttimestamp="1624232406782" timestamp="12398403" />
  <Command __id="2241" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:45 EDT 2021" starttimestamp="1624232406782" timestamp="12398560" />
  <Command __id="2242" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:45 EDT 2021" starttimestamp="1624232406782" timestamp="12398561" />
  <Command __id="2245" _type="PauseCommand" date="Sun Jun 20 23:06:47 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12400253">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1692]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2244" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:47 EDT 2021" starttimestamp="1624232406782" timestamp="12400253" />
  <Command __id="2246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:47 EDT 2021" starttimestamp="1624232406782" timestamp="12400253" />
  <Command __id="2248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:47 EDT 2021" starttimestamp="1624232406782" timestamp="12400675" />
  <Command __id="2249" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:06:47 EDT 2021" starttimestamp="1624232406782" timestamp="12400675" />
  <Command __id="2251" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401220" timestamp2="12401220">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2252" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401221" timestamp2="12401221">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2254" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401421" timestamp2="12401421">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2255" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401421" timestamp2="12401421">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2257" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401670" timestamp2="12401670">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2258" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401670" timestamp2="12401670">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2260" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401827" timestamp2="12401827">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2261" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12401827" timestamp2="12401827">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2263" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12402007" timestamp2="12402007">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2264" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12402007" timestamp2="12402007">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2266" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12402210" timestamp2="12402210">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2267" _type="InsertStringCommand" date="Sun Jun 20 23:06:48 EDT 2021" starttimestamp="1624232406782" timestamp="12402210" timestamp2="12402210">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2269" _type="PauseCommand" date="Sun Jun 20 23:07:06 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12419905">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[17695]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2270" _type="MoveCaretCommand" caretOffset="7596" date="Sun Jun 20 23:07:07 EDT 2021" docOffset="8518" starttimestamp="1624232406782" timestamp="12420226" />
  <Command __id="2272" _type="PauseCommand" date="Sun Jun 20 23:07:08 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12422025">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1799]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2274" _type="MoveCaretCommand" caretOffset="3162" date="Sun Jun 20 23:07:09 EDT 2021" docOffset="3727" starttimestamp="1624232406782" timestamp="12422753" />
  <Command __id="2275" _type="MoveCaretCommand" caretOffset="7596" date="Sun Jun 20 23:07:09 EDT 2021" docOffset="8518" starttimestamp="1624232406782" timestamp="12422855" />
  <Command __id="2277" _type="PauseCommand" date="Sun Jun 20 23:07:32 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="12445751">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[22896]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2276" _type="MoveCaretCommand" caretOffset="5760" date="Sun Jun 20 23:07:32 EDT 2021" docOffset="6682" starttimestamp="1624232406782" timestamp="12445751" />
  <Command __id="2278" _type="MoveCaretCommand" caretOffset="5760" date="Sun Jun 20 23:07:32 EDT 2021" docOffset="6682" starttimestamp="1624232406782" timestamp="12445973" />
  <Command __id="2279" _type="MoveCaretCommand" caretOffset="5735" date="Sun Jun 20 23:07:33 EDT 2021" docOffset="6657" starttimestamp="1624232406782" timestamp="12446920" />
  <Command __id="2280" _type="SelectTextCommand" caretOffset="5739" date="Sun Jun 20 23:07:33 EDT 2021" end="5739" start="5724" starttimestamp="1624232406782" timestamp="12447068" />
  <Command __id="2281" _type="SelectTextCommand" caretOffset="5741" date="Sun Jun 20 23:07:34 EDT 2021" end="5741" start="5686" starttimestamp="1624232406782" timestamp="12447247" />
  <Command __id="2283" _type="PauseCommand" date="Sun Jun 20 23:08:49 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="12522773">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[75526]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2284" _type="MoveCaretCommand" caretOffset="3207" date="Sun Jun 20 23:08:49 EDT 2021" docOffset="3772" starttimestamp="1624232406782" timestamp="12522923" />
  <Command __id="2285" _type="MoveCaretCommand" caretOffset="3207" date="Sun Jun 20 23:08:49 EDT 2021" docOffset="3772" starttimestamp="1624232406782" timestamp="12522926" />
  <Command __id="2287" _type="PauseCommand" date="Sun Jun 20 23:10:45 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="12638711">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[115785]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2286" _type="MoveCaretCommand" caretOffset="2980" date="Sun Jun 20 23:10:45 EDT 2021" docOffset="3545" starttimestamp="1624232406782" timestamp="12638711" />
  <Command __id="2288" _type="MoveCaretCommand" caretOffset="2980" date="Sun Jun 20 23:10:45 EDT 2021" docOffset="3545" starttimestamp="1624232406782" timestamp="12638711" />
  <Command __id="2290" _type="PauseCommand" date="Sun Jun 20 23:10:46 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12639740">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1029]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2291" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12639742" />
  <Command __id="2292" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12639742" />
  <Command __id="2294" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12639895" />
  <Command __id="2295" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12639895" />
  <Command __id="2297" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12640079" />
  <Command __id="2298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12640079" />
  <Command __id="2300" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12640213" />
  <Command __id="2301" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:46 EDT 2021" starttimestamp="1624232406782" timestamp="12640214" />
  <Command __id="2303" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:47 EDT 2021" starttimestamp="1624232406782" timestamp="12640395" />
  <Command __id="2304" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:47 EDT 2021" starttimestamp="1624232406782" timestamp="12640395" />
  <Command __id="2306" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:47 EDT 2021" starttimestamp="1624232406782" timestamp="12640574" />
  <Command __id="2307" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:47 EDT 2021" starttimestamp="1624232406782" timestamp="12640574" />
  <Command __id="2309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:47 EDT 2021" starttimestamp="1624232406782" timestamp="12640933" />
  <Command __id="2310" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:47 EDT 2021" starttimestamp="1624232406782" timestamp="12640933" />
  <Command __id="2312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:48 EDT 2021" starttimestamp="1624232406782" timestamp="12641448" />
  <Command __id="2313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:10:48 EDT 2021" starttimestamp="1624232406782" timestamp="12641448" />
  <Command __id="2315" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642258" timestamp2="12642258">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2316" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642259" timestamp2="12642259">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2318" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642349" timestamp2="12642349">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2319" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642350" timestamp2="12642350">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2321" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642551" timestamp2="12642551">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2322" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642551" timestamp2="12642551">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2324" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642753" timestamp2="12642753">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2325" _type="InsertStringCommand" date="Sun Jun 20 23:10:49 EDT 2021" starttimestamp="1624232406782" timestamp="12642753" timestamp2="12642753">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="2250" _type="Insert" date="Sun Jun 20 23:06:47 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3742" docExpressionCount="404" docLength="3842" length="6" offset="3721" repeat="6" starttimestamp="1624232406782" timestamp="12401216" timestamp2="12402206">
    <text><![CDATA[passed]]></text>
  </DocumentChange>
  <Command __id="2268" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:07:06 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="12419905">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶	"), Diff(INSERT,"	helper.add(aListener);¶	"), Diff(EQUAL,"}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
    <snapshot><![CDATA[package grail.compositeFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimationCommand;
import AnimationMethods.BridgeSceneAnimator;
import AnimationMethods.BridgeSceneGuardAnimation;
import AnimationMethods.SceneLockedAnimationCommand;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.extras.Tables;
import grail.geometryFigs.ACircle;
import grail.geometryFigs.CharHeads;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import tags301.Comp301Tags;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;
import util.misc.ThreadSupport;
import util.models.PropertyListenerRegisterer;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags(Comp301Tags.BRIDGE_SCENE)

public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {
	
	static final String
		ARTHUR = "images/arthur.jpg",
		GALAHAD = "images/galahad.jpg",
		GUARD = "images/guard.jpg",
		LANCELOT = "images/lancelot.jpg",
		ROBIN = "images/robin.jpg",
		ARTHUR_NAME = "Arthur",
		GALAHAD_NAME = "Galahad",
		GUARD_NAME = "Guard",
		LANCELOT_NAME = "Lancelot",
		ROBIN_NAME = "Robin";
	static final int
		ZERO_EXTRA = 0,
		HEAD_WIDTH = 40,
		HEAD_HEIGHT = 45,
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Z_X = 480,
		GUARD_Z_Y = 495,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660,
		GORGE_X = 270,
		GORGE_Y = -200,
		OFF_SET = 20,
		SLEEP_TIME = 50,
		PASSED_KNIGHT = 500,
		KNIGHTS_X = 380;
	static final double
	ZONE_RAD = 80,
	ZONE_ANGLE = Math.PI/6;
	
	
	Avatars arthur;
	Avatars galahad;
	Avatars guard;
	Avatars lancelot;
	Avatars robin;
	Gorges bridgeGorge;
	CircleFig knightZone;
	CircleFig guardZone;
	boolean occupationState = false;
	Avatars avatarInZone;
	boolean knightsTurn = false;
	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();
	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();
	Object arthurAnimator; 
	Object galahadAnimator;
	Object lancelotAnimator; 
	Object robinAnimator; 
	
	public FiveChars() {
		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);
		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);
		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);
		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);
		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);
		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); 
		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); 
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		arthur = new MontyAvatar(arthurHead);
		aCollection.put(ARTHUR_NAME, arthur);
		galahad = new MontyAvatar(galahadHead);
		aCollection.put(GALAHAD_NAME, galahad);
		guard = new MontyAvatar(guardHead);
		aCollection.put(GUARD_NAME, guard);
		lancelot = new MontyAvatar(lancelotHead);
		aCollection.put(LANCELOT_NAME, lancelot);
		robin = new MontyAvatar(robinHead);
		aCollection.put(ROBIN_NAME, robin);
		bridgeGorge = new GorgeWithBridge();
		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);
		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);
		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);
		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);
		
	}
	
	@Override
	public Avatars getArthur() {
		return arthur;
	}
	@Override
	public Avatars getGalahad() {
		return galahad;
	}
	@Override
	public Avatars getGuard() {
		return guard;
	}
	@Override
	public Avatars getLancelot() {
		return lancelot;
	}
	@Override
	public Avatars getRobin() {
		return robin;
	}
	@Override
	public Gorges getGorge() {
		return bridgeGorge;
	}
	@Override
	public MovingL getGuardArea() {
		return guardZone;
		
	}
	@Override
	public MovingL getKnightArea() {
		return knightZone;
	}
	@Override
	@Visible(false)
	public void newOccupation(boolean newState) {
		occupationState = newState;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));
		
	}
	@Override
	@Visible(false)
	public void updateSpeakTurn(boolean newTurn) {
		knightsTurn = newTurn;
		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));
	}
	public boolean preApproach() {
		System.out.println("in precondition");
		//boolean condition1 = (occupationState == false);
		return !occupationState;
	}
	@Override
	public void approach(Avatars anAvatar) {
		assert preApproach() : "AREA OCCUPIED";
		//if (occupationState) {return;}
		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());
		newOccupation(true);
		avatarInZone = anAvatar;
	}
	@Override
	public void approach(String name) {
		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);
		approach(avatar);
	}
	
	public boolean preSay() {
		boolean condition = (occupationState == true);
		return condition;
	}
	@Override
	public void say(String question) {
		assert preSay();
		//if(!occupationState) {return;}
		if(!knightsTurn) {
			avatarInZone.getStringShape().setText("");
			guard.getStringShape().setText(question);
			updateSpeakTurn(true);
		}
		else {
			guard.getStringShape().setText("");
			avatarInZone.getStringShape().setText(question);
			updateSpeakTurn(false);	
			}
	}
	@Override
	@Visible(false)
	public boolean getOccupied() {
		return occupationState;
	}
	@Override
	@Visible(false)
	public boolean getKnightTurn() {
		return knightsTurn;
	}
	@Override
	@Visible(false)
	public Avatars getInteractingKnight() {
		if (occupationState) {return avatarInZone;} 
		return null;
	}
	
	
	public boolean prePassed() {
		boolean condition = !knightsTurn && occupationState;
		return condition;
	}
	
	@Override
	public void passed() {
		assert prePassed();
		if (!knightsTurn && occupationState) {
			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);
			newOccupation(false);
			//avatarInZone = null;
		}
	
	}
	
	
	public boolean preFailed() {
		boolean condition1 = occupationState;
		return condition1;
		
	}
	@Override
	public void failed() {
		assert preFailed();
		if (!knightsTurn){ //&& occupationState) {
			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);
			newOccupation(false);
		}
		else { //&& occupationState) {
			guard.moveAvatar(GORGE_X, GORGE_Y);
		}
	}
	
	@Override
	public void scroll(int moveInX, int moveInY) {
		arthur.moveAvatar(moveInX, moveInY);
		galahad.moveAvatar(moveInX, moveInY);
		guard.moveAvatar(moveInX, moveInY);
		lancelot.moveAvatar(moveInX, moveInY);
		robin.moveAvatar(moveInX, moveInY);
		bridgeGorge.moveBridge(moveInX, moveInY);
		int oldKnightZonex = knightZone.getX();
		int oldKnightZoney = knightZone.getY();
		int oldGuardZonex = guardZone.getX();
		int oldGuardZoney = guardZone.getY();
		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);
		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);
	}

	@Override
	//public void addPropertyChangeListener(PropertyChangeListener arg0) {
	//	helper.add(arg0);	
	//}
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);
		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);
		helper.add(aListener);
	}
	@Override
	public synchronized void asynchronousArthur() {
		Thread aThread = new Thread((Runnable) arthurAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	@Override
	public synchronized void asynchronousGalahad() {
		Thread aThread = new Thread((Runnable) galahadAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousLancelot() {
		Thread aThread = new Thread((Runnable) lancelotAnimator);
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousRobin() {
		Thread aThread = new Thread((Runnable) robinAnimator);;
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void asynchronousGuard() {
		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);

	}
	
	
	@Override
	public synchronized void waitingArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	
	@Override
	public synchronized void waitingGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	@Override
	public synchronized void waitingRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	@Override
	public synchronized void startAnimation() {
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	@Override
	public synchronized void lockstepArthur() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	} 
	
	

	@Override
	public synchronized void lockstepGalahad() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	
	

	@Override
	public synchronized void lockstepLancelot() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	

	@Override
	public synchronized void lockstepRobin() {
		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
	}
	
	public synchronized void lockstepGuard() {
		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));
		aThread.start();
		ThreadSupport.sleep(SLEEP_TIME);
		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();
	}
	
	
	
	
	
	
	
	
	
	
}	
]]></snapshot>
  </Command>
  <Command __id="2271" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:07:08 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3742" docExpressionCount="404" docLength="3842" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="12422025">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "approach")"), Diff(INSERT," {¶			if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶			} buttons.getApproach().setEnabled(true);}¶		else if(evt.getPropertyName() == "passed") {¶			if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶				}¶		}"), Diff(EQUAL,"¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "approach") {
			if((Boolean)evt.getNewValue() == true) {
				buttons.getApproach().setEnabled(false);
			} buttons.getApproach().setEnabled(true);}
		else if(evt.getPropertyName() == "passed") {
			if((Boolean)evt.getNewValue() == true) {
				buttons.getApproach().setEnabled(false);
				}
		}
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="2273" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:07:08 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="12422115">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶		helper.add(aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="2282" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:08:49 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3742" docExpressionCount="404" docLength="3842" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="12522773">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "approach") {¶			if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶			} buttons.getApproach().setEnabled(true);}¶		else if(evt.getPropertyName() == "passed") {¶			if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶				}¶		}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2289" _type="Delete" date="Sun Jun 20 23:10:46 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3734" docExpressionCount="404" docLength="3834" endLine="146" length="8" offset="3537" repeat="8" startLine="146" starttimestamp="1624232406782" timestamp="12639740" timestamp2="12641445">
    <text><![CDATA[approach]]></text>
  </DocumentChange>
  <DocumentChange __id="2314" _type="Insert" date="Sun Jun 20 23:10:49 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3738" docExpressionCount="404" docLength="3838" length="4" offset="3537" repeat="4" starttimestamp="1624232406782" timestamp="12642255" timestamp2="12642750">
    <text><![CDATA[this]]></text>
  </DocumentChange>
  <Command __id="2327" _type="PauseCommand" date="Sun Jun 20 23:10:55 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12648394">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5641]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2326" _type="MoveCaretCommand" caretOffset="2980" date="Sun Jun 20 23:10:55 EDT 2021" docOffset="3545" starttimestamp="1624232406782" timestamp="12648394" />
  <Command __id="2328" _type="MoveCaretCommand" caretOffset="2980" date="Sun Jun 20 23:10:55 EDT 2021" docOffset="3545" starttimestamp="1624232406782" timestamp="12648394" />
  <Command __id="2330" _type="InsertStringCommand" date="Sun Jun 20 23:10:56 EDT 2021" starttimestamp="1624232406782" timestamp="12649375" timestamp2="12649375">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2331" _type="InsertStringCommand" date="Sun Jun 20 23:10:56 EDT 2021" starttimestamp="1624232406782" timestamp="12649375" timestamp2="12649375">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2334" _type="PauseCommand" date="Sun Jun 20 23:10:57 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12650946">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1571]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2333" _type="InsertStringCommand" date="Sun Jun 20 23:10:57 EDT 2021" starttimestamp="1624232406782" timestamp="12650946" timestamp2="12650946">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2335" _type="InsertStringCommand" date="Sun Jun 20 23:10:57 EDT 2021" starttimestamp="1624232406782" timestamp="12650946" timestamp2="12650946">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2337" _type="InsertStringCommand" date="Sun Jun 20 23:10:57 EDT 2021" starttimestamp="1624232406782" timestamp="12651170" timestamp2="12651170">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2338" _type="InsertStringCommand" date="Sun Jun 20 23:10:57 EDT 2021" starttimestamp="1624232406782" timestamp="12651171" timestamp2="12651171">
    <data><![CDATA[f]]></data>
  </Command>
  <DocumentChange __id="2329" _type="Insert" date="Sun Jun 20 23:10:56 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3744" docExpressionCount="404" docLength="3844" length="6" offset="3545" repeat="3" starttimestamp="1624232406782" timestamp="12649367" timestamp2="12651168">
    <text><![CDATA[
			if]]></text>
  </DocumentChange>
  <Command __id="2340" _type="PauseCommand" date="Sun Jun 20 23:11:00 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12654141">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2970]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2341" _type="InsertStringCommand" date="Sun Jun 20 23:11:00 EDT 2021" starttimestamp="1624232406782" timestamp="12654145" timestamp2="12654145">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2342" _type="InsertStringCommand" date="Sun Jun 20 23:11:00 EDT 2021" starttimestamp="1624232406782" timestamp="12654145" timestamp2="12654145">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2344" _type="InsertStringCommand" date="Sun Jun 20 23:11:01 EDT 2021" starttimestamp="1624232406782" timestamp="12654750" timestamp2="12654750">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2345" _type="InsertStringCommand" date="Sun Jun 20 23:11:01 EDT 2021" starttimestamp="1624232406782" timestamp="12654750" timestamp2="12654750">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2347" _type="InsertStringCommand" date="Sun Jun 20 23:11:01 EDT 2021" starttimestamp="1624232406782" timestamp="12655041" timestamp2="12655041">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2348" _type="InsertStringCommand" date="Sun Jun 20 23:11:01 EDT 2021" starttimestamp="1624232406782" timestamp="12655041" timestamp2="12655041">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2350" _type="InsertStringCommand" date="Sun Jun 20 23:11:02 EDT 2021" starttimestamp="1624232406782" timestamp="12655397" timestamp2="12655397">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2351" _type="InsertStringCommand" date="Sun Jun 20 23:11:02 EDT 2021" starttimestamp="1624232406782" timestamp="12655397" timestamp2="12655397">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2354" _type="PauseCommand" date="Sun Jun 20 23:11:04 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12657223">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1826]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2353" _type="InsertStringCommand" date="Sun Jun 20 23:11:04 EDT 2021" starttimestamp="1624232406782" timestamp="12657223" timestamp2="12657223">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2355" _type="InsertStringCommand" date="Sun Jun 20 23:11:04 EDT 2021" starttimestamp="1624232406782" timestamp="12657223" timestamp2="12657223">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2356" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 23:11:04 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="12657234" />
  <DocumentChange __id="2339" _type="Insert" date="Sun Jun 20 23:11:00 EDT 2021" docASTNodeCount="591" docActiveCodeLength="3753" docExpressionCount="407" docLength="3853" length="9" offset="3551" repeat="8" starttimestamp="1624232406782" timestamp="12654141" timestamp2="12658640">
    <text><![CDATA[(evt.get)]]></text>
  </DocumentChange>
  <DocumentChange __id="2362" _type="Replace" date="Sun Jun 20 23:11:07 EDT 2021" docASTNodeCount="591" docActiveCodeLength="3763" docExpressionCount="407" docLength="3863" endLine="147" insertionLength="13" int_docASTNodeCount="591" int_docActiveCodeLength="3750" int_docExpressionCount="406" int_docLength="3850" length="3" offset="3556" startLine="147" starttimestamp="1624232406782" timestamp="12660738">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getOldValue()]]></insertedText>
  </DocumentChange>
  <Command __id="2361" _type="PauseCommand" date="Sun Jun 20 23:11:07 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12660733">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3499]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2360" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:11:07 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="12660733" />
  <Command __id="2363" _type="InsertStringCommand" date="Sun Jun 20 23:11:07 EDT 2021" starttimestamp="1624232406782" timestamp="12660742" timestamp2="12660742">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2364" _type="InsertStringCommand" date="Sun Jun 20 23:11:07 EDT 2021" starttimestamp="1624232406782" timestamp="12660742" timestamp2="12660742">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2366" _type="InsertStringCommand" date="Sun Jun 20 23:11:08 EDT 2021" starttimestamp="1624232406782" timestamp="12661297" timestamp2="12661297">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2367" _type="InsertStringCommand" date="Sun Jun 20 23:11:08 EDT 2021" starttimestamp="1624232406782" timestamp="12661297" timestamp2="12661297">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2369" _type="InsertStringCommand" date="Sun Jun 20 23:11:09 EDT 2021" starttimestamp="1624232406782" timestamp="12662286" timestamp2="12662286">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2370" _type="InsertStringCommand" date="Sun Jun 20 23:11:09 EDT 2021" starttimestamp="1624232406782" timestamp="12662286" timestamp2="12662286">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2372" _type="InsertStringCommand" date="Sun Jun 20 23:11:09 EDT 2021" starttimestamp="1624232406782" timestamp="12662616" timestamp2="12662616">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2373" _type="InsertStringCommand" date="Sun Jun 20 23:11:09 EDT 2021" starttimestamp="1624232406782" timestamp="12662616" timestamp2="12662616">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2376" _type="PauseCommand" date="Sun Jun 20 23:11:10 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12663884">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1268]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2375" _type="InsertStringCommand" date="Sun Jun 20 23:11:10 EDT 2021" starttimestamp="1624232406782" timestamp="12663884" timestamp2="12663884">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2377" _type="InsertStringCommand" date="Sun Jun 20 23:11:10 EDT 2021" starttimestamp="1624232406782" timestamp="12663884" timestamp2="12663884">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2379" _type="PauseCommand" date="Sun Jun 20 23:11:14 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12667525">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3641]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2380" _type="InsertStringCommand" date="Sun Jun 20 23:11:14 EDT 2021" starttimestamp="1624232406782" timestamp="12667528" timestamp2="12667528">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="2381" _type="InsertStringCommand" date="Sun Jun 20 23:11:14 EDT 2021" starttimestamp="1624232406782" timestamp="12667528" timestamp2="12667528">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="2383" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12668316" timestamp2="12668316">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2384" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12668316" timestamp2="12668316">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2386" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12668606" timestamp2="12668606">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2387" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12668606" timestamp2="12668606">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2389" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12668812" timestamp2="12668812">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2390" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12668812" timestamp2="12668812">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2392" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12669191" timestamp2="12669191">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2393" _type="InsertStringCommand" date="Sun Jun 20 23:11:15 EDT 2021" starttimestamp="1624232406782" timestamp="12669191" timestamp2="12669191">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2395" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669261" timestamp2="12669261">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2396" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669261" timestamp2="12669261">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2398" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669394" timestamp2="12669394">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2399" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669394" timestamp2="12669394">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2401" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669499" timestamp2="12669499">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2402" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669499" timestamp2="12669499">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2404" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669727" timestamp2="12669727">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2405" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669727" timestamp2="12669727">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2407" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669821" timestamp2="12669821">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2408" _type="InsertStringCommand" date="Sun Jun 20 23:11:16 EDT 2021" starttimestamp="1624232406782" timestamp="12669821" timestamp2="12669821">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2410" _type="PauseCommand" date="Sun Jun 20 23:11:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12671238">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1417]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2409" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:11:18 EDT 2021" starttimestamp="1624232406782" timestamp="12671238" />
  <Command __id="2411" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:11:18 EDT 2021" starttimestamp="1624232406782" timestamp="12671239" />
  <Command __id="2413" _type="PauseCommand" date="Sun Jun 20 23:11:19 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12672924">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1685]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2412" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:11:19 EDT 2021" starttimestamp="1624232406782" timestamp="12672924" />
  <Command __id="2414" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:11:19 EDT 2021" starttimestamp="1624232406782" timestamp="12672924" />
  <Command __id="2416" _type="PauseCommand" date="Sun Jun 20 23:11:21 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12674839">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1915]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2417" _type="InsertStringCommand" date="Sun Jun 20 23:11:21 EDT 2021" starttimestamp="1624232406782" timestamp="12674842" timestamp2="12674842">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2418" _type="InsertStringCommand" date="Sun Jun 20 23:11:21 EDT 2021" starttimestamp="1624232406782" timestamp="12674842" timestamp2="12674842">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2420" _type="PauseCommand" date="Sun Jun 20 23:11:32 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12685838">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[10995]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2419" _type="MoveCaretCommand" caretOffset="3026" date="Sun Jun 20 23:11:32 EDT 2021" docOffset="3591" starttimestamp="1624232406782" timestamp="12685837" />
  <Command __id="2421" _type="MoveCaretCommand" caretOffset="3026" date="Sun Jun 20 23:11:32 EDT 2021" docOffset="3591" starttimestamp="1624232406782" timestamp="12685838" />
  <Command __id="2423" _type="PauseCommand" date="Sun Jun 20 23:11:35 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12688771">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2933]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2424" _type="InsertStringCommand" date="Sun Jun 20 23:11:35 EDT 2021" starttimestamp="1624232406782" timestamp="12688776" timestamp2="12688776">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2425" _type="InsertStringCommand" date="Sun Jun 20 23:11:35 EDT 2021" starttimestamp="1624232406782" timestamp="12688776" timestamp2="12688776">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2427" _type="PauseCommand" date="Sun Jun 20 23:11:38 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12691943">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3167]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2426" _type="MoveCaretCommand" caretOffset="3067" date="Sun Jun 20 23:11:38 EDT 2021" docOffset="3632" starttimestamp="1624232406782" timestamp="12691943" />
  <Command __id="2428" _type="MoveCaretCommand" caretOffset="3067" date="Sun Jun 20 23:11:38 EDT 2021" docOffset="3632" starttimestamp="1624232406782" timestamp="12691943" />
  <Command __id="2430" _type="PauseCommand" date="Sun Jun 20 23:11:45 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12698907">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6963]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2429" _type="MoveCaretCommand" caretOffset="3118" date="Sun Jun 20 23:11:45 EDT 2021" docOffset="3683" starttimestamp="1624232406782" timestamp="12698906" />
  <Command __id="2431" _type="MoveCaretCommand" caretOffset="3118" date="Sun Jun 20 23:11:45 EDT 2021" docOffset="3683" starttimestamp="1624232406782" timestamp="12698907" />
  <Command __id="2433" _type="PauseCommand" date="Sun Jun 20 23:11:46 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12700013">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1106]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2434" _type="InsertStringCommand" date="Sun Jun 20 23:11:46 EDT 2021" starttimestamp="1624232406782" timestamp="12700019" timestamp2="12700019">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2435" _type="InsertStringCommand" date="Sun Jun 20 23:11:46 EDT 2021" starttimestamp="1624232406782" timestamp="12700019" timestamp2="12700019">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2437" _type="PauseCommand" date="Sun Jun 20 23:11:52 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12705975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5956]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2436" _type="MoveCaretCommand" caretOffset="3116" date="Sun Jun 20 23:11:52 EDT 2021" docOffset="3681" starttimestamp="1624232406782" timestamp="12705975" />
  <Command __id="2438" _type="MoveCaretCommand" caretOffset="3116" date="Sun Jun 20 23:11:52 EDT 2021" docOffset="3681" starttimestamp="1624232406782" timestamp="12705975" />
  <Command __id="2440" _type="PauseCommand" date="Sun Jun 20 23:11:54 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12707219">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1244]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2441" _type="InsertStringCommand" date="Sun Jun 20 23:11:54 EDT 2021" starttimestamp="1624232406782" timestamp="12707223" timestamp2="12707223">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2442" _type="InsertStringCommand" date="Sun Jun 20 23:11:54 EDT 2021" starttimestamp="1624232406782" timestamp="12707223" timestamp2="12707223">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2444" _type="PauseCommand" date="Sun Jun 20 23:12:05 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12718448">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[11225]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2443" _type="MoveCaretCommand" caretOffset="3119" date="Sun Jun 20 23:12:05 EDT 2021" docOffset="3684" starttimestamp="1624232406782" timestamp="12718448" />
  <Command __id="2445" _type="MoveCaretCommand" caretOffset="3119" date="Sun Jun 20 23:12:05 EDT 2021" docOffset="3684" starttimestamp="1624232406782" timestamp="12718448" />
  <Command __id="2447" _type="PauseCommand" date="Sun Jun 20 23:12:07 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12720355">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1907]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2448" _type="InsertStringCommand" date="Sun Jun 20 23:12:07 EDT 2021" starttimestamp="1624232406782" timestamp="12720360" timestamp2="12720360">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2449" _type="InsertStringCommand" date="Sun Jun 20 23:12:07 EDT 2021" starttimestamp="1624232406782" timestamp="12720361" timestamp2="12720361">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2451" _type="PauseCommand" date="Sun Jun 20 23:12:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12723600">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3239]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2450" _type="MoveCaretCommand" caretOffset="3118" date="Sun Jun 20 23:12:10 EDT 2021" docOffset="3683" starttimestamp="1624232406782" timestamp="12723600" />
  <Command __id="2452" _type="MoveCaretCommand" caretOffset="3118" date="Sun Jun 20 23:12:10 EDT 2021" docOffset="3683" starttimestamp="1624232406782" timestamp="12723600" />
  <Command __id="2454" _type="PauseCommand" date="Sun Jun 20 23:12:24 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12737674">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14074]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2453" _type="MoveCaretCommand" caretOffset="3137" date="Sun Jun 20 23:12:24 EDT 2021" docOffset="3702" starttimestamp="1624232406782" timestamp="12737674" />
  <Command __id="2455" _type="MoveCaretCommand" caretOffset="3137" date="Sun Jun 20 23:12:24 EDT 2021" docOffset="3702" starttimestamp="1624232406782" timestamp="12737674" />
  <Command __id="2457" _type="PauseCommand" date="Sun Jun 20 23:12:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12739050">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1376]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2456" _type="MoveCaretCommand" caretOffset="3124" date="Sun Jun 20 23:12:25 EDT 2021" docOffset="3689" starttimestamp="1624232406782" timestamp="12739050" />
  <Command __id="2458" _type="MoveCaretCommand" caretOffset="3124" date="Sun Jun 20 23:12:25 EDT 2021" docOffset="3689" starttimestamp="1624232406782" timestamp="12739050" />
  <Command __id="2460" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:26 EDT 2021" starttimestamp="1624232406782" timestamp="12739863" />
  <Command __id="2461" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:26 EDT 2021" starttimestamp="1624232406782" timestamp="12739864" />
  <Command __id="2463" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:27 EDT 2021" starttimestamp="1624232406782" timestamp="12740338" />
  <Command __id="2464" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:27 EDT 2021" starttimestamp="1624232406782" timestamp="12740338" />
  <Command __id="2466" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:27 EDT 2021" starttimestamp="1624232406782" timestamp="12740809" />
  <Command __id="2467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:27 EDT 2021" starttimestamp="1624232406782" timestamp="12740809" />
  <Command __id="2469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:28 EDT 2021" starttimestamp="1624232406782" timestamp="12741323" />
  <Command __id="2470" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:28 EDT 2021" starttimestamp="1624232406782" timestamp="12741324" />
  <Command __id="2472" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:28 EDT 2021" starttimestamp="1624232406782" timestamp="12741781" />
  <Command __id="2473" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:28 EDT 2021" starttimestamp="1624232406782" timestamp="12741781" />
  <Command __id="2475" _type="PauseCommand" date="Sun Jun 20 23:12:30 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12743887">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2106]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2474" _type="MoveCaretCommand" caretOffset="3163" date="Sun Jun 20 23:12:30 EDT 2021" docOffset="3728" starttimestamp="1624232406782" timestamp="12743887" />
  <Command __id="2476" _type="MoveCaretCommand" caretOffset="3163" date="Sun Jun 20 23:12:30 EDT 2021" docOffset="3728" starttimestamp="1624232406782" timestamp="12743888" />
  <Command __id="2478" _type="InsertStringCommand" date="Sun Jun 20 23:12:31 EDT 2021" starttimestamp="1624232406782" timestamp="12744685" timestamp2="12744685">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2479" _type="InsertStringCommand" date="Sun Jun 20 23:12:31 EDT 2021" starttimestamp="1624232406782" timestamp="12744685" timestamp2="12744685">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2481" _type="PauseCommand" date="Sun Jun 20 23:12:35 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12749181">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4496]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2480" _type="MoveCaretCommand" caretOffset="3172" date="Sun Jun 20 23:12:35 EDT 2021" docOffset="3737" starttimestamp="1624232406782" timestamp="12749181" />
  <Command __id="2482" _type="MoveCaretCommand" caretOffset="3172" date="Sun Jun 20 23:12:35 EDT 2021" docOffset="3737" starttimestamp="1624232406782" timestamp="12749182" />
  <Command __id="2484" _type="InsertStringCommand" date="Sun Jun 20 23:12:36 EDT 2021" starttimestamp="1624232406782" timestamp="12749883" timestamp2="12749883">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2485" _type="InsertStringCommand" date="Sun Jun 20 23:12:36 EDT 2021" starttimestamp="1624232406782" timestamp="12749884" timestamp2="12749884">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2487" _type="PauseCommand" date="Sun Jun 20 23:12:41 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12755078">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5194]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2486" _type="MoveCaretCommand" caretOffset="3169" date="Sun Jun 20 23:12:41 EDT 2021" docOffset="3734" starttimestamp="1624232406782" timestamp="12755078" />
  <Command __id="2488" _type="MoveCaretCommand" caretOffset="3169" date="Sun Jun 20 23:12:41 EDT 2021" docOffset="3734" starttimestamp="1624232406782" timestamp="12755078" />
  <Command __id="2490" _type="PauseCommand" date="Sun Jun 20 23:12:50 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12763879">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8800]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2489" _type="SelectTextCommand" caretOffset="3192" date="Sun Jun 20 23:12:50 EDT 2021" end="3214" start="3192" starttimestamp="1624232406782" timestamp="12763878" />
  <Command __id="2491" _type="SelectTextCommand" caretOffset="3192" date="Sun Jun 20 23:12:50 EDT 2021" end="3214" start="3192" starttimestamp="1624232406782" timestamp="12763879" />
  <Command __id="2493" _type="PauseCommand" date="Sun Jun 20 23:12:54 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12767310">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3431]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2492" _type="SelectTextCommand" caretOffset="3217" date="Sun Jun 20 23:12:54 EDT 2021" end="3217" start="3174" starttimestamp="1624232406782" timestamp="12767310" />
  <Command __id="2494" _type="SelectTextCommand" caretOffset="3217" date="Sun Jun 20 23:12:54 EDT 2021" end="3217" start="3174" starttimestamp="1624232406782" timestamp="12767310" />
  <Command __id="2496" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:54 EDT 2021" starttimestamp="1624232406782" timestamp="12767926" />
  <Command __id="2497" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:54 EDT 2021" starttimestamp="1624232406782" timestamp="12767926" />
  <Command __id="2499" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:55 EDT 2021" starttimestamp="1624232406782" timestamp="12768301" />
  <Command __id="2500" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:55 EDT 2021" starttimestamp="1624232406782" timestamp="12768302" />
  <Command __id="2502" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:55 EDT 2021" starttimestamp="1624232406782" timestamp="12768840" />
  <Command __id="2503" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:55 EDT 2021" starttimestamp="1624232406782" timestamp="12768840" />
  <Command __id="2505" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:55 EDT 2021" starttimestamp="1624232406782" timestamp="12768998" />
  <Command __id="2506" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:55 EDT 2021" starttimestamp="1624232406782" timestamp="12768998" />
  <Command __id="2508" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:56 EDT 2021" starttimestamp="1624232406782" timestamp="12769361" />
  <Command __id="2509" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:56 EDT 2021" starttimestamp="1624232406782" timestamp="12769361" />
  <Command __id="2511" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:56 EDT 2021" starttimestamp="1624232406782" timestamp="12769812" />
  <Command __id="2512" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:12:56 EDT 2021" starttimestamp="1624232406782" timestamp="12769813" />
  <Command __id="2514" _type="PauseCommand" date="Sun Jun 20 23:12:59 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12772462">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2649]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2513" _type="MoveCaretCommand" caretOffset="3173" date="Sun Jun 20 23:12:59 EDT 2021" docOffset="3738" starttimestamp="1624232406782" timestamp="12772462" />
  <Command __id="2515" _type="MoveCaretCommand" caretOffset="3173" date="Sun Jun 20 23:12:59 EDT 2021" docOffset="3738" starttimestamp="1624232406782" timestamp="12772464" />
  <Command __id="2517" _type="PauseCommand" date="Sun Jun 20 23:13:00 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12773500">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2518" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12773504" timestamp2="12773504">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2519" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12773504" timestamp2="12773504">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2521" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12773684" timestamp2="12773684">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2522" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12773684" timestamp2="12773684">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2524" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12773839" timestamp2="12773839">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2525" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12773839" timestamp2="12773839">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2527" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12774046" timestamp2="12774046">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2528" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12774046" timestamp2="12774046">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2530" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12774155" timestamp2="12774155">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2531" _type="InsertStringCommand" date="Sun Jun 20 23:13:00 EDT 2021" starttimestamp="1624232406782" timestamp="12774155" timestamp2="12774155">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2533" _type="PauseCommand" date="Sun Jun 20 23:13:18 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12791764">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[17609]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2532" _type="SelectTextCommand" caretOffset="3019" date="Sun Jun 20 23:13:18 EDT 2021" end="3019" start="2987" starttimestamp="1624232406782" timestamp="12791764" />
  <Command __id="2534" _type="SelectTextCommand" caretOffset="3019" date="Sun Jun 20 23:13:18 EDT 2021" end="3019" start="2987" starttimestamp="1624232406782" timestamp="12791764" />
  <Command __id="2535" _type="CopyCommand" date="Sun Jun 20 23:13:19 EDT 2021" starttimestamp="1624232406782" timestamp="12792489" />
  <Command __id="2537" _type="PauseCommand" date="Sun Jun 20 23:13:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12795907">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3418]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2536" _type="MoveCaretCommand" caretOffset="3179" date="Sun Jun 20 23:13:22 EDT 2021" docOffset="3744" starttimestamp="1624232406782" timestamp="12795907" />
  <Command __id="2538" _type="MoveCaretCommand" caretOffset="3179" date="Sun Jun 20 23:13:22 EDT 2021" docOffset="3744" starttimestamp="1624232406782" timestamp="12795908" />
  <Command __id="2540" _type="PauseCommand" date="Sun Jun 20 23:13:23 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12796922">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1014]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2539" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:13:23 EDT 2021" starttimestamp="1624232406782" timestamp="12796922" />
  <Command __id="2541" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:13:23 EDT 2021" starttimestamp="1624232406782" timestamp="12796922" />
  <Command __id="2543" _type="InsertStringCommand" date="Sun Jun 20 23:13:24 EDT 2021" starttimestamp="1624232406782" timestamp="12797332" timestamp2="12797332">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2544" _type="InsertStringCommand" date="Sun Jun 20 23:13:24 EDT 2021" starttimestamp="1624232406782" timestamp="12797332" timestamp2="12797332">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2546" _type="PauseCommand" date="Sun Jun 20 23:13:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12798404">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1072]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2545" _type="MoveCaretCommand" caretOffset="3178" date="Sun Jun 20 23:13:25 EDT 2021" docOffset="3743" starttimestamp="1624232406782" timestamp="12798404" />
  <Command __id="2547" _type="MoveCaretCommand" caretOffset="3178" date="Sun Jun 20 23:13:25 EDT 2021" docOffset="3743" starttimestamp="1624232406782" timestamp="12798405" />
  <DocumentChange __id="2365" _type="Insert" date="Sun Jun 20 23:11:08 EDT 2021" docASTNodeCount="532" docActiveCodeLength="3767" docExpressionCount="362" docLength="3867" length="4" offset="3569" repeat="4" starttimestamp="1624232406782" timestamp="12661297" timestamp2="12663883">
    <text><![CDATA[ == ]]></text>
  </DocumentChange>
  <DocumentChange __id="2378" _type="Insert" date="Sun Jun 20 23:11:14 EDT 2021" docASTNodeCount="593" docActiveCodeLength="3778" docExpressionCount="409" docLength="3878" length="11" offset="3573" repeat="10" starttimestamp="1624232406782" timestamp="12667525" timestamp2="12669821">
    <text><![CDATA["apprroach"]]></text>
  </DocumentChange>
  <DocumentChange __id="2415" _type="Insert" date="Sun Jun 20 23:11:21 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3780" docExpressionCount="409" docLength="3880" length="2" offset="3585" starttimestamp="1624232406782" timestamp="12674839">
    <text><![CDATA[ {]]></text>
  </DocumentChange>
  <DocumentChange __id="2422" _type="Replace" date="Sun Jun 20 23:11:35 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3781" docExpressionCount="409" docLength="3881" endLine="148" insertionLength="4" int_docASTNodeCount="594" int_docActiveCodeLength="3777" int_docExpressionCount="409" int_docLength="3877" length="3" offset="3588" startLine="148" starttimestamp="1624232406782" timestamp="12688771">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[				]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2432" _type="Insert" date="Sun Jun 20 23:11:46 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3786" docExpressionCount="409" docLength="3886" length="5" offset="3683" starttimestamp="1624232406782" timestamp="12700013">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="2439" _type="Replace" date="Sun Jun 20 23:11:54 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3787" docExpressionCount="409" docLength="3887" endLine="150" insertionLength="4" int_docASTNodeCount="594" int_docActiveCodeLength="3783" int_docExpressionCount="409" int_docLength="3883" length="3" offset="3678" startLine="150" starttimestamp="1624232406782" timestamp="12707219">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[				]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2446" _type="Insert" date="Sun Jun 20 23:12:07 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3792" docExpressionCount="409" docLength="3892" length="5" offset="3684" starttimestamp="1624232406782" timestamp="12720355">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="2459" _type="Delete" date="Sun Jun 20 23:12:26 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3787" docExpressionCount="409" docLength="3887" endLine="151" length="5" offset="3684" repeat="5" startLine="150" starttimestamp="1624232406782" timestamp="12739862" timestamp2="12741776">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="2477" _type="Insert" date="Sun Jun 20 23:12:31 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3792" docExpressionCount="409" docLength="3892" length="5" offset="3728" starttimestamp="1624232406782" timestamp="12744678">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="2483" _type="Replace" date="Sun Jun 20 23:12:36 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3793" docExpressionCount="409" docLength="3893" endLine="153" insertionLength="3" int_docASTNodeCount="594" int_docActiveCodeLength="3790" int_docExpressionCount="409" int_docLength="3890" length="2" offset="3735" startLine="153" starttimestamp="1624232406782" timestamp="12749879">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[			]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2495" _type="Delete" date="Sun Jun 20 23:12:54 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3745" docExpressionCount="404" docLength="3845" endLine="153" length="48" offset="3734" repeat="6" startLine="152" starttimestamp="1624232406782" timestamp="12767922" timestamp2="12769806">
    <text><![CDATA[
			else if(evt.getPropertyName() == "passed") {]]></text>
  </DocumentChange>
  <DocumentChange __id="2516" _type="Insert" date="Sun Jun 20 23:13:00 EDT 2021" docASTNodeCount="589" docActiveCodeLength="3748" docExpressionCount="406" docLength="3848" length="3" offset="3738" repeat="3" starttimestamp="1624232406782" timestamp="12773500" timestamp2="12773836">
    <text><![CDATA[els]]></text>
  </DocumentChange>
  <DocumentChange __id="2526" _type="Replace" date="Sun Jun 20 23:13:00 EDT 2021" docASTNodeCount="589" docActiveCodeLength="3749" docExpressionCount="406" docLength="3849" endLine="153" insertionLength="7" int_docASTNodeCount="587" int_docActiveCodeLength="3742" int_docExpressionCount="404" int_docLength="3842" length="6" offset="3735" startLine="153" starttimestamp="1624232406782" timestamp="12774042">
    <deletedText><![CDATA[			els]]></deletedText>
    <insertedText><![CDATA[			else]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2529" _type="Insert" date="Sun Jun 20 23:13:00 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3750" docExpressionCount="404" docLength="3850" length="1" offset="3742" starttimestamp="1624232406782" timestamp="12774151">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="2542" _type="Insert" date="Sun Jun 20 23:13:24 EDT 2021" docASTNodeCount="587" docActiveCodeLength="3755" docExpressionCount="404" docLength="3855" length="5" offset="3743" starttimestamp="1624232406782" timestamp="12797325">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <Command __id="2549" _type="PauseCommand" date="Sun Jun 20 23:13:26 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12799668">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1263]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2550" _type="InsertStringCommand" date="Sun Jun 20 23:13:26 EDT 2021" starttimestamp="1624232406782" timestamp="12799670" timestamp2="12799670">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2551" _type="InsertStringCommand" date="Sun Jun 20 23:13:26 EDT 2021" starttimestamp="1624232406782" timestamp="12799670" timestamp2="12799670">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2553" _type="InsertStringCommand" date="Sun Jun 20 23:13:26 EDT 2021" starttimestamp="1624232406782" timestamp="12799895" timestamp2="12799895">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2554" _type="InsertStringCommand" date="Sun Jun 20 23:13:26 EDT 2021" starttimestamp="1624232406782" timestamp="12799895" timestamp2="12799895">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2557" _type="PauseCommand" date="Sun Jun 20 23:13:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12801360">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1465]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2556" _type="InsertStringCommand" date="Sun Jun 20 23:13:28 EDT 2021" starttimestamp="1624232406782" timestamp="12801360" timestamp2="12801360">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2558" _type="InsertStringCommand" date="Sun Jun 20 23:13:28 EDT 2021" starttimestamp="1624232406782" timestamp="12801360" timestamp2="12801360">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2560" _type="PasteCommand" date="Sun Jun 20 23:13:28 EDT 2021" starttimestamp="1624232406782" timestamp="12801921" />
  <Command __id="2562" _type="PauseCommand" date="Sun Jun 20 23:13:30 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12803759">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1838]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2561" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:13:30 EDT 2021" starttimestamp="1624232406782" timestamp="12803759" />
  <Command __id="2563" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:13:30 EDT 2021" starttimestamp="1624232406782" timestamp="12803760" />
  <Command __id="2565" _type="PauseCommand" date="Sun Jun 20 23:13:31 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12804956">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1196]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:31 EDT 2021" starttimestamp="1624232406782" timestamp="12804959" />
  <Command __id="2567" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:31 EDT 2021" starttimestamp="1624232406782" timestamp="12804959" />
  <Command __id="2569" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:31 EDT 2021" starttimestamp="1624232406782" timestamp="12805090" />
  <Command __id="2570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:31 EDT 2021" starttimestamp="1624232406782" timestamp="12805090" />
  <Command __id="2572" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805247" />
  <Command __id="2573" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805248" />
  <Command __id="2575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805428" />
  <Command __id="2576" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805428" />
  <Command __id="2578" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805630" />
  <Command __id="2579" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805630" />
  <Command __id="2581" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805809" />
  <Command __id="2582" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805809" />
  <Command __id="2584" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805990" />
  <Command __id="2585" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:32 EDT 2021" starttimestamp="1624232406782" timestamp="12805990" />
  <Command __id="2587" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:33 EDT 2021" starttimestamp="1624232406782" timestamp="12806371" />
  <Command __id="2588" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:33 EDT 2021" starttimestamp="1624232406782" timestamp="12806372" />
  <Command __id="2590" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:33 EDT 2021" starttimestamp="1624232406782" timestamp="12807115" />
  <Command __id="2591" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:13:33 EDT 2021" starttimestamp="1624232406782" timestamp="12807115" />
  <Command __id="2593" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12807570" timestamp2="12807570">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2594" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12807570" timestamp2="12807570">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2596" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12807705" timestamp2="12807705">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2597" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12807705" timestamp2="12807705">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2599" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12807903" timestamp2="12807903">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2600" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12807903" timestamp2="12807903">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2602" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12808087" timestamp2="12808087">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2603" _type="InsertStringCommand" date="Sun Jun 20 23:13:34 EDT 2021" starttimestamp="1624232406782" timestamp="12808087" timestamp2="12808087">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2605" _type="InsertStringCommand" date="Sun Jun 20 23:13:35 EDT 2021" starttimestamp="1624232406782" timestamp="12808335" timestamp2="12808335">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2606" _type="InsertStringCommand" date="Sun Jun 20 23:13:35 EDT 2021" starttimestamp="1624232406782" timestamp="12808335" timestamp2="12808335">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2608" _type="InsertStringCommand" date="Sun Jun 20 23:13:35 EDT 2021" starttimestamp="1624232406782" timestamp="12808537" timestamp2="12808537">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2609" _type="InsertStringCommand" date="Sun Jun 20 23:13:35 EDT 2021" starttimestamp="1624232406782" timestamp="12808537" timestamp2="12808537">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2611" _type="PauseCommand" date="Sun Jun 20 23:13:37 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12810691">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2154]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2610" _type="MoveCaretCommand" caretOffset="3211" date="Sun Jun 20 23:13:37 EDT 2021" docOffset="3776" starttimestamp="1624232406782" timestamp="12810691" />
  <Command __id="2612" _type="MoveCaretCommand" caretOffset="3211" date="Sun Jun 20 23:13:37 EDT 2021" docOffset="3776" starttimestamp="1624232406782" timestamp="12810691" />
  <Command __id="2614" _type="PauseCommand" date="Sun Jun 20 23:13:38 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12811799">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1108]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2615" _type="InsertStringCommand" date="Sun Jun 20 23:13:38 EDT 2021" starttimestamp="1624232406782" timestamp="12811802" timestamp2="12811802">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2616" _type="InsertStringCommand" date="Sun Jun 20 23:13:38 EDT 2021" starttimestamp="1624232406782" timestamp="12811802" timestamp2="12811802">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2618" _type="PauseCommand" date="Sun Jun 20 23:13:42 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12816120">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4318]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2617" _type="MoveCaretCommand" caretOffset="3309" date="Sun Jun 20 23:13:42 EDT 2021" docOffset="3874" starttimestamp="1624232406782" timestamp="12816120" />
  <Command __id="2619" _type="MoveCaretCommand" caretOffset="3309" date="Sun Jun 20 23:13:42 EDT 2021" docOffset="3874" starttimestamp="1624232406782" timestamp="12816120" />
  <Command __id="2621" _type="PauseCommand" date="Sun Jun 20 23:13:44 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12817643">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1523]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2620" _type="MoveCaretCommand" caretOffset="3309" date="Sun Jun 20 23:13:44 EDT 2021" docOffset="3874" starttimestamp="1624232406782" timestamp="12817643" />
  <Command __id="2622" _type="MoveCaretCommand" caretOffset="3309" date="Sun Jun 20 23:13:44 EDT 2021" docOffset="3874" starttimestamp="1624232406782" timestamp="12817644" />
  <Command __id="2624" _type="PauseCommand" date="Sun Jun 20 23:13:46 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12819836">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2192]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2623" _type="MoveCaretCommand" caretOffset="3312" date="Sun Jun 20 23:13:46 EDT 2021" docOffset="3877" starttimestamp="1624232406782" timestamp="12819836" />
  <Command __id="2625" _type="MoveCaretCommand" caretOffset="3312" date="Sun Jun 20 23:13:46 EDT 2021" docOffset="3877" starttimestamp="1624232406782" timestamp="12819836" />
  <Command __id="2627" _type="PauseCommand" date="Sun Jun 20 23:13:53 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12826266">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6430]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2628" _type="InsertStringCommand" date="Sun Jun 20 23:13:53 EDT 2021" starttimestamp="1624232406782" timestamp="12826270" timestamp2="12826270">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2629" _type="InsertStringCommand" date="Sun Jun 20 23:13:53 EDT 2021" starttimestamp="1624232406782" timestamp="12826270" timestamp2="12826270">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2631" _type="PauseCommand" date="Sun Jun 20 23:13:54 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12827545">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1275]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2632" _type="InsertStringCommand" date="Sun Jun 20 23:13:54 EDT 2021" starttimestamp="1624232406782" timestamp="12827546" timestamp2="12827546">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2633" _type="InsertStringCommand" date="Sun Jun 20 23:13:54 EDT 2021" starttimestamp="1624232406782" timestamp="12827546" timestamp2="12827546">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2635" _type="PauseCommand" date="Sun Jun 20 23:13:56 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12829957">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2411]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2634" _type="MoveCaretCommand" caretOffset="3308" date="Sun Jun 20 23:13:56 EDT 2021" docOffset="3873" starttimestamp="1624232406782" timestamp="12829957" />
  <Command __id="2636" _type="MoveCaretCommand" caretOffset="3308" date="Sun Jun 20 23:13:56 EDT 2021" docOffset="3873" starttimestamp="1624232406782" timestamp="12829958" />
  <Command __id="2638" _type="PauseCommand" date="Sun Jun 20 23:13:57 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12831011">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1053]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2639" _type="InsertStringCommand" date="Sun Jun 20 23:13:57 EDT 2021" starttimestamp="1624232406782" timestamp="12831012" timestamp2="12831012">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2640" _type="InsertStringCommand" date="Sun Jun 20 23:13:57 EDT 2021" starttimestamp="1624232406782" timestamp="12831012" timestamp2="12831012">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2641" _type="MoveCaretCommand" caretOffset="3168" date="Sun Jun 20 23:13:58 EDT 2021" docOffset="3733" starttimestamp="1624232406782" timestamp="12831896" />
  <Command __id="2642" _type="MoveCaretCommand" caretOffset="3168" date="Sun Jun 20 23:13:58 EDT 2021" docOffset="3733" starttimestamp="1624232406782" timestamp="12831896" />
  <Command __id="2644" _type="InsertStringCommand" date="Sun Jun 20 23:13:58 EDT 2021" starttimestamp="1624232406782" timestamp="12832164" timestamp2="12832164">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2645" _type="InsertStringCommand" date="Sun Jun 20 23:13:58 EDT 2021" starttimestamp="1624232406782" timestamp="12832164" timestamp2="12832164">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2647" _type="PauseCommand" date="Sun Jun 20 23:14:02 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12835594">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3430]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2646" _type="MoveCaretCommand" caretOffset="3169" date="Sun Jun 20 23:14:02 EDT 2021" docOffset="3734" starttimestamp="1624232406782" timestamp="12835594" />
  <Command __id="2648" _type="MoveCaretCommand" caretOffset="3169" date="Sun Jun 20 23:14:02 EDT 2021" docOffset="3734" starttimestamp="1624232406782" timestamp="12835594" />
  <Command __id="2650" _type="PauseCommand" date="Sun Jun 20 23:14:03 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12837004">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1410]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2649" _type="MoveCaretCommand" caretOffset="3170" date="Sun Jun 20 23:14:03 EDT 2021" docOffset="3735" starttimestamp="1624232406782" timestamp="12837004" />
  <Command __id="2651" _type="MoveCaretCommand" caretOffset="3170" date="Sun Jun 20 23:14:03 EDT 2021" docOffset="3735" starttimestamp="1624232406782" timestamp="12837004" />
  <Command __id="2652" _type="MoveCaretCommand" caretOffset="3169" date="Sun Jun 20 23:14:04 EDT 2021" docOffset="3734" starttimestamp="1624232406782" timestamp="12837913" />
  <Command __id="2653" _type="MoveCaretCommand" caretOffset="3169" date="Sun Jun 20 23:14:04 EDT 2021" docOffset="3734" starttimestamp="1624232406782" timestamp="12837913" />
  <Command __id="2655" _type="PauseCommand" date="Sun Jun 20 23:14:06 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12839764">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1851]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2656" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:06 EDT 2021" starttimestamp="1624232406782" timestamp="12839766" />
  <Command __id="2657" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:06 EDT 2021" starttimestamp="1624232406782" timestamp="12839766" />
  <Command __id="2659" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:07 EDT 2021" starttimestamp="1624232406782" timestamp="12840275" />
  <Command __id="2660" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:07 EDT 2021" starttimestamp="1624232406782" timestamp="12840275" />
  <Command __id="2662" _type="PauseCommand" date="Sun Jun 20 23:14:09 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12842513">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2238]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2661" _type="MoveCaretCommand" caretOffset="3314" date="Sun Jun 20 23:14:09 EDT 2021" docOffset="3879" starttimestamp="1624232406782" timestamp="12842513" />
  <Command __id="2663" _type="MoveCaretCommand" caretOffset="3314" date="Sun Jun 20 23:14:09 EDT 2021" docOffset="3879" starttimestamp="1624232406782" timestamp="12842513" />
  <Command __id="2665" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:10 EDT 2021" starttimestamp="1624232406782" timestamp="12843341" />
  <Command __id="2666" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:10 EDT 2021" starttimestamp="1624232406782" timestamp="12843341" />
  <Command __id="2668" _type="PauseCommand" date="Sun Jun 20 23:14:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12845217">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1876]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2667" _type="MoveCaretCommand" caretOffset="3308" date="Sun Jun 20 23:14:11 EDT 2021" docOffset="3873" starttimestamp="1624232406782" timestamp="12845217" />
  <Command __id="2669" _type="MoveCaretCommand" caretOffset="3308" date="Sun Jun 20 23:14:11 EDT 2021" docOffset="3873" starttimestamp="1624232406782" timestamp="12845217" />
  <Command __id="2671" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:12 EDT 2021" starttimestamp="1624232406782" timestamp="12846043" />
  <Command __id="2672" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:12 EDT 2021" starttimestamp="1624232406782" timestamp="12846043" />
  <Command __id="2674" _type="PauseCommand" date="Sun Jun 20 23:14:17 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12850635">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4592]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2673" _type="MoveCaretCommand" caretOffset="3308" date="Sun Jun 20 23:14:17 EDT 2021" docOffset="3873" starttimestamp="1624232406782" timestamp="12850635" />
  <Command __id="2675" _type="MoveCaretCommand" caretOffset="3308" date="Sun Jun 20 23:14:17 EDT 2021" docOffset="3873" starttimestamp="1624232406782" timestamp="12850636" />
  <Command __id="2677" _type="PauseCommand" date="Sun Jun 20 23:14:19 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12852452">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1816]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2678" _type="InsertStringCommand" date="Sun Jun 20 23:14:19 EDT 2021" starttimestamp="1624232406782" timestamp="12852459" timestamp2="12852459">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2679" _type="InsertStringCommand" date="Sun Jun 20 23:14:19 EDT 2021" starttimestamp="1624232406782" timestamp="12852459" timestamp2="12852459">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2681" _type="PauseCommand" date="Sun Jun 20 23:14:21 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12854992">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2533]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2680" _type="MoveCaretCommand" caretOffset="3281" date="Sun Jun 20 23:14:21 EDT 2021" docOffset="3846" starttimestamp="1624232406782" timestamp="12854992" />
  <Command __id="2682" _type="MoveCaretCommand" caretOffset="3281" date="Sun Jun 20 23:14:21 EDT 2021" docOffset="3846" starttimestamp="1624232406782" timestamp="12854993" />
  <Command __id="2684" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12855671" />
  <Command __id="2685" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12855671" />
  <Command __id="2687" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12855852" />
  <Command __id="2688" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12855852" />
  <Command __id="2690" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12856010" />
  <Command __id="2691" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12856010" />
  <Command __id="2693" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12856164" />
  <Command __id="2694" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:22 EDT 2021" starttimestamp="1624232406782" timestamp="12856164" />
  <Command __id="2696" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12856344" />
  <Command __id="2697" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12856344" />
  <Command __id="2699" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12856524" />
  <Command __id="2700" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12856524" />
  <Command __id="2702" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12856748" />
  <Command __id="2703" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12856749" />
  <Command __id="2705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12857177" />
  <Command __id="2706" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:23 EDT 2021" starttimestamp="1624232406782" timestamp="12857177" />
  <Command __id="2708" _type="PauseCommand" date="Sun Jun 20 23:14:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12858975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1798]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2709" _type="InsertStringCommand" date="Sun Jun 20 23:14:25 EDT 2021" starttimestamp="1624232406782" timestamp="12858982" timestamp2="12858982">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="2710" _type="InsertStringCommand" date="Sun Jun 20 23:14:25 EDT 2021" starttimestamp="1624232406782" timestamp="12858982" timestamp2="12858982">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="2712" _type="InsertStringCommand" date="Sun Jun 20 23:14:26 EDT 2021" starttimestamp="1624232406782" timestamp="12859433" timestamp2="12859433">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2713" _type="InsertStringCommand" date="Sun Jun 20 23:14:26 EDT 2021" starttimestamp="1624232406782" timestamp="12859433" timestamp2="12859433">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2715" _type="InsertStringCommand" date="Sun Jun 20 23:14:26 EDT 2021" starttimestamp="1624232406782" timestamp="12859635" timestamp2="12859635">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2716" _type="InsertStringCommand" date="Sun Jun 20 23:14:26 EDT 2021" starttimestamp="1624232406782" timestamp="12859635" timestamp2="12859635">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2718" _type="InsertStringCommand" date="Sun Jun 20 23:14:26 EDT 2021" starttimestamp="1624232406782" timestamp="12860082" timestamp2="12860082">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2719" _type="InsertStringCommand" date="Sun Jun 20 23:14:26 EDT 2021" starttimestamp="1624232406782" timestamp="12860082" timestamp2="12860082">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2721" _type="InsertStringCommand" date="Sun Jun 20 23:14:27 EDT 2021" starttimestamp="1624232406782" timestamp="12860378" timestamp2="12860378">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2722" _type="InsertStringCommand" date="Sun Jun 20 23:14:27 EDT 2021" starttimestamp="1624232406782" timestamp="12860378" timestamp2="12860378">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2724" _type="InsertStringCommand" date="Sun Jun 20 23:14:27 EDT 2021" starttimestamp="1624232406782" timestamp="12860645" timestamp2="12860645">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2725" _type="InsertStringCommand" date="Sun Jun 20 23:14:27 EDT 2021" starttimestamp="1624232406782" timestamp="12860645" timestamp2="12860645">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2727" _type="PauseCommand" date="Sun Jun 20 23:14:29 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12862304">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1659]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2728" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862307" />
  <Command __id="2729" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862307" />
  <Command __id="2731" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862467" />
  <Command __id="2732" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862467" />
  <Command __id="2734" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862644" />
  <Command __id="2735" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862644" />
  <Command __id="2737" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862824" />
  <Command __id="2738" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:29 EDT 2021" starttimestamp="1624232406782" timestamp="12862824" />
  <Command __id="2740" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:30 EDT 2021" starttimestamp="1624232406782" timestamp="12863525" />
  <Command __id="2741" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:14:30 EDT 2021" starttimestamp="1624232406782" timestamp="12863525" />
  <Command __id="2743" _type="InsertStringCommand" date="Sun Jun 20 23:14:30 EDT 2021" starttimestamp="1624232406782" timestamp="12863862" timestamp2="12863862">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2744" _type="InsertStringCommand" date="Sun Jun 20 23:14:30 EDT 2021" starttimestamp="1624232406782" timestamp="12863862" timestamp2="12863862">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2746" _type="InsertStringCommand" date="Sun Jun 20 23:14:30 EDT 2021" starttimestamp="1624232406782" timestamp="12864091" timestamp2="12864091">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2747" _type="InsertStringCommand" date="Sun Jun 20 23:14:30 EDT 2021" starttimestamp="1624232406782" timestamp="12864091" timestamp2="12864091">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2749" _type="InsertStringCommand" date="Sun Jun 20 23:14:31 EDT 2021" starttimestamp="1624232406782" timestamp="12864270" timestamp2="12864270">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2750" _type="InsertStringCommand" date="Sun Jun 20 23:14:31 EDT 2021" starttimestamp="1624232406782" timestamp="12864270" timestamp2="12864270">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2752" _type="InsertStringCommand" date="Sun Jun 20 23:14:31 EDT 2021" starttimestamp="1624232406782" timestamp="12864473" timestamp2="12864473">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2753" _type="InsertStringCommand" date="Sun Jun 20 23:14:31 EDT 2021" starttimestamp="1624232406782" timestamp="12864474" timestamp2="12864474">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2755" _type="InsertStringCommand" date="Sun Jun 20 23:14:31 EDT 2021" starttimestamp="1624232406782" timestamp="12864631" timestamp2="12864631">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2756" _type="InsertStringCommand" date="Sun Jun 20 23:14:31 EDT 2021" starttimestamp="1624232406782" timestamp="12864631" timestamp2="12864631">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2758" _type="PauseCommand" date="Sun Jun 20 23:14:36 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12869887">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5256]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2757" _type="SelectTextCommand" caretOffset="3300" date="Sun Jun 20 23:14:36 EDT 2021" end="3300" start="3262" starttimestamp="1624232406782" timestamp="12869887" />
  <Command __id="2759" _type="SelectTextCommand" caretOffset="3300" date="Sun Jun 20 23:14:36 EDT 2021" end="3300" start="3262" starttimestamp="1624232406782" timestamp="12869890" />
  <Command __id="2761" _type="PauseCommand" date="Sun Jun 20 23:14:37 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12870950">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2760" _type="CopyCommand" date="Sun Jun 20 23:14:37 EDT 2021" starttimestamp="1624232406782" timestamp="12870950" />
  <Command __id="2763" _type="PauseCommand" date="Sun Jun 20 23:14:38 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12872148">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1198]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2762" _type="MoveCaretCommand" caretOffset="3306" date="Sun Jun 20 23:14:38 EDT 2021" docOffset="3871" starttimestamp="1624232406782" timestamp="12872148" />
  <Command __id="2764" _type="MoveCaretCommand" caretOffset="3306" date="Sun Jun 20 23:14:38 EDT 2021" docOffset="3871" starttimestamp="1624232406782" timestamp="12872148" />
  <Command __id="2766" _type="PauseCommand" date="Sun Jun 20 23:14:40 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12873712">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1564]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2765" _type="MoveCaretCommand" caretOffset="3311" date="Sun Jun 20 23:14:40 EDT 2021" docOffset="3876" starttimestamp="1624232406782" timestamp="12873712" />
  <Command __id="2767" _type="MoveCaretCommand" caretOffset="3311" date="Sun Jun 20 23:14:40 EDT 2021" docOffset="3876" starttimestamp="1624232406782" timestamp="12873713" />
  <Command __id="2769" _type="PauseCommand" date="Sun Jun 20 23:14:44 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12877342">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3628]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2770" _type="PasteCommand" date="Sun Jun 20 23:14:44 EDT 2021" starttimestamp="1624232406782" timestamp="12877346" />
  <Command __id="2772" _type="PauseCommand" date="Sun Jun 20 23:14:48 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12882132">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4786]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2773" _type="InsertStringCommand" date="Sun Jun 20 23:14:48 EDT 2021" starttimestamp="1624232406782" timestamp="12882138" timestamp2="12882138">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2774" _type="InsertStringCommand" date="Sun Jun 20 23:14:48 EDT 2021" starttimestamp="1624232406782" timestamp="12882138" timestamp2="12882138">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2776" _type="InsertStringCommand" date="Sun Jun 20 23:14:49 EDT 2021" starttimestamp="1624232406782" timestamp="12882716" timestamp2="12882716">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="2777" _type="InsertStringCommand" date="Sun Jun 20 23:14:49 EDT 2021" starttimestamp="1624232406782" timestamp="12882716" timestamp2="12882716">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="2779" _type="PauseCommand" date="Sun Jun 20 23:14:52 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12885791">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3075]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2778" _type="MoveCaretCommand" caretOffset="3310" date="Sun Jun 20 23:14:52 EDT 2021" docOffset="3875" starttimestamp="1624232406782" timestamp="12885791" />
  <Command __id="2780" _type="MoveCaretCommand" caretOffset="3310" date="Sun Jun 20 23:14:52 EDT 2021" docOffset="3875" starttimestamp="1624232406782" timestamp="12885791" />
  <Command __id="2782" _type="PauseCommand" date="Sun Jun 20 23:14:55 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12888461">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2670]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2781" _type="MoveCaretCommand" caretOffset="3353" date="Sun Jun 20 23:14:55 EDT 2021" docOffset="3918" starttimestamp="1624232406782" timestamp="12888461" />
  <Command __id="2783" _type="MoveCaretCommand" caretOffset="3353" date="Sun Jun 20 23:14:55 EDT 2021" docOffset="3918" starttimestamp="1624232406782" timestamp="12888461" />
  <Command __id="2785" _type="PauseCommand" date="Sun Jun 20 23:15:07 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="12900307">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11846]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2784" _type="MoveCaretCommand" caretOffset="3354" date="Sun Jun 20 23:15:07 EDT 2021" docOffset="3919" starttimestamp="1624232406782" timestamp="12900307" />
  <Command __id="2786" _type="MoveCaretCommand" caretOffset="3354" date="Sun Jun 20 23:15:07 EDT 2021" docOffset="3919" starttimestamp="1624232406782" timestamp="12900307" />
  <Command __id="2788" _type="InsertStringCommand" date="Sun Jun 20 23:15:07 EDT 2021" starttimestamp="1624232406782" timestamp="12901146" timestamp2="12901146">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2789" _type="InsertStringCommand" date="Sun Jun 20 23:15:07 EDT 2021" starttimestamp="1624232406782" timestamp="12901146" timestamp2="12901146">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2791" _type="PauseCommand" date="Sun Jun 20 23:15:52 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="12946181">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[45035]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2790" _type="SelectTextCommand" caretOffset="3342" date="Sun Jun 20 23:15:52 EDT 2021" end="3347" start="3342" starttimestamp="1624232406782" timestamp="12946181" />
  <Command __id="2792" _type="SelectTextCommand" caretOffset="3342" date="Sun Jun 20 23:15:52 EDT 2021" end="3347" start="3342" starttimestamp="1624232406782" timestamp="12946182" />
  <Command __id="2794" _type="InsertStringCommand" date="Sun Jun 20 23:15:53 EDT 2021" starttimestamp="1624232406782" timestamp="12947048" timestamp2="12947048">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2795" _type="InsertStringCommand" date="Sun Jun 20 23:15:53 EDT 2021" starttimestamp="1624232406782" timestamp="12947048" timestamp2="12947048">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2797" _type="InsertStringCommand" date="Sun Jun 20 23:15:54 EDT 2021" starttimestamp="1624232406782" timestamp="12947269" timestamp2="12947269">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2798" _type="InsertStringCommand" date="Sun Jun 20 23:15:54 EDT 2021" starttimestamp="1624232406782" timestamp="12947269" timestamp2="12947269">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2800" _type="InsertStringCommand" date="Sun Jun 20 23:15:54 EDT 2021" starttimestamp="1624232406782" timestamp="12947379" timestamp2="12947379">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2801" _type="InsertStringCommand" date="Sun Jun 20 23:15:54 EDT 2021" starttimestamp="1624232406782" timestamp="12947379" timestamp2="12947379">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2803" _type="InsertStringCommand" date="Sun Jun 20 23:15:54 EDT 2021" starttimestamp="1624232406782" timestamp="12947563" timestamp2="12947563">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2804" _type="InsertStringCommand" date="Sun Jun 20 23:15:54 EDT 2021" starttimestamp="1624232406782" timestamp="12947563" timestamp2="12947563">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2806" _type="PauseCommand" date="Sun Jun 20 23:15:56 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12949863">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2300]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2805" _type="MoveCaretCommand" caretOffset="3353" date="Sun Jun 20 23:15:56 EDT 2021" docOffset="3918" starttimestamp="1624232406782" timestamp="12949863" />
  <Command __id="2807" _type="MoveCaretCommand" caretOffset="3353" date="Sun Jun 20 23:15:56 EDT 2021" docOffset="3918" starttimestamp="1624232406782" timestamp="12949864" />
  <Command __id="2809" _type="PauseCommand" date="Sun Jun 20 23:15:58 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12952057">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2193]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2808" _type="SelectTextCommand" caretOffset="3172" date="Sun Jun 20 23:15:58 EDT 2021" end="3353" start="3172" starttimestamp="1624232406782" timestamp="12952057" />
  <Command __id="2810" _type="SelectTextCommand" caretOffset="3172" date="Sun Jun 20 23:15:58 EDT 2021" end="3353" start="3172" starttimestamp="1624232406782" timestamp="12952057" />
  <Command __id="2811" _type="CopyCommand" date="Sun Jun 20 23:15:59 EDT 2021" starttimestamp="1624232406782" timestamp="12953053" />
  <Command __id="2813" _type="PauseCommand" date="Sun Jun 20 23:16:01 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12954296">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1243]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2812" _type="MoveCaretCommand" caretOffset="3357" date="Sun Jun 20 23:16:01 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="12954296" />
  <Command __id="2814" _type="MoveCaretCommand" caretOffset="3357" date="Sun Jun 20 23:16:01 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="12954296" />
  <Command __id="2816" _type="PauseCommand" date="Sun Jun 20 23:16:02 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12955416">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1120]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2817" _type="PasteCommand" date="Sun Jun 20 23:16:02 EDT 2021" starttimestamp="1624232406782" timestamp="12955429" />
  <DocumentChange __id="2548" _type="Insert" date="Sun Jun 20 23:13:26 EDT 2021" docASTNodeCount="593" docActiveCodeLength="3791" docExpressionCount="409" docLength="3891" length="36" offset="3743" repeat="4" starttimestamp="1624232406782" timestamp="12799668" timestamp2="12801918">
    <text><![CDATA[if(evt.getOldValue() == "apprroach")]]></text>
  </DocumentChange>
  <DocumentChange __id="2564" _type="Delete" date="Sun Jun 20 23:13:31 EDT 2021" docASTNodeCount="593" docActiveCodeLength="3782" docExpressionCount="409" docLength="3882" endLine="153" length="9" offset="3768" repeat="9" startLine="153" starttimestamp="1624232406782" timestamp="12804956" timestamp2="12807112">
    <text><![CDATA[apprroach]]></text>
  </DocumentChange>
  <DocumentChange __id="2592" _type="Insert" date="Sun Jun 20 23:13:34 EDT 2021" docASTNodeCount="593" docActiveCodeLength="3788" docExpressionCount="409" docLength="3888" length="6" offset="3768" repeat="6" starttimestamp="1624232406782" timestamp="12807569" timestamp2="12808537">
    <text><![CDATA[passed]]></text>
  </DocumentChange>
  <DocumentChange __id="2613" _type="Insert" date="Sun Jun 20 23:13:38 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3790" docExpressionCount="409" docLength="3890" length="2" offset="3776" starttimestamp="1624232406782" timestamp="12811799">
    <text><![CDATA[ {]]></text>
  </DocumentChange>
  <DocumentChange __id="2626" _type="Replace" date="Sun Jun 20 23:13:53 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3791" docExpressionCount="409" docLength="3891" endLine="157" insertionLength="3" int_docASTNodeCount="594" int_docActiveCodeLength="3788" int_docExpressionCount="409" int_docLength="3888" length="2" offset="3875" startLine="157" starttimestamp="1624232406782" timestamp="12826266">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[			]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2630" _type="Insert" date="Sun Jun 20 23:13:54 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3792" docExpressionCount="409" docLength="3892" length="1" offset="3878" starttimestamp="1624232406782" timestamp="12827545">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2637" _type="Insert" date="Sun Jun 20 23:13:57 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3793" docExpressionCount="409" docLength="3893" length="1" offset="3873" starttimestamp="1624232406782" timestamp="12831011">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2643" _type="Insert" date="Sun Jun 20 23:13:58 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3794" docExpressionCount="409" docLength="3894" length="1" offset="3733" starttimestamp="1624232406782" timestamp="12832162">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2654" _type="Delete" date="Sun Jun 20 23:14:06 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3792" docExpressionCount="409" docLength="3892" endLine="152" length="2" offset="3732" repeat="2" startLine="152" starttimestamp="1624232406782" timestamp="12839764" timestamp2="12840274">
    <text><![CDATA[		]]></text>
  </DocumentChange>
  <DocumentChange __id="2664" _type="Delete" date="Sun Jun 20 23:14:10 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3791" docExpressionCount="409" docLength="3891" endLine="157" length="1" offset="3878" startLine="157" starttimestamp="1624232406782" timestamp="12843339">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2670" _type="Delete" date="Sun Jun 20 23:14:12 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3790" docExpressionCount="409" docLength="3890" endLine="156" length="1" offset="3872" startLine="156" starttimestamp="1624232406782" timestamp="12846041">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2676" _type="Insert" date="Sun Jun 20 23:14:19 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3795" docExpressionCount="409" docLength="3895" length="5" offset="3873" starttimestamp="1624232406782" timestamp="12852452">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="2683" _type="Delete" date="Sun Jun 20 23:14:22 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3787" docExpressionCount="409" docLength="3887" endLine="155" length="8" offset="3838" repeat="8" startLine="155" starttimestamp="1624232406782" timestamp="12855668" timestamp2="12857175">
    <text><![CDATA[Approach]]></text>
  </DocumentChange>
  <DocumentChange __id="2707" _type="Insert" date="Sun Jun 20 23:14:25 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3793" docExpressionCount="409" docLength="3893" length="6" offset="3838" repeat="6" starttimestamp="1624232406782" timestamp="12858975" timestamp2="12860639">
    <text><![CDATA[Presed]]></text>
  </DocumentChange>
  <DocumentChange __id="2726" _type="Delete" date="Sun Jun 20 23:14:29 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3788" docExpressionCount="409" docLength="3888" endLine="155" length="5" offset="3839" repeat="5" startLine="155" starttimestamp="1624232406782" timestamp="12862304" timestamp2="12863523">
    <text><![CDATA[resed]]></text>
  </DocumentChange>
  <DocumentChange __id="2742" _type="Insert" date="Sun Jun 20 23:14:30 EDT 2021" docASTNodeCount="594" docActiveCodeLength="3793" docExpressionCount="409" docLength="3893" length="5" offset="3839" repeat="5" starttimestamp="1624232406782" timestamp="12863857" timestamp2="12864625">
    <text><![CDATA[assed]]></text>
  </DocumentChange>
  <DocumentChange __id="2768" _type="Replace" date="Sun Jun 20 23:14:44 EDT 2021" docASTNodeCount="601" docActiveCodeLength="3831" docExpressionCount="415" docLength="3931" endLine="157" insertionLength="42" int_docASTNodeCount="594" int_docActiveCodeLength="3789" int_docExpressionCount="409" int_docLength="3889" length="4" offset="3872" startLine="157" starttimestamp="1624232406782" timestamp="12877341">
    <deletedText><![CDATA[				]]></deletedText>
    <insertedText><![CDATA[				buttons.getPassed().setEnabled(false);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2771" _type="Insert" date="Sun Jun 20 23:14:48 EDT 2021" docASTNodeCount="601" docActiveCodeLength="3836" docExpressionCount="415" docLength="3936" length="5" offset="3914" starttimestamp="1624232406782" timestamp="12882132">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="2775" _type="Replace" date="Sun Jun 20 23:14:49 EDT 2021" docASTNodeCount="601" docActiveCodeLength="3836" docExpressionCount="415" docLength="3936" endLine="158" insertionLength="4" int_docASTNodeCount="601" int_docActiveCodeLength="3832" int_docExpressionCount="415" int_docLength="3932" length="4" offset="3915" startLine="158" starttimestamp="1624232406782" timestamp="12882713">
    <deletedText><![CDATA[				]]></deletedText>
    <insertedText><![CDATA[			}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2787" _type="Insert" date="Sun Jun 20 23:15:07 EDT 2021" docASTNodeCount="601" docActiveCodeLength="3840" docExpressionCount="415" docLength="3940" length="4" offset="3919" starttimestamp="1624232406782" timestamp="12901140">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2793" _type="Replace" date="Sun Jun 20 23:15:53 EDT 2021" docASTNodeCount="601" docActiveCodeLength="3836" docExpressionCount="415" docLength="3936" endLine="157" insertionLength="1" int_docASTNodeCount="600" int_docActiveCodeLength="3835" int_docExpressionCount="414" int_docLength="3935" length="5" offset="3907" startLine="157" starttimestamp="1624232406782" timestamp="12947044">
    <deletedText><![CDATA[false]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2796" _type="Insert" date="Sun Jun 20 23:15:54 EDT 2021" docASTNodeCount="601" docActiveCodeLength="3839" docExpressionCount="415" docLength="3939" length="3" offset="3908" repeat="3" starttimestamp="1624232406782" timestamp="12947266" timestamp2="12947559">
    <text><![CDATA[rue]]></text>
  </DocumentChange>
  <DocumentChange __id="2815" _type="Replace" date="Sun Jun 20 23:16:02 EDT 2021" docASTNodeCount="632" docActiveCodeLength="4020" docExpressionCount="439" docLength="4120" endLine="159" insertionLength="184" int_docASTNodeCount="601" int_docActiveCodeLength="3836" int_docExpressionCount="415" int_docLength="3936" length="3" offset="3919" startLine="159" starttimestamp="1624232406782" timestamp="12955416">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2818" _type="Insert" date="Sun Jun 20 23:16:04 EDT 2021" docASTNodeCount="632" docActiveCodeLength="4024" docExpressionCount="439" docLength="4124" length="4" offset="4103" starttimestamp="1624232406782" timestamp="12958068">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="2819" _type="PauseCommand" date="Sun Jun 20 23:16:04 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12958068">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2639]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2820" _type="InsertStringCommand" date="Sun Jun 20 23:16:04 EDT 2021" starttimestamp="1624232406782" timestamp="12958074" timestamp2="12958074">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2821" _type="InsertStringCommand" date="Sun Jun 20 23:16:04 EDT 2021" starttimestamp="1624232406782" timestamp="12958074" timestamp2="12958074">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2823" _type="PasteCommand" date="Sun Jun 20 23:16:05 EDT 2021" starttimestamp="1624232406782" timestamp="12958556" />
  <Command __id="2825" _type="PauseCommand" date="Sun Jun 20 23:16:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12963318">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4762]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2824" _type="MoveCaretCommand" caretOffset="3393" date="Sun Jun 20 23:16:10 EDT 2021" docOffset="3958" starttimestamp="1624232406782" timestamp="12963318" />
  <Command __id="2826" _type="MoveCaretCommand" caretOffset="3393" date="Sun Jun 20 23:16:10 EDT 2021" docOffset="3958" starttimestamp="1624232406782" timestamp="12963318" />
  <DocumentChange __id="2822" _type="Replace" date="Sun Jun 20 23:16:05 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4205" docExpressionCount="463" docLength="4305" endLine="165" insertionLength="184" int_docASTNodeCount="632" int_docActiveCodeLength="4021" int_docExpressionCount="439" int_docLength="4121" length="3" offset="4104" startLine="165" starttimestamp="1624232406782" timestamp="12958542">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}]]></insertedText>
  </DocumentChange>
  <Command __id="2828" _type="PauseCommand" date="Sun Jun 20 23:16:12 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12965540">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2222]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2827" _type="Delete" date="Sun Jun 20 23:16:12 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" endLine="159" length="6" offset="3952" repeat="6" startLine="159" starttimestamp="1624232406782" timestamp="12965540" timestamp2="12968303">
    <text><![CDATA[passed]]></text>
  </DocumentChange>
  <Command __id="2829" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:12 EDT 2021" starttimestamp="1624232406782" timestamp="12965543" />
  <Command __id="2830" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:12 EDT 2021" starttimestamp="1624232406782" timestamp="12965543" />
  <Command __id="2833" _type="PauseCommand" date="Sun Jun 20 23:16:13 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12966685">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1142]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2832" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:13 EDT 2021" starttimestamp="1624232406782" timestamp="12966685" />
  <Command __id="2834" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:13 EDT 2021" starttimestamp="1624232406782" timestamp="12966685" />
  <Command __id="2836" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:13 EDT 2021" starttimestamp="1624232406782" timestamp="12967109" />
  <Command __id="2837" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:13 EDT 2021" starttimestamp="1624232406782" timestamp="12967109" />
  <Command __id="2839" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:14 EDT 2021" starttimestamp="1624232406782" timestamp="12967312" />
  <Command __id="2840" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:14 EDT 2021" starttimestamp="1624232406782" timestamp="12967312" />
  <Command __id="2842" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:14 EDT 2021" starttimestamp="1624232406782" timestamp="12967719" />
  <Command __id="2843" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:14 EDT 2021" starttimestamp="1624232406782" timestamp="12967720" />
  <Command __id="2845" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:15 EDT 2021" starttimestamp="1624232406782" timestamp="12968306" />
  <Command __id="2846" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:15 EDT 2021" starttimestamp="1624232406782" timestamp="12968306" />
  <Command __id="2848" _type="InsertStringCommand" date="Sun Jun 20 23:16:15 EDT 2021" starttimestamp="1624232406782" timestamp="12968894" timestamp2="12968894">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2849" _type="InsertStringCommand" date="Sun Jun 20 23:16:15 EDT 2021" starttimestamp="1624232406782" timestamp="12968895" timestamp2="12968895">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2851" _type="InsertStringCommand" date="Sun Jun 20 23:16:15 EDT 2021" starttimestamp="1624232406782" timestamp="12969093" timestamp2="12969093">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2852" _type="InsertStringCommand" date="Sun Jun 20 23:16:15 EDT 2021" starttimestamp="1624232406782" timestamp="12969093" timestamp2="12969093">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2854" _type="InsertStringCommand" date="Sun Jun 20 23:16:16 EDT 2021" starttimestamp="1624232406782" timestamp="12969230" timestamp2="12969230">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="2855" _type="InsertStringCommand" date="Sun Jun 20 23:16:16 EDT 2021" starttimestamp="1624232406782" timestamp="12969230" timestamp2="12969230">
    <data><![CDATA[y]]></data>
  </Command>
  <DocumentChange __id="2847" _type="Insert" date="Sun Jun 20 23:16:15 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4202" docExpressionCount="463" docLength="4302" length="3" offset="3952" repeat="3" starttimestamp="1624232406782" timestamp="12968891" timestamp2="12969227">
    <text><![CDATA[say]]></text>
  </DocumentChange>
  <Command __id="2857" _type="PauseCommand" date="Sun Jun 20 23:16:23 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="12976897">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7667]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2856" _type="MoveCaretCommand" caretOffset="3461" date="Sun Jun 20 23:16:23 EDT 2021" docOffset="4026" starttimestamp="1624232406782" timestamp="12976897" />
  <Command __id="2858" _type="MoveCaretCommand" caretOffset="3461" date="Sun Jun 20 23:16:23 EDT 2021" docOffset="4026" starttimestamp="1624232406782" timestamp="12976897" />
  <Command __id="2860" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:24 EDT 2021" starttimestamp="1624232406782" timestamp="12977781" />
  <Command __id="2861" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:24 EDT 2021" starttimestamp="1624232406782" timestamp="12977781" />
  <Command __id="2863" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:24 EDT 2021" starttimestamp="1624232406782" timestamp="12977982" />
  <Command __id="2864" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:24 EDT 2021" starttimestamp="1624232406782" timestamp="12977982" />
  <Command __id="2866" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:24 EDT 2021" starttimestamp="1624232406782" timestamp="12978161" />
  <Command __id="2867" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:24 EDT 2021" starttimestamp="1624232406782" timestamp="12978161" />
  <Command __id="2869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:25 EDT 2021" starttimestamp="1624232406782" timestamp="12978474" />
  <Command __id="2870" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:25 EDT 2021" starttimestamp="1624232406782" timestamp="12978474" />
  <Command __id="2873" _type="PauseCommand" date="Sun Jun 20 23:16:26 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12979602">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1128]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2872" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:26 EDT 2021" starttimestamp="1624232406782" timestamp="12979602" />
  <Command __id="2874" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:26 EDT 2021" starttimestamp="1624232406782" timestamp="12979602" />
  <Command __id="2876" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:26 EDT 2021" starttimestamp="1624232406782" timestamp="12980029" />
  <Command __id="2877" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:26 EDT 2021" starttimestamp="1624232406782" timestamp="12980029" />
  <Command __id="2879" _type="PauseCommand" date="Sun Jun 20 23:16:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12981240">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1211]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2880" _type="InsertStringCommand" date="Sun Jun 20 23:16:28 EDT 2021" starttimestamp="1624232406782" timestamp="12981246" timestamp2="12981246">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2881" _type="InsertStringCommand" date="Sun Jun 20 23:16:28 EDT 2021" starttimestamp="1624232406782" timestamp="12981246" timestamp2="12981246">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2883" _type="InsertStringCommand" date="Sun Jun 20 23:16:28 EDT 2021" starttimestamp="1624232406782" timestamp="12981493" timestamp2="12981493">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2884" _type="InsertStringCommand" date="Sun Jun 20 23:16:28 EDT 2021" starttimestamp="1624232406782" timestamp="12981493" timestamp2="12981493">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2886" _type="InsertStringCommand" date="Sun Jun 20 23:16:28 EDT 2021" starttimestamp="1624232406782" timestamp="12981586" timestamp2="12981586">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="2887" _type="InsertStringCommand" date="Sun Jun 20 23:16:28 EDT 2021" starttimestamp="1624232406782" timestamp="12981586" timestamp2="12981586">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="2889" _type="PauseCommand" date="Sun Jun 20 23:16:32 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12985815">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4229]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2888" _type="MoveCaretCommand" caretOffset="3572" date="Sun Jun 20 23:16:32 EDT 2021" docOffset="4137" starttimestamp="1624232406782" timestamp="12985815" />
  <Command __id="2890" _type="MoveCaretCommand" caretOffset="3572" date="Sun Jun 20 23:16:32 EDT 2021" docOffset="4137" starttimestamp="1624232406782" timestamp="12985815" />
  <Command __id="2892" _type="PauseCommand" date="Sun Jun 20 23:16:36 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="12990017">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4201]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2893" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:36 EDT 2021" starttimestamp="1624232406782" timestamp="12990019" />
  <Command __id="2894" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:36 EDT 2021" starttimestamp="1624232406782" timestamp="12990019" />
  <Command __id="2896" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:36 EDT 2021" starttimestamp="1624232406782" timestamp="12990201" />
  <Command __id="2897" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:36 EDT 2021" starttimestamp="1624232406782" timestamp="12990201" />
  <Command __id="2899" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:37 EDT 2021" starttimestamp="1624232406782" timestamp="12990357" />
  <Command __id="2900" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:37 EDT 2021" starttimestamp="1624232406782" timestamp="12990357" />
  <Command __id="2902" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:37 EDT 2021" starttimestamp="1624232406782" timestamp="12990673" />
  <Command __id="2903" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:37 EDT 2021" starttimestamp="1624232406782" timestamp="12990673" />
  <Command __id="2905" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:37 EDT 2021" starttimestamp="1624232406782" timestamp="12991010" />
  <Command __id="2906" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:37 EDT 2021" starttimestamp="1624232406782" timestamp="12991010" />
  <Command __id="2908" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:38 EDT 2021" starttimestamp="1624232406782" timestamp="12991573" />
  <Command __id="2909" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:16:38 EDT 2021" starttimestamp="1624232406782" timestamp="12991573" />
  <Command __id="2911" _type="PauseCommand" date="Sun Jun 20 23:16:40 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="12993506">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1933]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2912" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12993510" timestamp2="12993510">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2913" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12993510" timestamp2="12993510">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2915" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12993645" timestamp2="12993645">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2916" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12993645" timestamp2="12993645">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2918" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12993824" timestamp2="12993824">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2919" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12993824" timestamp2="12993824">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2921" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12994073" timestamp2="12994073">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2922" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12994073" timestamp2="12994073">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2924" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12994206" timestamp2="12994206">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2925" _type="InsertStringCommand" date="Sun Jun 20 23:16:40 EDT 2021" starttimestamp="1624232406782" timestamp="12994207" timestamp2="12994207">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2927" _type="InsertStringCommand" date="Sun Jun 20 23:16:41 EDT 2021" starttimestamp="1624232406782" timestamp="12994409" timestamp2="12994409">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2928" _type="InsertStringCommand" date="Sun Jun 20 23:16:41 EDT 2021" starttimestamp="1624232406782" timestamp="12994409" timestamp2="12994409">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2930" _type="PauseCommand" date="Sun Jun 20 23:16:57 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13010926">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[16517]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2929" _type="ShellCommand" date="Sun Jun 20 23:16:57 EDT 2021" starttimestamp="1624232406782" timestamp="13010926" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2932" _type="PauseCommand" date="Sun Jun 20 23:17:01 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13014708">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3782]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2931" _type="ShellCommand" date="Sun Jun 20 23:17:01 EDT 2021" starttimestamp="1624232406782" timestamp="13014708" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2934" _type="SelectTextCommand" caretOffset="3933" date="Sun Jun 20 23:17:01 EDT 2021" end="3933" start="3799" starttimestamp="1624232406782" timestamp="13015086" />
  <Command __id="2936" _type="PauseCommand" date="Sun Jun 20 23:17:06 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13019664">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4578]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2938" _type="MoveCaretCommand" caretOffset="3572" date="Sun Jun 20 23:17:06 EDT 2021" docOffset="4137" starttimestamp="1624232406782" timestamp="13019904" />
  <Command __id="2939" _type="SelectTextCommand" caretOffset="3933" date="Sun Jun 20 23:17:06 EDT 2021" end="3933" start="3799" starttimestamp="1624232406782" timestamp="13019905" />
  <Command __id="2941" _type="PauseCommand" date="Sun Jun 20 23:17:18 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13031415">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[11510]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2940" _type="MoveCaretCommand" caretOffset="3537" date="Sun Jun 20 23:17:18 EDT 2021" docOffset="4326" starttimestamp="1624232406782" timestamp="13031415" />
  <Command __id="2942" _type="MoveCaretCommand" caretOffset="3529" date="Sun Jun 20 23:17:19 EDT 2021" docOffset="4318" starttimestamp="1624232406782" timestamp="13032225" />
  <Command __id="2944" _type="PauseCommand" date="Sun Jun 20 23:17:23 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13037088">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4863]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2943" _type="SelectTextCommand" caretOffset="3980" date="Sun Jun 20 23:17:23 EDT 2021" end="3980" start="3935" starttimestamp="1624232406782" timestamp="13037088" />
  <Command __id="2945" _type="MoveCaretCommand" caretOffset="3974" date="Sun Jun 20 23:17:24 EDT 2021" docOffset="4763" starttimestamp="1624232406782" timestamp="13037563" />
  <Command __id="2947" _type="PauseCommand" date="Sun Jun 20 23:17:27 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13040475">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2912]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2946" _type="SelectTextCommand" caretOffset="4124" date="Sun Jun 20 23:17:27 EDT 2021" end="4124" start="3934" starttimestamp="1624232406782" timestamp="13040475" />
  <Command __id="2949" _type="PauseCommand" date="Sun Jun 20 23:17:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13041606">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1131]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2954" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Sun Jun 20 23:17:28 EDT 2021" starttimestamp="1624232406782" timestamp="13041671" />
  <Command __id="2956" _type="PauseCommand" date="Sun Jun 20 23:17:53 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="13066502">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[24831]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2955" _type="MoveCaretCommand" caretOffset="3177" date="Sun Jun 20 23:17:53 EDT 2021" docOffset="3966" starttimestamp="1624232406782" timestamp="13066502" />
  <Command __id="2958" _type="PauseCommand" date="Sun Jun 20 23:17:55 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13068429">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1927]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2957" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:17:55 EDT 2021" starttimestamp="1624232406782" timestamp="13068429" />
  <Command __id="2960" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:17:55 EDT 2021" starttimestamp="1624232406782" timestamp="13068906" />
  <Command __id="2962" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:17:56 EDT 2021" starttimestamp="1624232406782" timestamp="13069440" />
  <Command __id="2964" _type="PauseCommand" date="Sun Jun 20 23:17:59 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13073077">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3637]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2963" _type="ShellCommand" date="Sun Jun 20 23:17:59 EDT 2021" starttimestamp="1624232406782" timestamp="13073077" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2970" _type="PauseCommand" date="Sun Jun 20 23:18:04 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13077892">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1188]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="2969" _type="RunCommand" date="Sun Jun 20 23:18:04 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13077892" type="Run" />
  <Command __id="2971" _type="RunCommand" date="Sun Jun 20 23:18:04 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13077893" type="Run" />
  <Command __id="2972" _type="ShellCommand" date="Sun Jun 20 23:18:05 EDT 2021" starttimestamp="1624232406782" timestamp="13078506" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2974" _type="PauseCommand" date="Sun Jun 20 23:18:06 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13079645">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1139]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2973" _type="ConsoleOutput" date="Sun Jun 20 23:18:06 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13079645" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@d706f19
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@61dd025]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@61dd025]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SceneControllerISAPropertyChangeListener did not pass completely:[WARN] /Users/gabomm99/eclipse-workspa"), Diff(INSERT,"grail.compositeFigs.MontyAvatar@d706f19¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; sour"), Diff(EQUAL,"ce"), Diff(DELETE,"/"), Diff(INSERT,"="), Diff(EQUAL,"grail"), Diff(DELETE,"A4FinalProject/./src/grail/MVC/BridgeSceneController.java:21: Missing interface java.beans.PropertyChangeListener of class @Comp301Tags.BRIDGE_SCENE_CONTROLLER [ExpectedInterfaces]%0.0¶"), Diff(INSERT,".geometryFigs.RestrictedLine@61dd025]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@61dd025]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2976" _type="PauseCommand" date="Sun Jun 20 23:18:18 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13091345">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11700]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2975" _type="ConsoleOutput" date="Sun Jun 20 23:18:18 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13091345" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"grail.compositeFigs.MontyAvatar@d706f19¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"4777c07f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"4777c07f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2f177a4"), Diff(INSERT,"1ed3862"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2f177a4"), Diff(INSERT,"1ed3862"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"1dc7f57e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"1dc7f57e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@1"), Diff(DELETE,"47ed70f"), Diff(INSERT,"3b07018"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1"), Diff(DELETE,"47ed70f"), Diff(INSERT,"3b07018"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"1dd025"), Diff(INSERT,"abd2e29"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"1dd025"), Diff(INSERT,"abd2e29"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"124c278f"), Diff(INSERT,"685d0f8b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"124c278f"), Diff(INSERT,"685d0f8b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"8"), Diff(INSERT,"14"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"15b204a1"), Diff(INSERT,"4a937bfb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"15b204a1"), Diff(INSERT,"4a937bfb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶")]]]></diff>
  </Command>
  <Command __id="2978" _type="PauseCommand" date="Sun Jun 20 23:18:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13094201">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2856]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2977" _type="ConsoleOutput" date="Sun Jun 20 23:18:20 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13094201" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"95"), Diff(INSERT,"20"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"95"), Diff(INSERT,"20"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"10"), Diff(INSERT,"38"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"500"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(EQUAL,"4"), Diff(INSERT,"2"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"500"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶")]]]></diff>
  </Command>
  <Command __id="2980" _type="PauseCommand" date="Sun Jun 20 23:18:22 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13095328">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1127]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2979" _type="ConsoleOutput" date="Sun Jun 20 23:18:22 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13095328" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶")]]]></diff>
  </Command>
  <Command __id="2982" _type="PauseCommand" date="Sun Jun 20 23:18:45 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="13118379">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[23051]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2981" _type="ShellCommand" date="Sun Jun 20 23:18:45 EDT 2021" starttimestamp="1624232406782" timestamp="13118379" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2984" _type="PauseCommand" date="Sun Jun 20 23:18:48 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13121894">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3515]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2985" _type="MoveCaretCommand" caretOffset="3236" date="Sun Jun 20 23:18:48 EDT 2021" docOffset="3801" starttimestamp="1624232406782" timestamp="13121988" />
  <Command __id="2986" _type="MoveCaretCommand" caretOffset="3236" date="Sun Jun 20 23:18:48 EDT 2021" docOffset="3801" starttimestamp="1624232406782" timestamp="13121991" />
  <Command __id="2988" _type="PauseCommand" date="Sun Jun 20 23:18:50 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13123485">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1494]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2987" _type="MoveCaretCommand" caretOffset="3257" date="Sun Jun 20 23:18:50 EDT 2021" docOffset="3822" starttimestamp="1624232406782" timestamp="13123485" />
  <Command __id="2989" _type="MoveCaretCommand" caretOffset="3257" date="Sun Jun 20 23:18:50 EDT 2021" docOffset="3822" starttimestamp="1624232406782" timestamp="13123485" />
  <Command __id="2990" _type="MoveCaretCommand" caretOffset="3300" date="Sun Jun 20 23:18:50 EDT 2021" docOffset="3865" starttimestamp="1624232406782" timestamp="13124126" />
  <Command __id="2991" _type="MoveCaretCommand" caretOffset="3300" date="Sun Jun 20 23:18:50 EDT 2021" docOffset="3865" starttimestamp="1624232406782" timestamp="13124126" />
  <Command __id="2993" _type="PauseCommand" date="Sun Jun 20 23:19:02 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13135816">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11690]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2992" _type="ShellCommand" date="Sun Jun 20 23:19:02 EDT 2021" starttimestamp="1624232406782" timestamp="13135816" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2994" _type="ConsoleOutput" date="Sun Jun 20 23:19:02 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13135904" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=880; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=920; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue="), Diff(DELETE,"3"), Diff(INSERT,"8"), Diff(EQUAL,"80; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue="), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"20; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶")]]]></diff>
  </Command>
  <Command __id="2996" _type="PauseCommand" date="Sun Jun 20 23:19:05 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13138994">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3090]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2995" _type="ConsoleOutput" date="Sun Jun 20 23:19:05 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13138994" type="ConsoleOutput">
    <outputString><![CDATA[keyboard clicked
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@61dd025]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@61dd025]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=20; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=60; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@420c427e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@420c427e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@33b0d743]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@33b0d743]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@39796db]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@39796db]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@127ddd2d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=755; newValue=710; propagationId=null; source=grail.geometryFigs.RestrictedLine@127ddd2d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@32c272ae]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=755; newValue=710; propagationId=null; source=grail.geometryFigs.RestrictedLine@32c272ae]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=20; propagationId=null; source=grail.geometryFigs.CharHeads@77da17a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=660; newValue=615; propagationId=null; source=grail.geometryFigs.CharHeads@77da17a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=60; propagationId=null; source=grail.geometryFigs.MontyString@3863ce00]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=660; newValue=615; propagationId=null; source=grail.geometryFigs.MontyString@3863ce00]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=880; newValue=80; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=920; newValue=120; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@440be894]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@440be894]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@65fda5b9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@65fda5b9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@f61ae0d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@f61ae0d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RestrictedLine@2954622f]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"keyboard clicked¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"4"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4777c07f"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue="), Diff(DELETE,"47"), Diff(INSERT,"50"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4777c07f"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"4"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1ed3862"), Diff(INSERT,"2f177a4"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue="), Diff(DELETE,"47"), Diff(INSERT,"50"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1ed3862"), Diff(INSERT,"2f177a4"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"4"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1dc7f57e"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue="), Diff(DELETE,"47"), Diff(INSERT,"50"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1dc7f57e"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"4"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RestrictedLine@1"), Diff(DELETE,"3b07018"), Diff(INSERT,"47ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=5"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RestrictedLine@1"), Diff(DELETE,"3b07018"), Diff(INSERT,"47ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue="), Diff(DELETE,"90"), Diff(INSERT,"4"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"abd2e29"), Diff(INSERT,"1dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=5"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"abd2e29"), Diff(INSERT,"1dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue="), Diff(DELETE,"88"), Diff(INSERT,"2"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"685d0f8b"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=4"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"5; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"685d0f8b"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue="), Diff(DELETE,"92"), Diff(INSERT,"6"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4a937bfb"), Diff(INSERT,"15b204a1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=4"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"5; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167"), Diff(INSERT,"15b204a1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@420c427e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@420c427e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@33b0d743]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@33b0d743]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@39796db]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@39796db]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@127ddd2d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=755; newValue=710; propagationId=null; source=grail.geometryFigs.RestrictedLine@127ddd2d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@32c272ae]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=755; newValue=710; propagationId=null; source=grail.geometryFigs.RestrictedLine@32c272ae]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=20; propagationId=null; source=grail.geometryFigs.CharHeads@77da17a]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=660; newValue=615; propagationId=null; source=grail.geometryFigs.CharHeads@77da17a]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=60; propagationId=null; source=grail.geometryFigs.MontyString@3863ce00]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=660; newValue=615; propagationId=null; source=grail.geometryFigs.MontyString@3863ce00]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=880; newValue=80; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=920; newValue=120; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.MontyString@4a937b"), Diff(EQUAL,"fb"), Diff(DELETE,"7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7"), Diff(INSERT,"X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@440be894]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@440be894]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@65fda5b9]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@65fda5b9]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@f61ae0d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@f61ae0d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RestrictedLine@2954622f"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="2998" _type="PauseCommand" date="Sun Jun 20 23:19:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13143237">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4243]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2997" _type="ConsoleOutput" date="Sun Jun 20 23:19:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13143237" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=550; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=550; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=455; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=455; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"keyboard clicked¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"400; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@61dd025]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=550; propagationId=null; source=grail.geometryFigs.RestrictedLine@61dd025]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=20; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.CharHeads@124c278f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=60; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=455; propagationId=null; source=grail.geometryFigs.MontyString@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@420c427e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@420c427e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@33b0d743]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@33b0d743]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RotatingLine@39796db]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@39796db]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=40; propagationId=null; source=grail.geometryFigs.RestrictedLine@127ddd2d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=755; newValue=710; propagationId=null; source=grail.geometryFigs.RestrictedLine@127ddd2d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=6"), Diff(INSERT,"100; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=10"), Diff(EQUAL,"0; newValue=40"), Diff(INSERT,"0"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"estrictedLine@32c272ae]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=755; newValue=710; propagationId=null; source=grail.geometryFigs.RestrictedLine@32c272ae]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=20; propagationId=null; source=grail.geometryFigs.CharHeads@77da17a]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=660; newValue=615; propagationId=null; source=grail.geometryFigs.CharHeads@77da17a]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=60; propagationId=null; source=grail.geometryFigs.MontyString@3863ce00]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=660; newValue=615; propagationId=null; source=grail.geometryFigs.MontyString@3863ce00]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=500; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=50"), Diff(INSERT,"otatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=47"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"47"), Diff(INSERT,"50"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"50"), Diff(INSERT,"47"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"0; newValue=5"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"0; newValue=5"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"0; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"8"), Diff(EQUAL,"80; newValue="), Diff(INSERT,"3"), Diff(EQUAL,"80; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=4"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"5; newValue=4"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"5; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"20; newValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"20; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=4"), Diff(DELETE,"2"), Diff(INSERT,"5"), Diff(EQUAL,"5; newValue=4"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"5; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"X"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@440be894]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705; newValue=660; propagationId=null; source=grail.geometryFigs.RotatingLine@440be894]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@65fda5b9"), Diff(INSERT,"approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Y"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"705"), Diff(INSERT,"say"), Diff(EQUAL,"; newValue="), Diff(DELETE,"660"), Diff(INSERT,"true"), Diff(EQUAL,"; propagationId=null; source=grail."), Diff(DELETE,"geometryFigs.RotatingLine@65fda5b9"), Diff(INSERT,"compositeFigs.FiveChars@77167fb7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"X"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"120; newValue=100; propagationId=null; source=grail.geometryFigs.RotatingLine@f61ae0d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=705"), Diff(INSERT,"passed"), Diff(EQUAL,"; newValue="), Diff(DELETE,"660"), Diff(INSERT,"true"), Diff(EQUAL,"; propagationId=null; source=grail."), Diff(DELETE,"geometryFigs.RotatingLine@f61ae0d"), Diff(INSERT,"compositeFigs.FiveChars@77167fb7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"X"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"120"), Diff(INSERT,"failed"), Diff(EQUAL,"; newValue="), Diff(DELETE,"100"), Diff(INSERT,"true"), Diff(EQUAL,"; propagationId=null; source=grail."), Diff(DELETE,"geometryFigs.RestrictedLine@2954622f"), Diff(INSERT,"compositeFigs.FiveChars@77167fb7"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3000" _type="PauseCommand" date="Sun Jun 20 23:19:25 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13158745">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15508]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2999" _type="ConsoleOutput" date="Sun Jun 20 23:19:25 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13158745" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"50"), Diff(INSERT,"47"), Diff(EQUAL,"0; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4777c07f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"50"), Diff(INSERT,"47"), Diff(EQUAL,"0; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1ed3862b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"50"), Diff(INSERT,"47"), Diff(EQUAL,"0; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1dc7f57e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"0; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@13b07018]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"0; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6abd2e29]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(INSERT,"3"), Diff(EQUAL,"80; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=4"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"5; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"20; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=4"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"5; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶")]]]></diff>
  </Command>
  <Command __id="3004" _type="PauseCommand" date="Sun Jun 20 23:20:03 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13197001">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3311]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3003" _type="RunCommand" date="Sun Jun 20 23:20:03 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13197001" type="Run" />
  <Command __id="3005" _type="RunCommand" date="Sun Jun 20 23:20:03 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13197001" type="Run" />
  <Command __id="3007" _type="PauseCommand" date="Sun Jun 20 23:20:10 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13203495">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6494]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3008" _type="MoveCaretCommand" caretOffset="3174" date="Sun Jun 20 23:20:10 EDT 2021" docOffset="3963" starttimestamp="1624232406782" timestamp="13203629" />
  <Command __id="3010" _type="PauseCommand" date="Sun Jun 20 23:20:17 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13211127">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7498]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3011" _type="SelectTextCommand" caretOffset="5741" date="Sun Jun 20 23:20:18 EDT 2021" end="5741" start="5686" starttimestamp="1624232406782" timestamp="13211237" />
  <Command __id="3013" _type="PauseCommand" date="Sun Jun 20 23:20:42 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="13236181">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[24944]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3014" _type="MoveCaretCommand" caretOffset="3119" date="Sun Jun 20 23:20:43 EDT 2021" docOffset="3684" starttimestamp="1624232406782" timestamp="13236346" />
  <Command __id="3015" _type="MoveCaretCommand" caretOffset="3119" date="Sun Jun 20 23:20:43 EDT 2021" docOffset="3684" starttimestamp="1624232406782" timestamp="13236349" />
  <Command __id="3017" _type="PauseCommand" date="Sun Jun 20 23:21:33 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="13286262">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[49913]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3016" _type="MoveCaretCommand" caretOffset="3013" date="Sun Jun 20 23:21:33 EDT 2021" docOffset="3578" starttimestamp="1624232406782" timestamp="13286262" />
  <Command __id="3018" _type="MoveCaretCommand" caretOffset="3013" date="Sun Jun 20 23:21:33 EDT 2021" docOffset="3578" starttimestamp="1624232406782" timestamp="13286263" />
  <Command __id="3020" _type="PauseCommand" date="Sun Jun 20 23:21:34 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13287424">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1161]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3021" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:21:34 EDT 2021" starttimestamp="1624232406782" timestamp="13287429" />
  <Command __id="3022" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:21:34 EDT 2021" starttimestamp="1624232406782" timestamp="13287429" />
  <Command __id="3024" _type="PauseCommand" date="Sun Jun 20 23:21:41 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13294544">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7115]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3025" _type="MoveCaretCommand" caretOffset="3174" date="Sun Jun 20 23:21:41 EDT 2021" docOffset="3963" starttimestamp="1624232406782" timestamp="13294700" />
  <Command __id="3027" _type="PauseCommand" date="Sun Jun 20 23:21:43 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13296274">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1574]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3026" _type="ShellCommand" date="Sun Jun 20 23:21:43 EDT 2021" starttimestamp="1624232406782" timestamp="13296274" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3029" _type="PauseCommand" date="Sun Jun 20 23:21:44 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13297910">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1635]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3028" _type="ShellCommand" date="Sun Jun 20 23:21:44 EDT 2021" starttimestamp="1624232406782" timestamp="13297909" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3030" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:21:44 EDT 2021" starttimestamp="1624232406782" timestamp="13298050" />
  <Command __id="3031" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:21:44 EDT 2021" starttimestamp="1624232406782" timestamp="13298084" />
  <Command __id="3032" _type="RunCommand" date="Sun Jun 20 23:21:44 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13298196" type="Run" />
  <Command __id="3033" _type="RunCommand" date="Sun Jun 20 23:21:44 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13298196" type="Run" />
  <Command __id="3034" _type="ShellCommand" date="Sun Jun 20 23:21:45 EDT 2021" starttimestamp="1624232406782" timestamp="13298974" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3036" _type="PauseCommand" date="Sun Jun 20 23:21:47 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13300503">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1529]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3035" _type="ConsoleOutput" date="Sun Jun 20 23:21:47 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13300503" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@7219ec67
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"grail.compositeFigs.MontyAvatar@7219ec67¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"40"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4777c07f"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"470"), Diff(INSERT,"545"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4777c07f"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"40"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1ed3862"), Diff(INSERT,"2928854"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"470"), Diff(INSERT,"545"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1ed3862"), Diff(INSERT,"2928854"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"40"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1dc7f57e"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"470"), Diff(INSERT,"545"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1dc7f57e"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"40"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"13b07018"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"20"), Diff(INSERT,"95"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"13b07018"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"40"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6abd2e29"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"20"), Diff(INSERT,"95"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6abd2e29"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"38"), Diff(INSERT,"4"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"685d0f8b"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"425"), Diff(INSERT,"500"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"685d0f8b"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"42"), Diff(INSERT,"8"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4a937bfb"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"425"), Diff(INSERT,"500"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4a937bfb"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"77167fb7"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"77167fb7"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"77167fb7"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"77167fb7"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3038" _type="PauseCommand" date="Sun Jun 20 23:21:49 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13302676">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2173]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3037" _type="ConsoleOutput" date="Sun Jun 20 23:21:49 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13302676" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@329a7c3c]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@329a7c3c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5f6f997a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5f6f997a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@42f8f008]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@42f8f008]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@1a2df43d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1a2df43d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@7bb710d8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@7bb710d8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@58b0e29d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@58b0e29d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@5d4d2133]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@5d4d2133]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"grail.compositeFigs.MontyAvatar@7219ec67¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"329a7c3c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"329a7c3c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2928854b"), Diff(INSERT,"5f6f997a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2928854b"), Diff(INSERT,"5f6f997a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"42f8f008"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"42f8f008"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"1a2df43d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"1a2df43d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2f177a4b"), Diff(INSERT,"7bb710d8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2f177a4b"), Diff(INSERT,"7bb710d8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"58b0e29d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"58b0e29d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"8"), Diff(INSERT,"14"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"5d4d2133"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"5d4d2133"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶")]]]></diff>
  </Command>
  <Command __id="3040" _type="PauseCommand" date="Sun Jun 20 23:22:36 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="13349245">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[46569]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3039" _type="ShellCommand" date="Sun Jun 20 23:22:36 EDT 2021" starttimestamp="1624232406782" timestamp="13349245" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3041" _type="RunCommand" date="Sun Jun 20 23:22:36 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13350085" type="Run" />
  <Command __id="3042" _type="RunCommand" date="Sun Jun 20 23:22:36 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13350085" type="Run" />
  <Command __id="3044" _type="PauseCommand" date="Sun Jun 20 23:22:57 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="13370319">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[20234]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3045" _type="SelectTextCommand" caretOffset="5741" date="Sun Jun 20 23:22:57 EDT 2021" end="5741" start="5686" starttimestamp="1624232406782" timestamp="13370428" />
  <Command __id="3047" _type="PauseCommand" date="Sun Jun 20 23:23:17 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="13391154">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[20726]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3046" _type="MoveCaretCommand" caretOffset="3763" date="Sun Jun 20 23:23:17 EDT 2021" docOffset="4685" starttimestamp="1624232406782" timestamp="13391154" />
  <Command __id="3049" _type="PauseCommand" date="Sun Jun 20 23:23:19 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13392723">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1569]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3048" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:23:19 EDT 2021" starttimestamp="1624232406782" timestamp="13392723" />
  <Command __id="3051" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:23:19 EDT 2021" starttimestamp="1624232406782" timestamp="13393158" />
  <Command __id="3053" _type="PauseCommand" date="Sun Jun 20 23:26:05 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="13558388">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[165230]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3054" _type="InsertStringCommand" date="Sun Jun 20 23:26:05 EDT 2021" starttimestamp="1624232406782" timestamp="13558392" timestamp2="13558392">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="3056" _type="PauseCommand" date="Sun Jun 20 23:26:11 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13564650">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6258]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3057" _type="MoveCaretCommand" caretOffset="3063" date="Sun Jun 20 23:26:11 EDT 2021" docOffset="3628" starttimestamp="1624232406782" timestamp="13564828" />
  <Command __id="3058" _type="MoveCaretCommand" caretOffset="3063" date="Sun Jun 20 23:26:11 EDT 2021" docOffset="3628" starttimestamp="1624232406782" timestamp="13564832" />
  <Command __id="3059" _type="MoveCaretCommand" caretOffset="3062" date="Sun Jun 20 23:26:12 EDT 2021" docOffset="3627" starttimestamp="1624232406782" timestamp="13565499" />
  <Command __id="3060" _type="MoveCaretCommand" caretOffset="3062" date="Sun Jun 20 23:26:12 EDT 2021" docOffset="3627" starttimestamp="1624232406782" timestamp="13565499" />
  <DocumentChange __id="2859" _type="Delete" date="Sun Jun 20 23:16:24 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4196" docExpressionCount="463" docLength="4296" endLine="161" length="6" offset="4020" repeat="6" startLine="161" starttimestamp="1624232406782" timestamp="12977778" timestamp2="12980027">
    <text><![CDATA[Passed]]></text>
  </DocumentChange>
  <DocumentChange __id="2878" _type="Insert" date="Sun Jun 20 23:16:28 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" length="3" offset="4020" repeat="3" starttimestamp="1624232406782" timestamp="12981240" timestamp2="12981582">
    <text><![CDATA[Say]]></text>
  </DocumentChange>
  <DocumentChange __id="2891" _type="Delete" date="Sun Jun 20 23:16:36 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4193" docExpressionCount="463" docLength="4293" endLine="165" length="6" offset="4131" repeat="6" startLine="165" starttimestamp="1624232406782" timestamp="12990016" timestamp2="12991571">
    <text><![CDATA[passed]]></text>
  </DocumentChange>
  <DocumentChange __id="2910" _type="Insert" date="Sun Jun 20 23:16:40 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" length="6" offset="4131" repeat="6" starttimestamp="1624232406782" timestamp="12993506" timestamp2="12994406">
    <text><![CDATA[failed]]></text>
  </DocumentChange>
  <Command __id="2933" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:17:01 EDT 2021" docASTNodeCount="429" docActiveCodeLength="3170" docExpressionCount="307" docLength="6056" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13014854">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.io.IOException;

import javax.swing.JFrame;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimator;
import bus.uigen.OEFrame;

import bus.uigen.ObjectEditor;
import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.compositeFigs.FiveChars;
import grail.compositeFigs.GorgeWithBridge;
import grail.compositeFigs.MontyAvatar;
import grail.extras.Buttons;
import grail.extras.Tables;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.MovingL;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.misc.ThreadSupport;

//@Tags(Comp301Tags.ROTATING_LINE)
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
//@Tags(Comp301Tags.BRIDGE_SCENE)

		
public class Assignment4 {
	
	static final double
			RADIUS = 400,
			ANGLE = Math.PI/4,
			SCALE_BY = 2.5;
	static final int
			SLEEP_TIME = 3000,
			MARCH_T = 1000,
			X = 0,
			Y = 0,
			X_2 = 50,
			Y_2 = 100,
			ROTATE_BY = 8,
			ARM_ROT = 3,
			MOVE_BY = 20,
			TALK_LENGTH = 6,
			ROB_Y = 60,
			FRAME_WIDTH = 2000,
			FRAME_HEIGHT = 800;
	static final String
			KNIGHTS = "We Beat the Guard!!",
			GUARD = "Damn it!!",
			ARTHUR_NAME = "Arthur",
			GALAHAD_NAME = "Galahad",
			GUARD_NAME = "Guard",
			LANCELOT_NAME = "Lancelot",
			ROBIN_NAME = "Robin";
			

	public static void main(String[] args) {
		//animateLine();
		demonstrateBridgeScene();
	}
	public static void animateLine() {
		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);
		OEFrame aFrame = ObjectEditor.edit (line1);
		line1.rotate(ROTATE_BY);
		aFrame.refresh();
		//line1.setX(X_2);
		//line1.setY(Y_2);
		aFrame.refresh();
	}
	public static void demonstrateBridgeScene() {
		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();
//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);
//    	anOEFrame.showTreePanel();
//    	ThreadSupport.sleep(SLEEP_TIME);
		//JFrame frame1 = new JFrame("Monty Scene");
		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());
		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);
		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();
		//frame1.setVisible(true);
		JFrame frame = new JFrame("Monty Scene");
		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);
		frame.add(new Buttons(), BorderLayout.NORTH);
		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);
		frame.setVisible(true);
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		aCollection.put(ARTHUR_NAME, montyChars.getArthur());
		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());
		aCollection.put(GUARD_NAME, montyChars.getGuard());
		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());
		aCollection.put(ROBIN_NAME, montyChars.getRobin());
		System.out.println(aCollection.get(ARTHUR_NAME));
		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();
		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();
//    	montyChars.getArthur().getArms().getLeftLine().rotate();
//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);
//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);
//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);
//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);
//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);
//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);
//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);
    //	anOEFrame.refresh();
//    	ThreadSupport.sleep(SLEEP_TIME);
    	//montyChars.approach("Robin");
    	//anOEFrame.refresh();
    	//ThreadSupport.sleep(SLEEP_TIME);
//    	montyChars.approach(montyChars.getArthur());
//    	ThreadSupport.sleep(SLEEP_TIME);
    	//anOEFrame.refresh();
    	//montyChars.scroll(X_2, Y_2);
    	//int i = 0;
    	//while(i < TALK_LENGTH) {
    	//	ThreadSupport.sleep(MARCH_T);
    	//	montyChars.say("What is the velocity of a gazeel?");
    		//anOEFrame.refresh();
    	//	i++;
    	//}
//    	montyChars.passed();
//    	ThreadSupport.sleep(SLEEP_TIME);
//    	montyChars.say(KNIGHTS);
//    	ThreadSupport.sleep(SLEEP_TIME);
//    	montyChars.approach(montyChars.getLancelot());
//    	ThreadSupport.sleep(SLEEP_TIME);
//    	montyChars.failed();
//    	montyChars.waitingArthur();
//    	montyChars.waitingGalahad();
//    	montyChars.waitingLancelot();
//    	montyChars.waitingRobin();
    	montyChars.asynchronousArthur();
    	montyChars.asynchronousGalahad();
    	montyChars.asynchronousLancelot();
    	montyChars.asynchronousRobin();
    	montyChars.asynchronousGuard();
    	//montyChars.startAnimation();
    
    	//animator.animateAvatar(montyChars.getRobin());
    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);
    	//montyChars.getRobin().getStringShape().setText("Damn");
    	//anOEFrame.refresh();
    	
    	//int i = X;
    	//while (i < MOVE_BY) {
    	//ThreadSupport.sleep(MARCH_T);
    	//montyChars.getArthur().move(MOVE_BY, Y);
    	//montyChars.getGalahad().move(MOVE_BY, Y);
    	//montyChars.getLancelot().move(MOVE_BY, Y);
    	//montyChars.getRobin().move(MOVE_BY, Y);
    	//anOEFrame.refresh();
    	//i++;
    	//}
    	//montyChars.getLancelot().move(X, MOVE_BY);
    	//montyChars.getGalahad().move(X, MOVE_BY);
    	//montyChars.getRobin().move(X, ROB_Y);
    	//montyChars.getRobin().scale(SCALE_BY);
    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);
    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);
    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);
    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);
    	//montyChars.getGuard().getStringShape().setText(GUARD);
    	//anOEFrame.refresh();
    	
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="2935" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:17:06 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13019664">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() =="), Diff(INSERT," "this") {¶			if(evt.getOldValue() =="), Diff(EQUAL," "appr"), Diff(INSERT,"r"), Diff(EQUAL,"oach") {¶			"), Diff(INSERT,"	"), Diff(EQUAL,"if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶			"), Diff(INSERT,"	"), Diff(EQUAL,"} "), Diff(INSERT,"¶				"), Diff(EQUAL,"buttons.getApproach().setEnabled(true);"), Diff(INSERT,"¶			"), Diff(EQUAL,"}¶		"), Diff(INSERT,"	"), Diff(EQUAL,"else if(evt.get"), Diff(DELETE,"PropertyName() == "pass"), Diff(INSERT,"OldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "fail"), Diff(EQUAL,"ed") {¶			"), Diff(INSERT,"	"), Diff(EQUAL,"if((Boolean)evt.getNewValue() == true) {¶				buttons.get"), Diff(DELETE,"Approach"), Diff(INSERT,"Passed"), Diff(EQUAL,"().setEnabled(false);¶				}¶		"), Diff(INSERT,"		buttons.getPassed().setEnabled(true);¶			}¶			"), Diff(EQUAL,"}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue() == "apprroach") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getApproach().setEnabled(false);
				} 
				buttons.getApproach().setEnabled(true);
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="2937" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:17:06 EDT 2021" docASTNodeCount="429" docActiveCodeLength="3170" docExpressionCount="307" docLength="6056" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13019702">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶    	montyChars.asynchronousArthur();¶    	montyChars.asynchronousGalahad();¶    	montyChars.asynchronousLancelot();¶    	montyChars.asynchronousRobin();¶    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2948" _type="Insert" date="Sun Jun 20 23:17:28 EDT 2021" docASTNodeCount="425" docActiveCodeLength="3133" docExpressionCount="304" docLength="6058" length="2" offset="4723" starttimestamp="1624232406782" timestamp="13041606">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2950" _type="Insert" date="Sun Jun 20 23:17:28 EDT 2021" docASTNodeCount="421" docActiveCodeLength="3095" docExpressionCount="301" docLength="6060" length="2" offset="4763" starttimestamp="1624232406782" timestamp="13041607">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2951" _type="Insert" date="Sun Jun 20 23:17:28 EDT 2021" docASTNodeCount="417" docActiveCodeLength="3056" docExpressionCount="298" docLength="6062" length="2" offset="4804" starttimestamp="1624232406782" timestamp="13041608">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2952" _type="Insert" date="Sun Jun 20 23:17:28 EDT 2021" docASTNodeCount="413" docActiveCodeLength="3020" docExpressionCount="295" docLength="6064" length="2" offset="4846" starttimestamp="1624232406782" timestamp="13041609">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2953" _type="Insert" date="Sun Jun 20 23:17:28 EDT 2021" docASTNodeCount="409" docActiveCodeLength="2984" docExpressionCount="292" docLength="6066" length="2" offset="4885" starttimestamp="1624232406782" timestamp="13041609">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2959" _type="Delete" date="Sun Jun 20 23:17:55 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" endLine="114" length="2" offset="3963" repeat="2" startLine="114" starttimestamp="1624232406782" timestamp="13068903" timestamp2="13069438">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2983" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:18:48 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13121894">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue() == "apprroach") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3006" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:20:10 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13203495">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶"), Diff(DELETE,"//"), Diff(EQUAL,"    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶"), Diff(INSERT,"//"), Diff(EQUAL,"    	montyChars.asynchronousArthur();¶"), Diff(INSERT,"//"), Diff(EQUAL,"    	montyChars.asynchronousGalahad();¶"), Diff(INSERT,"//"), Diff(EQUAL,"    	montyChars.asynchronousLancelot();¶"), Diff(INSERT,"//"), Diff(EQUAL,"    	montyChars.asynchronousRobin();¶"), Diff(INSERT,"//"), Diff(EQUAL,"    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.io.IOException;

import javax.swing.JFrame;

import AnimationMethods.ABridgeSceneAnimator;
import AnimationMethods.BridgeSceneAnimator;
import bus.uigen.OEFrame;

import bus.uigen.ObjectEditor;
import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.compositeFigs.FiveChars;
import grail.compositeFigs.GorgeWithBridge;
import grail.compositeFigs.MontyAvatar;
import grail.extras.Buttons;
import grail.extras.Tables;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.MovingL;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.misc.ThreadSupport;

//@Tags(Comp301Tags.ROTATING_LINE)
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
//@Tags(Comp301Tags.BRIDGE_SCENE)

		
public class Assignment4 {
	
	static final double
			RADIUS = 400,
			ANGLE = Math.PI/4,
			SCALE_BY = 2.5;
	static final int
			SLEEP_TIME = 3000,
			MARCH_T = 1000,
			X = 0,
			Y = 0,
			X_2 = 50,
			Y_2 = 100,
			ROTATE_BY = 8,
			ARM_ROT = 3,
			MOVE_BY = 20,
			TALK_LENGTH = 6,
			ROB_Y = 60,
			FRAME_WIDTH = 2000,
			FRAME_HEIGHT = 800;
	static final String
			KNIGHTS = "We Beat the Guard!!",
			GUARD = "Damn it!!",
			ARTHUR_NAME = "Arthur",
			GALAHAD_NAME = "Galahad",
			GUARD_NAME = "Guard",
			LANCELOT_NAME = "Lancelot",
			ROBIN_NAME = "Robin";
			

	public static void main(String[] args) {
		//animateLine();
		demonstrateBridgeScene();
	}
	public static void animateLine() {
		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);
		OEFrame aFrame = ObjectEditor.edit (line1);
		line1.rotate(ROTATE_BY);
		aFrame.refresh();
		//line1.setX(X_2);
		//line1.setY(Y_2);
		aFrame.refresh();
	}
	public static void demonstrateBridgeScene() {
		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();
//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);
//    	anOEFrame.showTreePanel();
//    	ThreadSupport.sleep(SLEEP_TIME);
		//JFrame frame1 = new JFrame("Monty Scene");
		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());
		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);
		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();
		//frame1.setVisible(true);
		JFrame frame = new JFrame("Monty Scene");
		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);
		frame.add(new Buttons(), BorderLayout.NORTH);
		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);
		frame.setVisible(true);
		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();
		aCollection.put(ARTHUR_NAME, montyChars.getArthur());
		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());
		aCollection.put(GUARD_NAME, montyChars.getGuard());
		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());
		aCollection.put(ROBIN_NAME, montyChars.getRobin());
		System.out.println(aCollection.get(ARTHUR_NAME));
		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();
		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();
//    	montyChars.getArthur().getArms().getLeftLine().rotate();
//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);
//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);
//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);
//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);
//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);
//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);
//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);
    //	anOEFrame.refresh();
//    	ThreadSupport.sleep(SLEEP_TIME);
    	//montyChars.approach("Robin");
    	//anOEFrame.refresh();
    	//ThreadSupport.sleep(SLEEP_TIME);
    	montyChars.approach(montyChars.getArthur());
//    	ThreadSupport.sleep(SLEEP_TIME);
    	//anOEFrame.refresh();
    	//montyChars.scroll(X_2, Y_2);
    	//int i = 0;
    	//while(i < TALK_LENGTH) {
    	//	ThreadSupport.sleep(MARCH_T);
    	//	montyChars.say("What is the velocity of a gazeel?");
    		//anOEFrame.refresh();
    	//	i++;
    	//}
//    	montyChars.passed();
//    	ThreadSupport.sleep(SLEEP_TIME);
//    	montyChars.say(KNIGHTS);
//    	ThreadSupport.sleep(SLEEP_TIME);
//    	montyChars.approach(montyChars.getLancelot());
//    	ThreadSupport.sleep(SLEEP_TIME);
//    	montyChars.failed();
//    	montyChars.waitingArthur();
//    	montyChars.waitingGalahad();
//    	montyChars.waitingLancelot();
//    	montyChars.waitingRobin();
//    	montyChars.asynchronousArthur();
//    	montyChars.asynchronousGalahad();
//    	montyChars.asynchronousLancelot();
//    	montyChars.asynchronousRobin();
//    	montyChars.asynchronousGuard();
    	//montyChars.startAnimation();
    
    	//animator.animateAvatar(montyChars.getRobin());
    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);
    	//montyChars.getRobin().getStringShape().setText("Damn");
    	//anOEFrame.refresh();
    	
    	//int i = X;
    	//while (i < MOVE_BY) {
    	//ThreadSupport.sleep(MARCH_T);
    	//montyChars.getArthur().move(MOVE_BY, Y);
    	//montyChars.getGalahad().move(MOVE_BY, Y);
    	//montyChars.getLancelot().move(MOVE_BY, Y);
    	//montyChars.getRobin().move(MOVE_BY, Y);
    	//anOEFrame.refresh();
    	//i++;
    	//}
    	//montyChars.getLancelot().move(X, MOVE_BY);
    	//montyChars.getGalahad().move(X, MOVE_BY);
    	//montyChars.getRobin().move(X, ROB_Y);
    	//montyChars.getRobin().scale(SCALE_BY);
    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);
    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);
    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);
    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);
    	//montyChars.getGuard().getStringShape().setText(GUARD);
    	//anOEFrame.refresh();
    	
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="3009" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:20:17 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13211127">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶		helper.add(aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="3012" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:20:42 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13236181">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue() == "apprroach") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3019" _type="Delete" date="Sun Jun 20 23:21:34 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4198" docExpressionCount="463" docLength="4298" endLine="147" length="1" offset="3577" startLine="147" starttimestamp="1624232406782" timestamp="13287424">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <Command __id="3023" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:21:41 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13294544">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3043" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:22:57 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13370319">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶		helper.add(aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <DocumentChange __id="3050" _type="Delete" date="Sun Jun 20 23:23:19 EDT 2021" docASTNodeCount="1656" docActiveCodeLength="11338" docExpressionCount="1074" docLength="11696" endLine="156" length="1" offset="4685" startLine="156" starttimestamp="1624232406782" timestamp="13393152">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="3052" _type="Insert" date="Sun Jun 20 23:26:05 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" length="1" offset="4685" starttimestamp="1624232406782" timestamp="13558388">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <Command __id="3055" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:26:11 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4198" docExpressionCount="463" docLength="4298" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13564650">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue() == "appr"), Diff(DELETE,"r"), Diff(EQUAL,"oach") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue() == "approach") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getApproach().setEnabled(false);
				} 
				buttons.getApproach().setEnabled(true);
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3061" _type="Delete" date="Sun Jun 20 23:26:14 EDT 2021" docASTNodeCount="532" docActiveCodeLength="4194" docExpressionCount="362" docLength="4294" endLine="148" length="4" offset="3624" repeat="4" startLine="148" starttimestamp="1624232406782" timestamp="13567501" timestamp2="13569093">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <Command __id="3062" _type="PauseCommand" date="Sun Jun 20 23:26:14 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13567501">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2002]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3063" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:14 EDT 2021" starttimestamp="1624232406782" timestamp="13567507" />
  <Command __id="3064" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:14 EDT 2021" starttimestamp="1624232406782" timestamp="13567507" />
  <Command __id="3066" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:14 EDT 2021" starttimestamp="1624232406782" timestamp="13567908" />
  <Command __id="3067" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:14 EDT 2021" starttimestamp="1624232406782" timestamp="13567908" />
  <Command __id="3069" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:15 EDT 2021" starttimestamp="1624232406782" timestamp="13568403" />
  <Command __id="3070" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:15 EDT 2021" starttimestamp="1624232406782" timestamp="13568404" />
  <Command __id="3072" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:15 EDT 2021" starttimestamp="1624232406782" timestamp="13569095" />
  <Command __id="3073" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:15 EDT 2021" starttimestamp="1624232406782" timestamp="13569095" />
  <Command __id="3075" _type="InsertStringCommand" date="Sun Jun 20 23:26:16 EDT 2021" starttimestamp="1624232406782" timestamp="13569667" timestamp2="13569667">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3076" _type="InsertStringCommand" date="Sun Jun 20 23:26:16 EDT 2021" starttimestamp="1624232406782" timestamp="13569668" timestamp2="13569668">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3078" _type="InsertStringCommand" date="Sun Jun 20 23:26:16 EDT 2021" starttimestamp="1624232406782" timestamp="13569802" timestamp2="13569802">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3079" _type="InsertStringCommand" date="Sun Jun 20 23:26:16 EDT 2021" starttimestamp="1624232406782" timestamp="13569803" timestamp2="13569803">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3081" _type="InsertStringCommand" date="Sun Jun 20 23:26:16 EDT 2021" starttimestamp="1624232406782" timestamp="13570114" timestamp2="13570114">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3082" _type="InsertStringCommand" date="Sun Jun 20 23:26:16 EDT 2021" starttimestamp="1624232406782" timestamp="13570114" timestamp2="13570114">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3084" _type="InsertStringCommand" date="Sun Jun 20 23:26:17 EDT 2021" starttimestamp="1624232406782" timestamp="13570229" timestamp2="13570229">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3085" _type="InsertStringCommand" date="Sun Jun 20 23:26:17 EDT 2021" starttimestamp="1624232406782" timestamp="13570229" timestamp2="13570229">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3087" _type="InsertStringCommand" date="Sun Jun 20 23:26:17 EDT 2021" starttimestamp="1624232406782" timestamp="13570452" timestamp2="13570452">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3088" _type="InsertStringCommand" date="Sun Jun 20 23:26:17 EDT 2021" starttimestamp="1624232406782" timestamp="13570452" timestamp2="13570452">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3090" _type="PauseCommand" date="Sun Jun 20 23:26:19 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13572508">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2056]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3089" _type="MoveCaretCommand" caretOffset="3110" date="Sun Jun 20 23:26:19 EDT 2021" docOffset="3675" starttimestamp="1624232406782" timestamp="13572508" />
  <Command __id="3091" _type="MoveCaretCommand" caretOffset="3110" date="Sun Jun 20 23:26:19 EDT 2021" docOffset="3675" starttimestamp="1624232406782" timestamp="13572509" />
  <DocumentChange __id="3074" _type="Insert" date="Sun Jun 20 23:26:16 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" length="5" offset="3624" repeat="5" starttimestamp="1624232406782" timestamp="13569663" timestamp2="13570448">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <Command __id="3093" _type="PauseCommand" date="Sun Jun 20 23:26:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13574096">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1587]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="3092" _type="Delete" date="Sun Jun 20 23:26:20 EDT 2021" docASTNodeCount="662" docActiveCodeLength="4194" docExpressionCount="462" docLength="4294" endLine="149" length="5" offset="3670" repeat="5" startLine="149" starttimestamp="1624232406782" timestamp="13574096" timestamp2="13577426">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <Command __id="3094" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:20 EDT 2021" starttimestamp="1624232406782" timestamp="13574100" />
  <Command __id="3095" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:20 EDT 2021" starttimestamp="1624232406782" timestamp="13574100" />
  <Command __id="3097" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:21 EDT 2021" starttimestamp="1624232406782" timestamp="13574475" />
  <Command __id="3098" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:21 EDT 2021" starttimestamp="1624232406782" timestamp="13574475" />
  <Command __id="3100" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:21 EDT 2021" starttimestamp="1624232406782" timestamp="13575201" />
  <Command __id="3101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:21 EDT 2021" starttimestamp="1624232406782" timestamp="13575201" />
  <Command __id="3103" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:22 EDT 2021" starttimestamp="1624232406782" timestamp="13575808" />
  <Command __id="3104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:22 EDT 2021" starttimestamp="1624232406782" timestamp="13575808" />
  <Command __id="3107" _type="PauseCommand" date="Sun Jun 20 23:26:24 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13577431">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1623]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:24 EDT 2021" starttimestamp="1624232406782" timestamp="13577431" />
  <Command __id="3108" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:26:24 EDT 2021" starttimestamp="1624232406782" timestamp="13577431" />
  <Command __id="3110" _type="InsertStringCommand" date="Sun Jun 20 23:26:24 EDT 2021" starttimestamp="1624232406782" timestamp="13577905" timestamp2="13577905">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3111" _type="InsertStringCommand" date="Sun Jun 20 23:26:24 EDT 2021" starttimestamp="1624232406782" timestamp="13577905" timestamp2="13577905">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3113" _type="InsertStringCommand" date="Sun Jun 20 23:26:25 EDT 2021" starttimestamp="1624232406782" timestamp="13578239" timestamp2="13578239">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3114" _type="InsertStringCommand" date="Sun Jun 20 23:26:25 EDT 2021" starttimestamp="1624232406782" timestamp="13578239" timestamp2="13578239">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3116" _type="InsertStringCommand" date="Sun Jun 20 23:26:25 EDT 2021" starttimestamp="1624232406782" timestamp="13578417" timestamp2="13578417">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3117" _type="InsertStringCommand" date="Sun Jun 20 23:26:25 EDT 2021" starttimestamp="1624232406782" timestamp="13578417" timestamp2="13578417">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3119" _type="InsertStringCommand" date="Sun Jun 20 23:26:25 EDT 2021" starttimestamp="1624232406782" timestamp="13578599" timestamp2="13578599">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3120" _type="InsertStringCommand" date="Sun Jun 20 23:26:25 EDT 2021" starttimestamp="1624232406782" timestamp="13578599" timestamp2="13578599">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3122" _type="PauseCommand" date="Sun Jun 20 23:26:27 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13581189">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2590]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3121" _type="MoveCaretCommand" caretOffset="2822" date="Sun Jun 20 23:26:27 EDT 2021" docOffset="3387" starttimestamp="1624232406782" timestamp="13581189" />
  <Command __id="3123" _type="MoveCaretCommand" caretOffset="2822" date="Sun Jun 20 23:26:27 EDT 2021" docOffset="3387" starttimestamp="1624232406782" timestamp="13581190" />
  <Command __id="3125" _type="PauseCommand" date="Sun Jun 20 23:26:33 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13586507">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5317]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3126" _type="MoveCaretCommand" caretOffset="3174" date="Sun Jun 20 23:26:33 EDT 2021" docOffset="3963" starttimestamp="1624232406782" timestamp="13586666" />
  <Command __id="3128" _type="PauseCommand" date="Sun Jun 20 23:26:34 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13588069">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1403]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3127" _type="ShellCommand" date="Sun Jun 20 23:26:34 EDT 2021" starttimestamp="1624232406782" timestamp="13588069" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3130" _type="PauseCommand" date="Sun Jun 20 23:26:36 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13590102">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2033]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3129" _type="ShellCommand" date="Sun Jun 20 23:26:36 EDT 2021" starttimestamp="1624232406782" timestamp="13590102" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3131" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:26:37 EDT 2021" starttimestamp="1624232406782" timestamp="13590253" />
  <Command __id="3132" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:26:37 EDT 2021" starttimestamp="1624232406782" timestamp="13590300" />
  <Command __id="3133" _type="RunCommand" date="Sun Jun 20 23:26:37 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13590455" type="Run" />
  <Command __id="3134" _type="RunCommand" date="Sun Jun 20 23:26:37 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13590455" type="Run" />
  <Command __id="3135" _type="ShellCommand" date="Sun Jun 20 23:26:37 EDT 2021" starttimestamp="1624232406782" timestamp="13591167" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3137" _type="PauseCommand" date="Sun Jun 20 23:26:39 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13592223">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1056]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3136" _type="ConsoleOutput" date="Sun Jun 20 23:26:39 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13592223" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@7b227d8d
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@30b7c004]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@30b7c004]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4278a03f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"grail.compositeFigs.MontyAvatar@7b227d8d¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@3"), Diff(DELETE,"29a7c3c"), Diff(INSERT,"0b7c004"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@3"), Diff(DELETE,"29a7c3c"), Diff(INSERT,"0b7c004"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5f6f997a"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5f6f997a"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"42f8f008"), Diff(INSERT,"2928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"42f8f008"), Diff(INSERT,"2928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"1a2df43d"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"1a2df43d"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"7bb710d8"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"7bb710d8"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"10"), Diff(INSERT,"4"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"58b0e29d"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"58b0e29d"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"14"), Diff(INSERT,"8"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"5d4d2133"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"5d4d2133"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3139" _type="PauseCommand" date="Sun Jun 20 23:26:43 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13596229">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4006]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3138" _type="ConsoleOutput" date="Sun Jun 20 23:26:43 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13596229" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5f6f997a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5f6f997a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@42f8f008]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@42f8f008]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1a2df43d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1a2df43d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@7bb710d8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@7bb710d8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@58b0e29d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@58b0e29d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@5d4d2133]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@5d4d2133]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@28b4aabb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@28b4aabb]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"grail.compositeFigs.MontyAvatar@7b227d8d¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"30b7c004"), Diff(INSERT,"5f6f997a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"30b7c004"), Diff(INSERT,"5f6f997a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"42f8f008"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"42f8f008"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2928854b"), Diff(INSERT,"1a2df43d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2928854b"), Diff(INSERT,"1a2df43d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"7bb710d8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"7bb710d8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"58b0e29d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"58b0e29d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"2f177a4b"), Diff(INSERT,"5d4d2133"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"2f177a4b"), Diff(INSERT,"5d4d2133"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"8"), Diff(INSERT,"14"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"28b4aabb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"28b4aabb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@147ed70f]¶")]]]></diff>
  </Command>
  <Command __id="3141" _type="PauseCommand" date="Sun Jun 20 23:26:56 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13609445">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13216]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3140" _type="ShellCommand" date="Sun Jun 20 23:26:56 EDT 2021" starttimestamp="1624232406782" timestamp="13609445" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3142" _type="RunCommand" date="Sun Jun 20 23:26:57 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13610260" type="Run" />
  <Command __id="3143" _type="RunCommand" date="Sun Jun 20 23:26:57 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13610260" type="Run" />
  <Command __id="3145" _type="PauseCommand" date="Sun Jun 20 23:27:00 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13613241">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2981]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3146" _type="MoveCaretCommand" caretOffset="3109" date="Sun Jun 20 23:27:00 EDT 2021" docOffset="3674" starttimestamp="1624232406782" timestamp="13613451" />
  <Command __id="3147" _type="MoveCaretCommand" caretOffset="3109" date="Sun Jun 20 23:27:00 EDT 2021" docOffset="3674" starttimestamp="1624232406782" timestamp="13613454" />
  <Command __id="3149" _type="PauseCommand" date="Sun Jun 20 23:27:05 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13618939">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5485]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3150" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:05 EDT 2021" starttimestamp="1624232406782" timestamp="13618945" />
  <Command __id="3151" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:05 EDT 2021" starttimestamp="1624232406782" timestamp="13618945" />
  <Command __id="3153" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:06 EDT 2021" starttimestamp="1624232406782" timestamp="13619481" />
  <Command __id="3154" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:06 EDT 2021" starttimestamp="1624232406782" timestamp="13619481" />
  <Command __id="3156" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:06 EDT 2021" starttimestamp="1624232406782" timestamp="13620063" />
  <Command __id="3157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:06 EDT 2021" starttimestamp="1624232406782" timestamp="13620063" />
  <Command __id="3159" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:07 EDT 2021" starttimestamp="1624232406782" timestamp="13620672" />
  <Command __id="3160" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:27:07 EDT 2021" starttimestamp="1624232406782" timestamp="13620672" />
  <Command __id="3162" _type="InsertStringCommand" date="Sun Jun 20 23:27:07 EDT 2021" starttimestamp="1624232406782" timestamp="13621214" timestamp2="13621214">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3163" _type="InsertStringCommand" date="Sun Jun 20 23:27:07 EDT 2021" starttimestamp="1624232406782" timestamp="13621214" timestamp2="13621214">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3165" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13621482" timestamp2="13621482">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3166" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13621482" timestamp2="13621482">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3168" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13621774" timestamp2="13621774">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3169" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13621774" timestamp2="13621774">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3171" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13621953" timestamp2="13621953">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3172" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13621953" timestamp2="13621953">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3174" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13622182" timestamp2="13622182">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3175" _type="InsertStringCommand" date="Sun Jun 20 23:27:08 EDT 2021" starttimestamp="1624232406782" timestamp="13622182" timestamp2="13622182">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3177" _type="PauseCommand" date="Sun Jun 20 23:27:16 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13629598">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7416]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3176" _type="ShellCommand" date="Sun Jun 20 23:27:16 EDT 2021" starttimestamp="1624232406782" timestamp="13629598" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3179" _type="PauseCommand" date="Sun Jun 20 23:27:19 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13632295">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2697]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3178" _type="ShellCommand" date="Sun Jun 20 23:27:19 EDT 2021" starttimestamp="1624232406782" timestamp="13632295" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3180" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:27:19 EDT 2021" starttimestamp="1624232406782" timestamp="13632417" />
  <Command __id="3181" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:27:19 EDT 2021" starttimestamp="1624232406782" timestamp="13632443" />
  <Command __id="3182" _type="RunCommand" date="Sun Jun 20 23:27:19 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13632520" type="Run" />
  <Command __id="3183" _type="RunCommand" date="Sun Jun 20 23:27:19 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13632520" type="Run" />
  <Command __id="3184" _type="ShellCommand" date="Sun Jun 20 23:27:19 EDT 2021" starttimestamp="1624232406782" timestamp="13633127" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3186" _type="PauseCommand" date="Sun Jun 20 23:27:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13634195">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3185" _type="ConsoleOutput" date="Sun Jun 20 23:27:20 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13634195" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@7219ec67
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"grail.compositeFigs.MontyAvatar@7219ec67¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5f6f997a"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5f6f997a"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"42f8f008"), Diff(INSERT,"2928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"42f8f008"), Diff(INSERT,"2928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1a2df43d"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1a2df43d"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"7bb710d8"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"7bb710d8"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"58b0e29d"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"58b0e29d"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"10"), Diff(INSERT,"4"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"5d4d2133"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"5d4d2133"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"14"), Diff(INSERT,"8"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"28b4aabb"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"28b4aabb"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3188" _type="PauseCommand" date="Sun Jun 20 23:27:24 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13637726">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3531]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3187" _type="ConsoleOutput" date="Sun Jun 20 23:27:24 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13637726" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@20a0c605]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@20a0c605]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@24b0df2f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@24b0df2f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1b097e46]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1b097e46]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4590ba92]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4590ba92]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@6326cccb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6326cccb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@414d2e27]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@414d2e27]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@11669306]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@11669306]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"grail.compositeFigs.MontyAvatar@7219ec67¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"20a0c605"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"20a0c605"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"928854b"), Diff(INSERT,"4b0df2f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"928854b"), Diff(INSERT,"4b0df2f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"1b097e46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"1b097e46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"4590ba92"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"4590ba92"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2f177a4"), Diff(INSERT,"6326ccc"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2f177a4"), Diff(INSERT,"6326ccc"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@4"), Diff(DELETE,"278a03f"), Diff(INSERT,"14d2e27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@4"), Diff(DELETE,"278a03f"), Diff(INSERT,"14d2e27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"8"), Diff(INSERT,"14"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@1"), Diff(DELETE,"47ed70f"), Diff(INSERT,"1669306"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@1"), Diff(DELETE,"47ed70f"), Diff(INSERT,"1669306"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶")]]]></diff>
  </Command>
  <Command __id="3190" _type="PauseCommand" date="Sun Jun 20 23:28:03 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="13677074">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[39348]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3189" _type="ShellCommand" date="Sun Jun 20 23:28:03 EDT 2021" starttimestamp="1624232406782" timestamp="13677074" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3192" _type="PauseCommand" date="Sun Jun 20 23:28:09 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13682657">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5583]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3191" _type="MoveCaretCommand" caretOffset="3007" date="Sun Jun 20 23:28:09 EDT 2021" docOffset="3572" starttimestamp="1624232406782" timestamp="13682657" />
  <Command __id="3193" _type="MoveCaretCommand" caretOffset="3007" date="Sun Jun 20 23:28:09 EDT 2021" docOffset="3572" starttimestamp="1624232406782" timestamp="13682657" />
  <Command __id="3194" _type="MoveCaretCommand" caretOffset="3007" date="Sun Jun 20 23:28:09 EDT 2021" docOffset="3572" starttimestamp="1624232406782" timestamp="13682814" />
  <Command __id="3195" _type="MoveCaretCommand" caretOffset="3007" date="Sun Jun 20 23:28:09 EDT 2021" docOffset="3572" starttimestamp="1624232406782" timestamp="13682814" />
  <Command __id="3196" _type="SelectTextCommand" caretOffset="3022" date="Sun Jun 20 23:28:09 EDT 2021" end="3022" start="2981" starttimestamp="1624232406782" timestamp="13682982" />
  <Command __id="3197" _type="SelectTextCommand" caretOffset="3022" date="Sun Jun 20 23:28:09 EDT 2021" end="3022" start="2981" starttimestamp="1624232406782" timestamp="13682982" />
  <Command __id="3199" _type="PauseCommand" date="Sun Jun 20 23:28:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13684509">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1527]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3198" _type="MoveCaretCommand" caretOffset="3008" date="Sun Jun 20 23:28:11 EDT 2021" docOffset="3573" starttimestamp="1624232406782" timestamp="13684509" />
  <Command __id="3200" _type="MoveCaretCommand" caretOffset="3008" date="Sun Jun 20 23:28:11 EDT 2021" docOffset="3573" starttimestamp="1624232406782" timestamp="13684509" />
  <Command __id="3202" _type="PauseCommand" date="Sun Jun 20 23:28:13 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13686437">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1928]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3201" _type="SelectTextCommand" caretOffset="2987" date="Sun Jun 20 23:28:13 EDT 2021" end="3008" start="2987" starttimestamp="1624232406782" timestamp="13686437" />
  <Command __id="3203" _type="SelectTextCommand" caretOffset="2987" date="Sun Jun 20 23:28:13 EDT 2021" end="3008" start="2987" starttimestamp="1624232406782" timestamp="13686437" />
  <Command __id="3205" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:13 EDT 2021" starttimestamp="1624232406782" timestamp="13687136" />
  <Command __id="3206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:13 EDT 2021" starttimestamp="1624232406782" timestamp="13687136" />
  <Command __id="3208" _type="PauseCommand" date="Sun Jun 20 23:28:16 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13689247">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2111]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3209" _type="UndoCommand" date="Sun Jun 20 23:28:16 EDT 2021" starttimestamp="1624232406782" timestamp="13689249" />
  <Command __id="3210" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="13690243" />
  <Command __id="3211" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="13690243" />
  <Command __id="3212" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="13690732" />
  <Command __id="3213" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="13690732" />
  <Command __id="3214" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="13691069" />
  <Command __id="3215" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="13691069" />
  <Command __id="3216" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691230" />
  <Command __id="3217" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691230" />
  <Command __id="3218" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691729" />
  <Command __id="3219" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691729" />
  <Command __id="3220" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691815" />
  <Command __id="3221" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691815" />
  <Command __id="3222" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691899" />
  <Command __id="3223" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691900" />
  <Command __id="3224" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691983" />
  <Command __id="3225" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13691984" />
  <Command __id="3226" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13692068" />
  <Command __id="3227" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13692068" />
  <Command __id="3228" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13692151" />
  <Command __id="3229" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:18 EDT 2021" starttimestamp="1624232406782" timestamp="13692152" />
  <Command __id="3230" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692235" />
  <Command __id="3231" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692236" />
  <Command __id="3232" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692319" />
  <Command __id="3233" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692322" />
  <Command __id="3234" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692403" />
  <Command __id="3235" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692403" />
  <Command __id="3236" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692487" />
  <Command __id="3237" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692487" />
  <Command __id="3238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692571" />
  <Command __id="3239" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692571" />
  <Command __id="3240" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692658" />
  <Command __id="3241" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692658" />
  <Command __id="3242" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692739" />
  <Command __id="3243" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692740" />
  <Command __id="3244" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692824" />
  <Command __id="3245" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692824" />
  <Command __id="3246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692909" />
  <Command __id="3247" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692909" />
  <Command __id="3248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692991" />
  <Command __id="3249" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13692991" />
  <Command __id="3250" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13693074" />
  <Command __id="3251" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="13693075" />
  <Command __id="3252" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:20 EDT 2021" starttimestamp="1624232406782" timestamp="13693298" />
  <Command __id="3253" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:20 EDT 2021" starttimestamp="1624232406782" timestamp="13693299" />
  <Command __id="3255" _type="PauseCommand" date="Sun Jun 20 23:28:21 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13694337">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1038]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3256" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13694344" />
  <Command __id="3257" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13694344" />
  <Command __id="3259" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13694538" />
  <Command __id="3260" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13694538" />
  <Command __id="3262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13694812" />
  <Command __id="3263" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13694812" />
  <Command __id="3265" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13695083" />
  <Command __id="3266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:21 EDT 2021" starttimestamp="1624232406782" timestamp="13695084" />
  <Command __id="3268" _type="PauseCommand" date="Sun Jun 20 23:28:24 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13697240">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2156]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3269" _type="InsertStringCommand" date="Sun Jun 20 23:28:24 EDT 2021" starttimestamp="1624232406782" timestamp="13697246" timestamp2="13697246">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3270" _type="InsertStringCommand" date="Sun Jun 20 23:28:24 EDT 2021" starttimestamp="1624232406782" timestamp="13697246" timestamp2="13697246">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3271" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 23:28:24 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="13697256" />
  <Command __id="3273" _type="PauseCommand" date="Sun Jun 20 23:28:47 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="13720801">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[23544]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3272" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:28:47 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="13720800" />
  <Command __id="3275" _type="InsertStringCommand" date="Sun Jun 20 23:28:47 EDT 2021" starttimestamp="1624232406782" timestamp="13720840" timestamp2="13720840">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3276" _type="InsertStringCommand" date="Sun Jun 20 23:28:47 EDT 2021" starttimestamp="1624232406782" timestamp="13720840" timestamp2="13720840">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3278" _type="PauseCommand" date="Sun Jun 20 23:28:50 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13723611">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2771]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3277" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="13723611" />
  <Command __id="3279" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="13723611" />
  <Command __id="3280" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="13723784" />
  <Command __id="3281" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="13723784" />
  <Command __id="3282" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="13723992" />
  <Command __id="3283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="13723992" />
  <Command __id="3284" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:28:51 EDT 2021" starttimestamp="1624232406782" timestamp="13724331" />
  <Command __id="3285" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Sun Jun 20 23:28:51 EDT 2021" starttimestamp="1624232406782" timestamp="13724331" />
  <DocumentChange __id="3109" _type="Insert" date="Sun Jun 20 23:26:24 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4198" docExpressionCount="463" docLength="4298" length="4" offset="3670" repeat="4" starttimestamp="1624232406782" timestamp="13577899" timestamp2="13578596">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <Command __id="3124" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:26:33 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13586507">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3144" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:27:00 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4198" docExpressionCount="463" docLength="4298" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13613241">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue() == "approach") {¶				if((Boolean)evt.getNewValue() == "), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e) {¶				buttons.getApproach().setEnabled("), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue() == "approach") {
				if((Boolean)evt.getNewValue() == false) {
				buttons.getApproach().setEnabled(true);
				} 
				buttons.getApproach().setEnabled(true);
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3148" _type="Delete" date="Sun Jun 20 23:27:05 EDT 2021" docASTNodeCount="662" docActiveCodeLength="4194" docExpressionCount="462" docLength="4294" endLine="149" length="4" offset="3670" repeat="4" startLine="149" starttimestamp="1624232406782" timestamp="13618939" timestamp2="13620668">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="3161" _type="Insert" date="Sun Jun 20 23:27:07 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" length="5" offset="3670" repeat="5" starttimestamp="1624232406782" timestamp="13621208" timestamp2="13622178">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <DocumentChange __id="3204" _type="Delete" date="Sun Jun 20 23:28:13 EDT 2021" docASTNodeCount="659" docActiveCodeLength="4178" docExpressionCount="459" docLength="4278" endLine="147" length="21" offset="3552" startLine="147" starttimestamp="1624232406782" timestamp="13687133">
    <text><![CDATA[evt.getOldValue() == ]]></text>
  </DocumentChange>
  <DocumentChange __id="3207" _type="Insert" date="Sun Jun 20 23:28:16 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4199" docExpressionCount="463" docLength="4299" length="21" offset="3552" starttimestamp="1624232406782" timestamp="13689247">
    <text><![CDATA[evt.getOldValue() == ]]></text>
  </DocumentChange>
  <DocumentChange __id="3254" _type="Delete" date="Sun Jun 20 23:28:21 EDT 2021" docASTNodeCount="661" docActiveCodeLength="4195" docExpressionCount="461" docLength="4295" endLine="147" length="4" offset="3569" repeat="4" startLine="147" starttimestamp="1624232406782" timestamp="13694337" timestamp2="13695080">
    <text><![CDATA[ == ]]></text>
  </DocumentChange>
  <DocumentChange __id="3267" _type="Insert" date="Sun Jun 20 23:28:24 EDT 2021" docASTNodeCount="663" docActiveCodeLength="4196" docExpressionCount="463" docLength="4296" length="1" offset="3569" starttimestamp="1624232406782" timestamp="13697240">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="3274" _type="Insert" date="Sun Jun 20 23:28:47 EDT 2021" docASTNodeCount="664" docActiveCodeLength="4207" docExpressionCount="464" docLength="4307" length="11" offset="3570" starttimestamp="1624232406782" timestamp="13720807">
    <text><![CDATA[equals(evt)]]></text>
  </DocumentChange>
  <Command __id="3287" _type="PauseCommand" date="Sun Jun 20 23:28:52 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13725497">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1166]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:52 EDT 2021" starttimestamp="1624232406782" timestamp="13725502" />
  <Command __id="3289" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:52 EDT 2021" starttimestamp="1624232406782" timestamp="13725502" />
  <Command __id="3292" _type="PauseCommand" date="Sun Jun 20 23:28:53 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13726651">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1149]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3291" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="13726651" />
  <Command __id="3293" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="13726651" />
  <Command __id="3295" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="13727142" />
  <Command __id="3296" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="13727142" />
  <Command __id="3298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:54 EDT 2021" starttimestamp="1624232406782" timestamp="13727638" />
  <Command __id="3299" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sun Jun 20 23:28:54 EDT 2021" starttimestamp="1624232406782" timestamp="13727638" />
  <Command __id="3300" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728515" />
  <Command __id="3301" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728515" />
  <Command __id="3302" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728663" />
  <Command __id="3303" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728664" />
  <Command __id="3304" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728805" />
  <Command __id="3305" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728805" />
  <Command __id="3306" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728937" />
  <Command __id="3307" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13728937" />
  <Command __id="3308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13729097" />
  <Command __id="3309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="13729098" />
  <Command __id="3310" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729233" />
  <Command __id="3311" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729233" />
  <Command __id="3312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729454" />
  <Command __id="3313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729454" />
  <Command __id="3314" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729592" />
  <Command __id="3315" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729592" />
  <Command __id="3316" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729750" />
  <Command __id="3317" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:56 EDT 2021" starttimestamp="1624232406782" timestamp="13729750" />
  <Command __id="3318" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:57 EDT 2021" starttimestamp="1624232406782" timestamp="13730269" />
  <Command __id="3319" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sun Jun 20 23:28:57 EDT 2021" starttimestamp="1624232406782" timestamp="13730269" />
  <Command __id="3321" _type="PauseCommand" date="Sun Jun 20 23:28:58 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13731437">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1168]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3322" _type="InsertStringCommand" date="Sun Jun 20 23:28:58 EDT 2021" starttimestamp="1624232406782" timestamp="13731443" timestamp2="13731443">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3323" _type="InsertStringCommand" date="Sun Jun 20 23:28:58 EDT 2021" starttimestamp="1624232406782" timestamp="13731443" timestamp2="13731443">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3325" _type="PauseCommand" date="Sun Jun 20 23:29:02 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13735888">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4445]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3324" _type="MoveCaretCommand" caretOffset="3024" date="Sun Jun 20 23:29:02 EDT 2021" docOffset="3589" starttimestamp="1624232406782" timestamp="13735888" />
  <Command __id="3326" _type="MoveCaretCommand" caretOffset="3024" date="Sun Jun 20 23:29:02 EDT 2021" docOffset="3589" starttimestamp="1624232406782" timestamp="13735889" />
  <Command __id="3327" _type="SelectTextCommand" caretOffset="3023" date="Sun Jun 20 23:29:02 EDT 2021" end="3023" start="2987" starttimestamp="1624232406782" timestamp="13736057" />
  <Command __id="3328" _type="SelectTextCommand" caretOffset="3023" date="Sun Jun 20 23:29:02 EDT 2021" end="3023" start="2987" starttimestamp="1624232406782" timestamp="13736057" />
  <Command __id="3329" _type="SelectTextCommand" caretOffset="3027" date="Sun Jun 20 23:29:03 EDT 2021" end="3027" start="2981" starttimestamp="1624232406782" timestamp="13736237" />
  <Command __id="3330" _type="SelectTextCommand" caretOffset="3027" date="Sun Jun 20 23:29:03 EDT 2021" end="3027" start="2981" starttimestamp="1624232406782" timestamp="13736237" />
  <Command __id="3332" _type="PauseCommand" date="Sun Jun 20 23:29:04 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13737433">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1196]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3331" _type="MoveCaretCommand" caretOffset="3581" date="Sun Jun 20 23:29:04 EDT 2021" docOffset="4146" starttimestamp="1624232406782" timestamp="13737433" />
  <Command __id="3333" _type="MoveCaretCommand" caretOffset="3581" date="Sun Jun 20 23:29:04 EDT 2021" docOffset="4146" starttimestamp="1624232406782" timestamp="13737433" />
  <Command __id="3335" _type="PauseCommand" date="Sun Jun 20 23:29:10 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13744122">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6689]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3334" _type="ShellCommand" date="Sun Jun 20 23:29:10 EDT 2021" starttimestamp="1624232406782" timestamp="13744122" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3337" _type="PauseCommand" date="Sun Jun 20 23:29:12 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13745281">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1159]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3336" _type="ShellCommand" date="Sun Jun 20 23:29:12 EDT 2021" starttimestamp="1624232406782" timestamp="13745281" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3338" _type="RunCommand" date="Sun Jun 20 23:29:12 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13745294" type="Run" />
  <Command __id="3339" _type="RunCommand" date="Sun Jun 20 23:29:12 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13745294" type="Run" />
  <Command __id="3341" _type="PauseCommand" date="Sun Jun 20 23:29:14 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13747407">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2113]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3340" _type="ShellCommand" date="Sun Jun 20 23:29:14 EDT 2021" starttimestamp="1624232406782" timestamp="13747407" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3343" _type="PauseCommand" date="Sun Jun 20 23:29:15 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13749065">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1658]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3342" _type="ShellCommand" date="Sun Jun 20 23:29:15 EDT 2021" starttimestamp="1624232406782" timestamp="13749065" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3344" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:29:15 EDT 2021" starttimestamp="1624232406782" timestamp="13749197" />
  <Command __id="3345" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:29:15 EDT 2021" starttimestamp="1624232406782" timestamp="13749212" />
  <Command __id="3346" _type="RunCommand" date="Sun Jun 20 23:29:16 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13749289" type="Run" />
  <Command __id="3347" _type="RunCommand" date="Sun Jun 20 23:29:16 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13749289" type="Run" />
  <Command __id="3348" _type="ShellCommand" date="Sun Jun 20 23:29:16 EDT 2021" starttimestamp="1624232406782" timestamp="13749877" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3349" _type="ConsoleOutput" date="Sun Jun 20 23:29:17 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13750856" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@45018215
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@147ed70f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@61dd025]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@124c278f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@124c278f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@124c278f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@124c278f]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"grail.compositeFigs.MontyAvatar@45018215¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"0a0c605"), Diff(INSERT,"928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"0a0c605"), Diff(INSERT,"928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"4b0df2f"), Diff(INSERT,"7ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"4b0df2f"), Diff(INSERT,"7ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1b097e46"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1b097e46"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"4590ba92"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"4590ba92"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6326cccb"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6326cccb"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"10"), Diff(INSERT,"4"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"4"), Diff(EQUAL,"14"), Diff(DELETE,"d2e27"), Diff(INSERT,"7ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"4"), Diff(EQUAL,"14"), Diff(DELETE,"d2e27"), Diff(INSERT,"7ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"14"), Diff(INSERT,"8"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"11669306"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"11669306"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"61dd025"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3353" _type="PauseCommand" date="Sun Jun 20 23:29:32 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13765730">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11208]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3352" _type="RunCommand" date="Sun Jun 20 23:29:32 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13765729" type="Run" />
  <Command __id="3354" _type="RunCommand" date="Sun Jun 20 23:29:32 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13765730" type="Run" />
  <Command __id="3355" _type="ShellCommand" date="Sun Jun 20 23:29:32 EDT 2021" starttimestamp="1624232406782" timestamp="13766100" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3357" _type="PauseCommand" date="Sun Jun 20 23:29:38 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13772117">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6017]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3356" _type="MoveCaretCommand" caretOffset="3314" date="Sun Jun 20 23:29:38 EDT 2021" docOffset="3879" starttimestamp="1624232406782" timestamp="13772117" />
  <Command __id="3358" _type="MoveCaretCommand" caretOffset="3314" date="Sun Jun 20 23:29:38 EDT 2021" docOffset="3879" starttimestamp="1624232406782" timestamp="13772117" />
  <Command __id="3360" _type="PauseCommand" date="Sun Jun 20 23:29:39 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13773163">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1046]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3359" _type="MoveCaretCommand" caretOffset="3357" date="Sun Jun 20 23:29:39 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="13773163" />
  <Command __id="3361" _type="MoveCaretCommand" caretOffset="3357" date="Sun Jun 20 23:29:39 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="13773163" />
  <Command __id="3363" _type="PauseCommand" date="Sun Jun 20 23:29:41 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13774378">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1215]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3362" _type="MoveCaretCommand" caretOffset="2984" date="Sun Jun 20 23:29:41 EDT 2021" docOffset="3549" starttimestamp="1624232406782" timestamp="13774378" />
  <Command __id="3364" _type="MoveCaretCommand" caretOffset="2984" date="Sun Jun 20 23:29:41 EDT 2021" docOffset="3549" starttimestamp="1624232406782" timestamp="13774378" />
  <Command __id="3366" _type="PauseCommand" date="Sun Jun 20 23:29:42 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13775739">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1361]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3365" _type="MoveCaretCommand" caretOffset="2943" date="Sun Jun 20 23:29:42 EDT 2021" docOffset="3508" starttimestamp="1624232406782" timestamp="13775739" />
  <Command __id="3367" _type="MoveCaretCommand" caretOffset="2943" date="Sun Jun 20 23:29:42 EDT 2021" docOffset="3508" starttimestamp="1624232406782" timestamp="13775740" />
  <Command __id="3369" _type="PauseCommand" date="Sun Jun 20 23:29:44 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13777981">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2241]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3368" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Jun 20 23:29:44 EDT 2021" starttimestamp="1624232406782" timestamp="13777981" />
  <Command __id="3370" _type="BreakPointCommand" date="Sun Jun 20 23:29:44 EDT 2021" lineNumber="147" starttimestamp="1624232406782" timestamp="13777986" type="BreakPointAdded" />
  <Command __id="3375" _type="PauseCommand" date="Sun Jun 20 23:29:48 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13781975">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1386]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3374" _type="RunCommand" date="Sun Jun 20 23:29:48 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13781975" type="Run" />
  <Command __id="3376" _type="RunCommand" date="Sun Jun 20 23:29:48 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13781975" type="Run" />
  <Command __id="3377" _type="RunCommand" date="Sun Jun 20 23:29:49 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13782221" type="Run" />
  <Command __id="3378" _type="RunCommand" date="Sun Jun 20 23:29:49 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13782258" type="Run" />
  <Command __id="3379" _type="RunCommand" date="Sun Jun 20 23:29:49 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13782392" type="Run" />
  <Command __id="3380" _type="ShellCommand" date="Sun Jun 20 23:29:49 EDT 2021" starttimestamp="1624232406782" timestamp="13782883" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3381" _type="RunCommand" date="Sun Jun 20 23:29:49 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13782943" type="Run" />
  <Command __id="3386" _type="PauseCommand" date="Sun Jun 20 23:29:52 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13785947">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1297]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3385" _type="RunCommand" date="Sun Jun 20 23:29:52 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13785947" type="Run" />
  <Command __id="3388" _type="MoveCaretCommand" caretOffset="3684" date="Sun Jun 20 23:29:53 EDT 2021" docOffset="4606" starttimestamp="1624232406782" timestamp="13786555" />
  <Command __id="3390" _type="PauseCommand" date="Sun Jun 20 23:30:04 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13797781">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11225]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="3389" _type="BreakPointCommand" date="Sun Jun 20 23:30:04 EDT 2021" lineNumber="157" starttimestamp="1624232406782" timestamp="13797780" type="BreakPointRemoved" />
  <Command __id="3391" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Jun 20 23:30:04 EDT 2021" starttimestamp="1624232406782" timestamp="13797819" />
  <Command __id="3393" _type="PauseCommand" date="Sun Jun 20 23:30:08 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13802032">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4213]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3392" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Jun 20 23:30:08 EDT 2021" starttimestamp="1624232406782" timestamp="13802032" />
  <Command __id="3394" _type="RunCommand" date="Sun Jun 20 23:30:08 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13802057" type="Debug" />
  <Command __id="3395" _type="RunCommand" date="Sun Jun 20 23:30:08 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13802057" type="Run" />
  <Command __id="3396" _type="RunCommand" date="Sun Jun 20 23:30:08 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13802058" type="Debug" />
  <Command __id="3397" _type="RunCommand" date="Sun Jun 20 23:30:08 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13802058" type="Run" />
  <Command __id="3402" _type="PauseCommand" date="Sun Jun 20 23:30:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13813231">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1743]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3401" _type="RunCommand" date="Sun Jun 20 23:30:20 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13813231" type="Run" />
  <Command __id="3403" _type="RunCommand" date="Sun Jun 20 23:30:20 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13813232" type="Run" />
  <Command __id="3404" _type="RunCommand" date="Sun Jun 20 23:30:20 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13813444" type="Run" />
  <Command __id="3405" _type="RunCommand" date="Sun Jun 20 23:30:20 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13813477" type="Run" />
  <Command __id="3406" _type="RunCommand" date="Sun Jun 20 23:30:20 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13813607" type="Run" />
  <Command __id="3407" _type="ShellCommand" date="Sun Jun 20 23:30:20 EDT 2021" starttimestamp="1624232406782" timestamp="13813939" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3408" _type="RunCommand" date="Sun Jun 20 23:30:20 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13814114" type="Run" />
  <Command __id="3409" _type="ConsoleOutput" date="Sun Jun 20 23:30:21 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13815032" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@7c729a55
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@44ebcd03]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@44ebcd03]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@694abbdc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@694abbdc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2e005c4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2e005c4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4567f35d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4567f35d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@5ffead27]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@5ffead27]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@6356695f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@6356695f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4f18837a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4f18837a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"grail.compositeFigs.MontyAvatar@"), Diff(DELETE,"3e58a80e"), Diff(INSERT,"7c729a55"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4"), Diff(DELETE,"a94ee4"), Diff(INSERT,"4ebcd03"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4"), Diff(DELETE,"a94ee4"), Diff(INSERT,"4ebcd03"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4cc451f2"), Diff(INSERT,"694abbdc"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4cc451f2"), Diff(INSERT,"694abbdc"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"6379e"), Diff(INSERT,"2e005c4"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"6379e"), Diff(INSERT,"2e005c4"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"294425a7"), Diff(INSERT,"4567f35d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"294425a7"), Diff(INSERT,"4567f35d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"67d48005"), Diff(INSERT,"5ffead27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"67d48005"), Diff(INSERT,"5ffead27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"9f116cc"), Diff(INSERT,"6356695f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"9f116cc"), Diff(INSERT,"6356695f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"12468a38"), Diff(INSERT,"4f18837a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"12468a38"), Diff(INSERT,"4f18837a]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@359f7cdf"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3411" _type="PauseCommand" date="Sun Jun 20 23:30:32 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="13825301">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10269]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3410" _type="ShellCommand" date="Sun Jun 20 23:30:32 EDT 2021" starttimestamp="1624232406782" timestamp="13825301" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3412" _type="RunCommand" date="Sun Jun 20 23:30:32 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13825554" type="Debug" />
  <Command __id="3413" _type="RunCommand" date="Sun Jun 20 23:30:32 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13825554" type="Run" />
  <Command __id="3414" _type="RunCommand" date="Sun Jun 20 23:30:32 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13825554" type="Debug" />
  <Command __id="3415" _type="RunCommand" date="Sun Jun 20 23:30:32 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13825554" type="Run" />
  <Command __id="3417" _type="PauseCommand" date="Sun Jun 20 23:31:21 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="13874441">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[48887]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3418" _type="MoveCaretCommand" caretOffset="2424" date="Sun Jun 20 23:31:21 EDT 2021" docOffset="3291" starttimestamp="1624232406782" timestamp="13874609" />
  <Command __id="3420" _type="PauseCommand" date="Sun Jun 20 23:31:27 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13880324">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5715]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3421" _type="MoveCaretCommand" caretOffset="2943" date="Sun Jun 20 23:31:27 EDT 2021" docOffset="3508" starttimestamp="1624232406782" timestamp="13880406" />
  <Command __id="3423" _type="PauseCommand" date="Sun Jun 20 23:31:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13881505">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1099]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3422" _type="ShellCommand" date="Sun Jun 20 23:31:28 EDT 2021" starttimestamp="1624232406782" timestamp="13881505" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3425" _type="PauseCommand" date="Sun Jun 20 23:31:36 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13890199">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8694]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3424" _type="ShellCommand" date="Sun Jun 20 23:31:36 EDT 2021" starttimestamp="1624232406782" timestamp="13890199" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3427" _type="MoveCaretCommand" caretOffset="0" date="Sun Jun 20 23:31:37 EDT 2021" docOffset="0" starttimestamp="1624232406782" timestamp="13890557" />
  <Command __id="3429" _type="PauseCommand" date="Sun Jun 20 23:32:26 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="13939332">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[48775]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3430" _type="MoveCaretCommand" caretOffset="2943" date="Sun Jun 20 23:32:26 EDT 2021" docOffset="3508" starttimestamp="1624232406782" timestamp="13939444" />
  <Command __id="3432" _type="PauseCommand" date="Sun Jun 20 23:32:32 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13945761">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6317]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3431" _type="MoveCaretCommand" caretOffset="879" date="Sun Jun 20 23:32:32 EDT 2021" docOffset="1444" starttimestamp="1624232406782" timestamp="13945761" />
  <Command __id="3433" _type="MoveCaretCommand" caretOffset="879" date="Sun Jun 20 23:32:32 EDT 2021" docOffset="1444" starttimestamp="1624232406782" timestamp="13945761" />
  <Command __id="3434" _type="MoveCaretCommand" caretOffset="926" date="Sun Jun 20 23:32:33 EDT 2021" docOffset="1491" starttimestamp="1624232406782" timestamp="13946335" />
  <Command __id="3435" _type="MoveCaretCommand" caretOffset="926" date="Sun Jun 20 23:32:33 EDT 2021" docOffset="1491" starttimestamp="1624232406782" timestamp="13946335" />
  <Command __id="3437" _type="PauseCommand" date="Sun Jun 20 23:32:38 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13951672">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5337]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3438" _type="InsertStringCommand" date="Sun Jun 20 23:32:38 EDT 2021" starttimestamp="1624232406782" timestamp="13951676" timestamp2="13951676">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3439" _type="InsertStringCommand" date="Sun Jun 20 23:32:38 EDT 2021" starttimestamp="1624232406782" timestamp="13951676" timestamp2="13951676">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3441" _type="PauseCommand" date="Sun Jun 20 23:32:43 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13956799">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5123]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3442" _type="InsertStringCommand" date="Sun Jun 20 23:32:43 EDT 2021" starttimestamp="1624232406782" timestamp="13956801" timestamp2="13956801">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3443" _type="InsertStringCommand" date="Sun Jun 20 23:32:43 EDT 2021" starttimestamp="1624232406782" timestamp="13956801" timestamp2="13956801">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3445" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957254" timestamp2="13957254">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="3446" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957254" timestamp2="13957254">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="3448" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957521" timestamp2="13957521">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3449" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957521" timestamp2="13957521">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3451" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957721" timestamp2="13957721">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3452" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957721" timestamp2="13957721">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3454" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957858" timestamp2="13957858">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3455" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13957858" timestamp2="13957858">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3457" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13958107" timestamp2="13958107">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3458" _type="InsertStringCommand" date="Sun Jun 20 23:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="13958107" timestamp2="13958107">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3460" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13958265" timestamp2="13958265">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3461" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13958265" timestamp2="13958265">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3463" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13958738" timestamp2="13958738">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3464" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13958738" timestamp2="13958738">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3466" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13958917" timestamp2="13958917">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3467" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13958918" timestamp2="13958918">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3469" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13959094" timestamp2="13959094">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3470" _type="InsertStringCommand" date="Sun Jun 20 23:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="13959094" timestamp2="13959094">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3472" _type="InsertStringCommand" date="Sun Jun 20 23:32:46 EDT 2021" starttimestamp="1624232406782" timestamp="13959386" timestamp2="13959386">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3473" _type="InsertStringCommand" date="Sun Jun 20 23:32:46 EDT 2021" starttimestamp="1624232406782" timestamp="13959386" timestamp2="13959386">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3475" _type="InsertStringCommand" date="Sun Jun 20 23:32:46 EDT 2021" starttimestamp="1624232406782" timestamp="13959682" timestamp2="13959682">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="3286" _type="Delete" date="Sun Jun 20 23:28:52 EDT 2021" docASTNodeCount="665" docActiveCodeLength="4203" docExpressionCount="464" docLength="4303" endLine="147" length="4" offset="3577" repeat="4" startLine="147" starttimestamp="1624232406782" timestamp="13725497" timestamp2="13727634">
    <text><![CDATA[evt)]]></text>
  </DocumentChange>
  <DocumentChange __id="3320" _type="Insert" date="Sun Jun 20 23:28:58 EDT 2021" docASTNodeCount="664" docActiveCodeLength="4204" docExpressionCount="464" docLength="4304" length="1" offset="3587" starttimestamp="1624232406782" timestamp="13731437">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="3371" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:29:47 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13780421">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3387" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:29:53 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13786372">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶		helper.add(aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="3398" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:30:18 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13811422">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3416" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:31:21 EDT 2021" docASTNodeCount="446" docActiveCodeLength="3242" docExpressionCount="258" docLength="3303" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13874441">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/BridgeSceneFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶import java.awt.Component;¶¶import java.awt.event.KeyListener;¶import java.io.IOException;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶¶import AnimationMethods.ABroadcastingClearanceManager;¶import AnimationMethods.BroadcastingClearanceManager;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.BridgePaintView;¶import grail.MVC.BridgeSceneController;¶import grail.MVC.ConsoleSceneView;¶import grail.MVC.CustomView;¶import grail.MVC.KeyController;¶import grail.MVC.ObservableHelp;¶import grail.MVC.SceneView;¶import grail.MVCDelegate.DelegatingScene;¶import grail.MVCDelegate.DelegatingScenes;¶import grail.MVCDelegate.ObservableBridgeScene;¶import grail.MVCDelegate.ObservableScenePainter;¶import grail.extras.Buttons;¶import grail.extras.MapStringToObject;¶import grail.extras.PanelButton;¶import grail.extras.Tables;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.FACTORY_CLASS)¶public class BridgeSceneFactory { ¶	static FiveAvatars scene;¶	static SceneView sceneView;¶	static Tables<Avatars> avatarAndObject;¶	static CustomView sceneView2;¶	static KeyController bridgeController;¶	static ObservableBridgeScene delegateScene;¶	static DelegatingScenes sceneShowed;¶	static BroadcastingClearanceManager clearanceManager;¶¶	¶	public synchronized static FiveAvatars bridgeSceneFactoryMethod(){¶	   if (scene == null) {¶			 scene = new FiveChars();¶	   } ¶	   return scene;		¶	}¶	¶	¶	public synchronized  static AngleShapes legsFactoryMethod(double rad, double ang,double radR, double angR, int valX, int valY) {¶		return new RealisticLegs(rad, ang, radR, angR, valX, valY);¶//		return new ArmsAndLegs(rad, ang, radR, angR, valX, valY);¶	}¶	¶	public synchronized  static SceneView consoleSceneViewFactoryMethod() {¶		if (sceneView == null) {¶			sceneView = new ConsoleSceneView();¶		}¶		return sceneView;¶	}¶	public synchronized  static ObservableHelp helperFactoryMethod() {¶		return new AnObservableHelper();¶	}¶	¶	public synchronized static Tables<Avatars> avatarTableFactoryMethod(){¶		if (avatarAndObject == null) {¶			avatarAndObject = new MapStringToObject<Avatars>();¶		}¶		return avatarAndObject;¶	}¶	¶	public synchronized static CustomView inheritingBridgeScenePainterFactoryMethod() {¶		if (sceneView2 == null) {¶			sceneView2 = new BridgePaintView();¶		}¶		return sceneView2;¶	}¶	public synchronized static KeyController bridgeSceneControllerFactoryMethod(){¶		if (bridgeController == null) {¶			PanelButton buttons = new Buttons();¶			bridgeController = new BridgeSceneController((Component)inheritingBridgeScenePainterFactoryMethod(), buttons);¶		}¶		return bridgeController;¶		¶	}¶	public synchronized static ObservableBridgeScene observableBridgeScenePainterFactoryMethod() {¶		if (delegateScene == null) {¶			delegateScene = new ObservableScenePainter();¶		}¶		return delegateScene;¶	}¶	public synchronized static DelegatingScenes delegatingBridgeSceneViewFactoryMethod(){¶		if (sceneShowed == null) {¶			sceneShowed = new DelegatingScene();¶		}¶		return sceneShowed;¶	}¶	¶	public synchronized static BroadcastingClearanceManager broadcastingClearanceManagerFactoryMethod() {¶		if (clearanceManager == null) {¶			clearanceManager = new ABroadcastingClearanceManager();¶		}¶		return clearanceManager;¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3419" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:31:27 EDT 2021" docASTNodeCount="664" docActiveCodeLength="4204" docExpressionCount="464" docLength="4304" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13880324">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue()"), Diff(DELETE," == "), Diff(INSERT,".equals("), Diff(EQUAL,""approach")"), Diff(INSERT,")"), Diff(EQUAL," {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled("), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue().equals("approach")) {
				if((Boolean)evt.getNewValue() == false) {
				buttons.getApproach().setEnabled(false);
				} 
				buttons.getApproach().setEnabled(true);
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="3426" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:31:37 EDT 2021" docASTNodeCount="680" docActiveCodeLength="3824" docExpressionCount="532" docLength="6309" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13890341">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgePaintView.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.beans.PropertyChangeEvent;

import java.awt.BasicStroke;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

import grail.compositeFigs.AngleShapes;
import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.geometryFigs.CircleFig;
import grail.geometryFigs.ImageShapes;
import grail.geometryFigs.MovingL;
import grail.geometryFigs.RotatingLine;
import grail.geometryFigs.StringShape;
import tags301.Comp301Tags;
import util.annotations.Tags;
@Tags(Comp301Tags.INHERITING_BRIDGE_SCENE_PAINTER)

@SuppressWarnings("serial")
public class BridgePaintView extends Component implements CustomView {
		FiveAvatars scene;
		
	
	public BridgePaintView() {
		scene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//FiveAvatars.addPropertyChangeListener(this);
		scene.addPropertyChangeListener(this);
		setFocusable(true);
		/*scene.getGalahad().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getGalahad().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getGalahad().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getGalahad().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getGalahad().getHead().addPropertyChangeListener(this);
		scene.getGalahad().getTorso().addPropertyChangeListener(this);
		scene.getArthur().getStringShape().addPropertyChangeListener(this);
		scene.getArthur().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getArthur().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getArthur().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getArthur().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getArthur().getHead().addPropertyChangeListener(this);
		scene.getArthur().getTorso().addPropertyChangeListener(this);
		scene.getArthur().getStringShape().addPropertyChangeListener(this);
		scene.getRobin().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getRobin().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getRobin().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getRobin().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getRobin().getHead().addPropertyChangeListener(this);
		scene.getRobin().getTorso().addPropertyChangeListener(this);
		scene.getRobin().getStringShape().addPropertyChangeListener(this);
		scene.getLancelot().getArms().getLeftLine().addPropertyChangeListener(this);
		scene.getLancelot().getArms().getRightLine().addPropertyChangeListener(this);
		scene.getLancelot().getLegs().getLeftLine().addPropertyChangeListener(this);
		scene.getLancelot().getLegs().getRightLine().addPropertyChangeListener(this);
		scene.getLancelot().getHead().addPropertyChangeListener(this);
		scene.getLancelot().getTorso().addPropertyChangeListener(this);
		scene.getLancelot().getStringShape().addPropertyChangeListener(this);
		setFocusable(true);
		*/
		//scene.getGorge().getbridgeLLine().addPropertyChangeListener(null);
	}
	
	@Override
	public void paint(Graphics g) {
		super.paint(g);
		Graphics2D g2 = (Graphics2D) g;
		imagePainter(g, scene.getGalahad());
		linePainter(g, scene.getGalahad().getTorso());
		limbsPainter(g, scene.getGalahad().getArms(), scene.getGalahad().getLegs());
		stringPainter(g, scene.getGalahad().getStringShape());
		ovalPainter(g, scene.getKnightArea());
		ovalPainter(g, scene.getGuardArea());
		imagePainter(g, scene.getArthur());
		linePainter(g, scene.getArthur().getTorso());
		limbsPainter(g, scene.getArthur().getArms(), scene.getArthur().getLegs());
		stringPainter(g, scene.getArthur().getStringShape());
		imagePainter(g, scene.getRobin());
		linePainter(g, scene.getRobin().getTorso());
		limbsPainter(g, scene.getRobin().getArms(), scene.getRobin().getLegs());
		stringPainter(g, scene.getRobin().getStringShape());
		imagePainter(g, scene.getLancelot());
		linePainter(g, scene.getLancelot().getTorso());
		limbsPainter(g, scene.getLancelot().getArms(), scene.getLancelot().getLegs());
		stringPainter(g, scene.getLancelot().getStringShape());
		imagePainter(g, scene.getGuard());
		linePainter(g, scene.getGuard().getTorso());
		limbsPainter(g, scene.getGuard().getArms(), scene.getGuard().getLegs());
		stringPainter(g, scene.getGuard().getStringShape());
		linePainter(g, scene.getGorge().getbridgeLLine());
		linePainter(g, scene.getGorge().getbridgeULine());
		linePainter(g, scene.getGorge().getleftLine());
		linePainter(g, scene.getGorge().getrightLine());
		

		
	}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		repaint();
		System.out.println(evt);
	}
	
	
	
	private void imagePainter(Graphics g, Avatars avatarHead) {
		ImageShapes headImage = avatarHead.getHead();
		BufferedImage newImage = null;
		try {
			newImage = ImageIO.read(new File(headImage.getImageFileName()));
		} catch (IOException e) {}
		g.drawImage(newImage, headImage.getX(), headImage.getY(), headImage.getWidth(), headImage.getHeight(), null);
	}
	
	private void linePainter(Graphics g, MovingL line) {
		g.drawLine(line.getX(), line.getY(), line.getX() + line.getWidth(), line.getY() + line.getHeight());
	}
	private void stringPainter(Graphics g, StringShape quote) {
		g.drawString(quote.getText(), quote.getX(), quote.getY());
	}
	private void ovalPainter(Graphics g, MovingL avatarZone) {
		g.drawOval(avatarZone.getX(), avatarZone.getY(), avatarZone.getWidth(), avatarZone.getHeight());
	}
	private void limbsPainter(Graphics g, AngleShapes arms, AngleShapes legs) {
		linePainter(g, arms.getLeftLine());
		linePainter(g, arms.getRightLine());
		linePainter(g, legs.getLeftLine());
		linePainter(g, legs.getRightLine());
	}
	
	//public static void main(String[] args) {
	//	FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();
	//	JFrame frame = new JFrame("Monty Scene");
	//	frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod());
	//	frame.setSize(2000, 800);
	//	frame.setVisible(true);}
}
]]></snapshot>
  </Command>
  <Command __id="3428" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:32:26 EDT 2021" docASTNodeCount="664" docActiveCodeLength="4204" docExpressionCount="464" docLength="4304" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13939332">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3436" _type="Insert" date="Sun Jun 20 23:32:38 EDT 2021" docASTNodeCount="664" docActiveCodeLength="4207" docExpressionCount="464" docLength="4307" length="3" offset="1491" starttimestamp="1624232406782" timestamp="13951672">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="3476" _type="InsertStringCommand" date="Sun Jun 20 23:32:46 EDT 2021" starttimestamp="1624232406782" timestamp="13959682" timestamp2="13959682">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3479" _type="PauseCommand" date="Sun Jun 20 23:32:47 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13960876">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1194]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3478" _type="InsertStringCommand" date="Sun Jun 20 23:32:47 EDT 2021" starttimestamp="1624232406782" timestamp="13960876" timestamp2="13960876">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3480" _type="InsertStringCommand" date="Sun Jun 20 23:32:47 EDT 2021" starttimestamp="1624232406782" timestamp="13960876" timestamp2="13960876">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3481" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sun Jun 20 23:32:47 EDT 2021" start_end="START" starttimestamp="1624232406782" timestamp="13960887" />
  <Command __id="3486" _type="PauseCommand" date="Sun Jun 20 23:32:50 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13963367">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2480]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3485" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:32:50 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="13963367" />
  <Command __id="3488" _type="InsertStringCommand" date="Sun Jun 20 23:32:50 EDT 2021" starttimestamp="1624232406782" timestamp="13963396" timestamp2="13963396">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3489" _type="InsertStringCommand" date="Sun Jun 20 23:32:50 EDT 2021" starttimestamp="1624232406782" timestamp="13963396" timestamp2="13963396">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3491" _type="PauseCommand" date="Sun Jun 20 23:32:52 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13965303">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1907]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3492" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965308" timestamp2="13965308">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3493" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965308" timestamp2="13965308">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3495" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965398" timestamp2="13965398">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3496" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965398" timestamp2="13965398">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3498" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965555" timestamp2="13965555">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3499" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965556" timestamp2="13965556">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3501" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965779" timestamp2="13965779">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3502" _type="InsertStringCommand" date="Sun Jun 20 23:32:52 EDT 2021" starttimestamp="1624232406782" timestamp="13965779" timestamp2="13965779">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3504" _type="PauseCommand" date="Sun Jun 20 23:32:53 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13967127">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1348]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3503" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sun Jun 20 23:32:53 EDT 2021" start_end="END" starttimestamp="1624232406782" timestamp="13967127" />
  <Command __id="3505" _type="MoveCaretCommand" caretOffset="974" date="Sun Jun 20 23:32:53 EDT 2021" docOffset="1539" starttimestamp="1624232406782" timestamp="13967204" />
  <Command __id="3506" _type="MoveCaretCommand" caretOffset="974" date="Sun Jun 20 23:32:53 EDT 2021" docOffset="1539" starttimestamp="1624232406782" timestamp="13967204" />
  <Command __id="3508" _type="PauseCommand" date="Sun Jun 20 23:32:57 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="13970907">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3703]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3509" _type="MoveCaretCommand" caretOffset="2357" date="Sun Jun 20 23:32:57 EDT 2021" docOffset="3146" starttimestamp="1624232406782" timestamp="13971053" />
  <Command __id="3511" _type="PauseCommand" date="Sun Jun 20 23:32:59 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13972964">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1911]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3510" _type="ShellCommand" date="Sun Jun 20 23:32:59 EDT 2021" starttimestamp="1624232406782" timestamp="13972964" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3513" _type="PauseCommand" date="Sun Jun 20 23:33:01 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13974920">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1956]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3512" _type="ShellCommand" date="Sun Jun 20 23:33:01 EDT 2021" starttimestamp="1624232406782" timestamp="13974920" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3514" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:33:01 EDT 2021" starttimestamp="1624232406782" timestamp="13975057" />
  <Command __id="3515" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:33:01 EDT 2021" starttimestamp="1624232406782" timestamp="13975088" />
  <Command __id="3516" _type="RunCommand" date="Sun Jun 20 23:33:01 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13975173" type="Run" />
  <Command __id="3517" _type="RunCommand" date="Sun Jun 20 23:33:01 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13975173" type="Run" />
  <Command __id="3518" _type="ShellCommand" date="Sun Jun 20 23:33:02 EDT 2021" starttimestamp="1624232406782" timestamp="13975911" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3520" _type="PauseCommand" date="Sun Jun 20 23:33:03 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="13976987">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1076]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3519" _type="ConsoleOutput" date="Sun Jun 20 23:33:03 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="13976987" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@7219ec67
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"grail.compositeFigs.MontyAvatar@7"), Diff(DELETE,"c729a55"), Diff(INSERT,"219ec67"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"44ebcd03"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"44ebcd03"), Diff(INSERT,"79efed2d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"694abbdc"), Diff(INSERT,"2928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"694abbdc"), Diff(INSERT,"2928854b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"e005c4b"), Diff(INSERT,"7ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2"), Diff(DELETE,"e005c4b"), Diff(INSERT,"7ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"4567f35d"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"4567f35d"), Diff(INSERT,"29176cc1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"5ffead27"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"5ffead27"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"6356695"), Diff(INSERT,"4278a03"), Diff(EQUAL,"f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"6356695"), Diff(INSERT,"4278a03"), Diff(EQUAL,"f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4f18837a"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"4f18837a"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"359f7cdf"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"359f7cdf"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"359f7cdf"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"359f7cdf"), Diff(INSERT,"61dd025"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3524" _type="PauseCommand" date="Sun Jun 20 23:33:13 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="13986227">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5089]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3523" _type="RunCommand" date="Sun Jun 20 23:33:13 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13986227" type="Debug" />
  <Command __id="3525" _type="RunCommand" date="Sun Jun 20 23:33:13 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13986227" type="Run" />
  <Command __id="3526" _type="RunCommand" date="Sun Jun 20 23:33:13 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="13986227" type="Debug" />
  <Command __id="3527" _type="RunCommand" date="Sun Jun 20 23:33:13 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13986227" type="Run" />
  <Command __id="3528" _type="ShellCommand" date="Sun Jun 20 23:33:13 EDT 2021" starttimestamp="1624232406782" timestamp="13986634" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3532" _type="PauseCommand" date="Sun Jun 20 23:33:27 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14000779">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2289]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3531" _type="RunCommand" date="Sun Jun 20 23:33:27 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14000779" type="Run" />
  <Command __id="3533" _type="RunCommand" date="Sun Jun 20 23:33:27 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14000779" type="Run" />
  <Command __id="3534" _type="RunCommand" date="Sun Jun 20 23:33:27 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14000985" type="Run" />
  <Command __id="3535" _type="RunCommand" date="Sun Jun 20 23:33:27 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14001019" type="Run" />
  <Command __id="3536" _type="RunCommand" date="Sun Jun 20 23:33:27 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14001157" type="Run" />
  <Command __id="3537" _type="ShellCommand" date="Sun Jun 20 23:33:28 EDT 2021" starttimestamp="1624232406782" timestamp="14001518" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3538" _type="RunCommand" date="Sun Jun 20 23:33:28 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14001713" type="Run" />
  <Command __id="3540" _type="PauseCommand" date="Sun Jun 20 23:33:29 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14003073">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1360]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3539" _type="ShellCommand" date="Sun Jun 20 23:33:29 EDT 2021" starttimestamp="1624232406782" timestamp="14003073" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3541" _type="ConsoleOutput" date="Sun Jun 20 23:33:30 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14003419" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@2e005c4b
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@359f7cdf]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@20a0c605]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@20a0c605]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@24b0df2f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@24b0df2f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@1b097e46]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@1b097e46]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4590ba92]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4590ba92]"), Diff(INSERT,"grail.compositeFigs.MontyAvatar@2e005c4b"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"6"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"estrictedLine@6326cccb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@6326cccb]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@414d2e27]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@414d2e27]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@11669306]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@11669306]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025"), Diff(INSERT,"otatingLine@359f7cdf"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3542" _type="RunCommand" date="Sun Jun 20 23:33:30 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14004128" type="Run" />
  <Command __id="3544" _type="PauseCommand" date="Sun Jun 20 23:33:47 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14020574">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[16446]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3545" _type="MoveCaretCommand" caretOffset="2990" date="Sun Jun 20 23:33:47 EDT 2021" docOffset="3555" starttimestamp="1624232406782" timestamp="14020716" />
  <Command __id="3546" _type="MoveCaretCommand" caretOffset="2990" date="Sun Jun 20 23:33:47 EDT 2021" docOffset="3555" starttimestamp="1624232406782" timestamp="14020717" />
  <Command __id="3548" _type="PauseCommand" date="Sun Jun 20 23:33:55 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14028244">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7527]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3547" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:33:55 EDT 2021" starttimestamp="1624232406782" timestamp="14028244" />
  <Command __id="3549" _type="RunCommand" date="Sun Jun 20 23:33:55 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14028251" type="Run" />
  <Command __id="3556" _type="PauseCommand" date="Sun Jun 20 23:34:06 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14039241">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7773]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3555" _type="RunCommand" date="Sun Jun 20 23:34:06 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14039241" type="Debug" />
  <Command __id="3557" _type="RunCommand" date="Sun Jun 20 23:34:06 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14039241" type="Run" />
  <Command __id="3558" _type="RunCommand" date="Sun Jun 20 23:34:06 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14039241" type="Debug" />
  <Command __id="3559" _type="RunCommand" date="Sun Jun 20 23:34:06 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14039241" type="Run" />
  <Command __id="3561" _type="PauseCommand" date="Sun Jun 20 23:34:24 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14057560">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[18319]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3562" _type="MoveCaretCommand" caretOffset="3684" date="Sun Jun 20 23:34:24 EDT 2021" docOffset="4606" starttimestamp="1624232406782" timestamp="14057760" />
  <Command __id="3564" _type="PauseCommand" date="Sun Jun 20 23:34:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14058997">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1237]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3566" _type="MoveCaretCommand" caretOffset="1889" date="Sun Jun 20 23:34:26 EDT 2021" docOffset="2678" starttimestamp="1624232406782" timestamp="14059223" />
  <Command __id="3567" _type="MoveCaretCommand" caretOffset="3684" date="Sun Jun 20 23:34:26 EDT 2021" docOffset="4606" starttimestamp="1624232406782" timestamp="14059223" />
  <Command __id="3572" _type="PauseCommand" date="Sun Jun 20 23:34:34 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14067248">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5904]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3571" _type="RunCommand" date="Sun Jun 20 23:34:34 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14067248" type="Run" />
  <Command __id="3573" _type="RunCommand" date="Sun Jun 20 23:34:34 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14067249" type="Run" />
  <Command __id="3574" _type="RunCommand" date="Sun Jun 20 23:34:34 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14067462" type="Run" />
  <Command __id="3575" _type="RunCommand" date="Sun Jun 20 23:34:34 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14067496" type="Run" />
  <Command __id="3576" _type="RunCommand" date="Sun Jun 20 23:34:34 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14067645" type="Run" />
  <Command __id="3577" _type="ShellCommand" date="Sun Jun 20 23:34:34 EDT 2021" starttimestamp="1624232406782" timestamp="14068103" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3578" _type="RunCommand" date="Sun Jun 20 23:34:34 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14068194" type="Run" />
  <Command __id="3583" _type="PauseCommand" date="Sun Jun 20 23:34:38 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14071566">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1032]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3582" _type="RunCommand" date="Sun Jun 20 23:34:38 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14071566" type="Run" />
  <Command __id="3641" _type="PauseCommand" date="Sun Jun 20 23:37:02 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14215252">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3185]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3640" _type="RunCommand" date="Sun Jun 20 23:37:02 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14215252" type="Run" />
  <Command __id="3642" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Sun Jun 20 23:37:02 EDT 2021" starttimestamp="1624232406782" timestamp="14215253" />
  <Command __id="3643" _type="ConsoleOutput" date="Sun Jun 20 23:37:02 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14215376" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@4a94ee4]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Y"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"500"), Diff(INSERT,"approach"), Diff(EQUAL,"; newValue="), Diff(DELETE,"425"), Diff(INSERT,"false"), Diff(EQUAL,"; propagationId=null; source=grail."), Diff(DELETE,"geometryFigs.MontyString@7b9a4292"), Diff(INSERT,"compositeFigs.FiveChars@4a94ee4"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3645" _type="PauseCommand" date="Sun Jun 20 23:37:16 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14229474">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14098]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3644" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:37:16 EDT 2021" starttimestamp="1624232406782" timestamp="14229474" />
  <Command __id="3646" _type="RunCommand" date="Sun Jun 20 23:37:16 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14229478" type="Run" />
  <Command __id="3648" _type="PauseCommand" date="Sun Jun 20 23:37:21 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14234360">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[4881]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3647" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:37:21 EDT 2021" starttimestamp="1624232406782" timestamp="14234359" />
  <Command __id="3649" _type="RunCommand" date="Sun Jun 20 23:37:21 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14234363" type="Run" />
  <Command __id="3651" _type="PauseCommand" date="Sun Jun 20 23:37:49 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="14262957">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[28594]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3650" _type="MoveCaretCommand" caretOffset="3077" date="Sun Jun 20 23:37:49 EDT 2021" docOffset="3642" starttimestamp="1624232406782" timestamp="14262957" />
  <Command __id="3652" _type="MoveCaretCommand" caretOffset="3077" date="Sun Jun 20 23:37:49 EDT 2021" docOffset="3642" starttimestamp="1624232406782" timestamp="14262957" />
  <Command __id="3654" _type="PauseCommand" date="Sun Jun 20 23:37:53 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14266895">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3938]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3653" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:37:53 EDT 2021" starttimestamp="1624232406782" timestamp="14266895" />
  <Command __id="3655" _type="RunCommand" date="Sun Jun 20 23:37:53 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14266899" type="Run" />
  <Command __id="3657" _type="PauseCommand" date="Sun Jun 20 23:38:13 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="14287033">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[20134]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3656" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:38:13 EDT 2021" starttimestamp="1624232406782" timestamp="14287033" />
  <Command __id="3658" _type="RunCommand" date="Sun Jun 20 23:38:13 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14287037" type="Run" />
  <Command __id="3660" _type="PauseCommand" date="Sun Jun 20 23:38:17 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14290249">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3212]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3659" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:38:17 EDT 2021" starttimestamp="1624232406782" timestamp="14290249" />
  <Command __id="3661" _type="RunCommand" date="Sun Jun 20 23:38:17 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14290253" type="Run" />
  <Command __id="3663" _type="PauseCommand" date="Sun Jun 20 23:38:31 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14304322">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[14069]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3662" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Sun Jun 20 23:38:31 EDT 2021" starttimestamp="1624232406782" timestamp="14304322" />
  <Command __id="3664" _type="RunCommand" date="Sun Jun 20 23:38:31 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14304349" type="Debug" />
  <Command __id="3665" _type="RunCommand" date="Sun Jun 20 23:38:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14304349" type="Run" />
  <Command __id="3666" _type="RunCommand" date="Sun Jun 20 23:38:31 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14304349" type="Debug" />
  <Command __id="3667" _type="RunCommand" date="Sun Jun 20 23:38:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14304349" type="Run" />
  <Command __id="3669" _type="PauseCommand" date="Sun Jun 20 23:38:43 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14316562">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[12213]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3668" _type="MoveCaretCommand" caretOffset="3043" date="Sun Jun 20 23:38:43 EDT 2021" docOffset="3608" starttimestamp="1624232406782" timestamp="14316562" />
  <Command __id="3670" _type="MoveCaretCommand" caretOffset="3043" date="Sun Jun 20 23:38:43 EDT 2021" docOffset="3608" starttimestamp="1624232406782" timestamp="14316563" />
  <Command __id="3672" _type="PauseCommand" date="Sun Jun 20 23:38:44 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14318207">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1644]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3671" _type="MoveCaretCommand" caretOffset="3059" date="Sun Jun 20 23:38:44 EDT 2021" docOffset="3624" starttimestamp="1624232406782" timestamp="14318207" />
  <Command __id="3673" _type="MoveCaretCommand" caretOffset="3059" date="Sun Jun 20 23:38:44 EDT 2021" docOffset="3624" starttimestamp="1624232406782" timestamp="14318207" />
  <Command __id="3675" _type="PauseCommand" date="Sun Jun 20 23:38:47 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14321197">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2990]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3674" _type="MoveCaretCommand" caretOffset="3074" date="Sun Jun 20 23:38:47 EDT 2021" docOffset="3639" starttimestamp="1624232406782" timestamp="14321197" />
  <Command __id="3676" _type="MoveCaretCommand" caretOffset="3074" date="Sun Jun 20 23:38:47 EDT 2021" docOffset="3639" starttimestamp="1624232406782" timestamp="14321197" />
  <Command __id="3678" _type="PauseCommand" date="Sun Jun 20 23:38:52 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14325776">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4579]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3677" _type="MoveCaretCommand" caretOffset="3171" date="Sun Jun 20 23:38:52 EDT 2021" docOffset="3736" starttimestamp="1624232406782" timestamp="14325776" />
  <Command __id="3679" _type="MoveCaretCommand" caretOffset="3171" date="Sun Jun 20 23:38:52 EDT 2021" docOffset="3736" starttimestamp="1624232406782" timestamp="14325776" />
  <Command __id="3681" _type="PauseCommand" date="Sun Jun 20 23:38:58 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14331232">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5456]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3680" _type="MoveCaretCommand" caretOffset="3120" date="Sun Jun 20 23:38:58 EDT 2021" docOffset="3685" starttimestamp="1624232406782" timestamp="14331232" />
  <Command __id="3682" _type="MoveCaretCommand" caretOffset="3120" date="Sun Jun 20 23:38:58 EDT 2021" docOffset="3685" starttimestamp="1624232406782" timestamp="14331232" />
  <Command __id="3684" _type="PauseCommand" date="Sun Jun 20 23:39:00 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14333727">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2495]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3683" _type="MoveCaretCommand" caretOffset="3178" date="Sun Jun 20 23:39:00 EDT 2021" docOffset="3743" starttimestamp="1624232406782" timestamp="14333727" />
  <Command __id="3685" _type="MoveCaretCommand" caretOffset="3178" date="Sun Jun 20 23:39:00 EDT 2021" docOffset="3743" starttimestamp="1624232406782" timestamp="14333727" />
  <Command __id="3686" _type="MoveCaretCommand" caretOffset="3177" date="Sun Jun 20 23:39:01 EDT 2021" docOffset="3742" starttimestamp="1624232406782" timestamp="14334506" />
  <Command __id="3687" _type="MoveCaretCommand" caretOffset="3177" date="Sun Jun 20 23:39:01 EDT 2021" docOffset="3742" starttimestamp="1624232406782" timestamp="14334506" />
  <Command __id="3689" _type="PauseCommand" date="Sun Jun 20 23:39:02 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14335836">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1330]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3690" _type="InsertStringCommand" date="Sun Jun 20 23:39:02 EDT 2021" starttimestamp="1624232406782" timestamp="14335839" timestamp2="14335839">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3691" _type="InsertStringCommand" date="Sun Jun 20 23:39:02 EDT 2021" starttimestamp="1624232406782" timestamp="14335839" timestamp2="14335839">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3693" _type="InsertStringCommand" date="Sun Jun 20 23:39:02 EDT 2021" starttimestamp="1624232406782" timestamp="14335971" timestamp2="14335971">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3694" _type="InsertStringCommand" date="Sun Jun 20 23:39:02 EDT 2021" starttimestamp="1624232406782" timestamp="14335971" timestamp2="14335971">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3696" _type="InsertStringCommand" date="Sun Jun 20 23:39:02 EDT 2021" starttimestamp="1624232406782" timestamp="14336106" timestamp2="14336106">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3697" _type="InsertStringCommand" date="Sun Jun 20 23:39:02 EDT 2021" starttimestamp="1624232406782" timestamp="14336106" timestamp2="14336106">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3699" _type="InsertStringCommand" date="Sun Jun 20 23:39:03 EDT 2021" starttimestamp="1624232406782" timestamp="14336332" timestamp2="14336332">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3700" _type="InsertStringCommand" date="Sun Jun 20 23:39:03 EDT 2021" starttimestamp="1624232406782" timestamp="14336333" timestamp2="14336333">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3702" _type="PauseCommand" date="Sun Jun 20 23:39:05 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14338649">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2316]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3703" _type="InsertStringCommand" date="Sun Jun 20 23:39:05 EDT 2021" starttimestamp="1624232406782" timestamp="14338654" timestamp2="14338654">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3704" _type="InsertStringCommand" date="Sun Jun 20 23:39:05 EDT 2021" starttimestamp="1624232406782" timestamp="14338654" timestamp2="14338654">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3706" _type="PauseCommand" date="Sun Jun 20 23:39:07 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14341142">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2488]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3705" _type="MoveCaretCommand" caretOffset="3221" date="Sun Jun 20 23:39:07 EDT 2021" docOffset="3786" starttimestamp="1624232406782" timestamp="14341142" />
  <Command __id="3707" _type="MoveCaretCommand" caretOffset="3221" date="Sun Jun 20 23:39:07 EDT 2021" docOffset="3786" starttimestamp="1624232406782" timestamp="14341142" />
  <Command __id="3709" _type="PauseCommand" date="Sun Jun 20 23:39:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14343797">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2655]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3710" _type="InsertStringCommand" date="Sun Jun 20 23:39:10 EDT 2021" starttimestamp="1624232406782" timestamp="14343803" timestamp2="14343803">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="3711" _type="InsertStringCommand" date="Sun Jun 20 23:39:10 EDT 2021" starttimestamp="1624232406782" timestamp="14343803" timestamp2="14343803">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="3713" _type="PauseCommand" date="Sun Jun 20 23:39:17 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14350646">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6843]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3714" _type="MoveCaretCommand" caretOffset="1889" date="Sun Jun 20 23:39:17 EDT 2021" docOffset="2678" starttimestamp="1624232406782" timestamp="14350772" />
  <Command __id="3716" _type="PauseCommand" date="Sun Jun 20 23:39:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14354080">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3308]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3715" _type="ShellCommand" date="Sun Jun 20 23:39:20 EDT 2021" starttimestamp="1624232406782" timestamp="14354080" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3718" _type="PauseCommand" date="Sun Jun 20 23:39:23 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14356390">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2310]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3717" _type="ShellCommand" date="Sun Jun 20 23:39:23 EDT 2021" starttimestamp="1624232406782" timestamp="14356390" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3719" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:39:23 EDT 2021" starttimestamp="1624232406782" timestamp="14356528" />
  <Command __id="3720" _type="EclipseCommand" commandID="" date="Sun Jun 20 23:39:23 EDT 2021" starttimestamp="1624232406782" timestamp="14356562" />
  <Command __id="3721" _type="RunCommand" date="Sun Jun 20 23:39:23 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14356749" type="Run" />
  <Command __id="3722" _type="RunCommand" date="Sun Jun 20 23:39:23 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14356749" type="Run" />
  <Command __id="3723" _type="ShellCommand" date="Sun Jun 20 23:39:24 EDT 2021" starttimestamp="1624232406782" timestamp="14357474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3725" _type="PauseCommand" date="Sun Jun 20 23:39:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14358615">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1141]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3724" _type="ConsoleOutput" date="Sun Jun 20 23:39:25 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14358615" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@7219ec67
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"grail.compositeFigs.MontyAvatar@7219ec67¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@4a94ee4"), Diff(INSERT,"X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79efed2d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2928854b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3727" _type="PauseCommand" date="Sun Jun 20 23:39:28 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14362177">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3562]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3726" _type="ConsoleOutput" date="Sun Jun 20 23:39:28 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14362177" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=100; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=140; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"grail.compositeFigs.MontyAvatar@7219ec67¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"685d0f8b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79efed2d"), Diff(INSERT,"685d0f8b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2928854"), Diff(INSERT,"4a937bf"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2928854"), Diff(INSERT,"4a937bf"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"5ab3f201"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"27ae2fd0"), Diff(INSERT,"5ab3f201"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"597c5318"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"597c5318"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"12"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2f177a4"), Diff(INSERT,"595d2ee"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2f177a4"), Diff(INSERT,"595d2ee"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"8c0ca98"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"4278a03f"), Diff(INSERT,"8c0ca98"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"8"), Diff(INSERT,"14"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"4d26027b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"4d26027b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶")]]]></diff>
  </Command>
  <Command __id="3729" _type="PauseCommand" date="Sun Jun 20 23:39:35 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14368394">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6217]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3728" _type="ConsoleOutput" date="Sun Jun 20 23:39:35 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14368394" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"95"), Diff(INSERT,"20"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"12"), Diff(INSERT,"40"), Diff(EQUAL,"0; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"95"), Diff(INSERT,"20"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"10"), Diff(INSERT,"38"), Diff(EQUAL,"0; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"500"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue="), Diff(DELETE,"1"), Diff(EQUAL,"4"), Diff(INSERT,"2"), Diff(EQUAL,"0; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"500"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶")]]]></diff>
  </Command>
  <Command __id="3731" _type="PauseCommand" date="Sun Jun 20 23:39:36 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14369880">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1486]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3730" _type="ConsoleOutput" date="Sun Jun 20 23:39:36 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14369880" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@685d0f8b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4a937bfb]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5ab3f201]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@597c5318]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@595d2eeb]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@8c0ca98]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4d26027b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@61dd025]¶")]]]></diff>
  </Command>
  <Command __id="3749" _type="PauseCommand" date="Sun Jun 20 23:40:11 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14405152">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15210]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3748" _type="ShellCommand" date="Sun Jun 20 23:40:11 EDT 2021" starttimestamp="1624232406782" timestamp="14405152" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3751" _type="MoveCaretCommand" caretOffset="3222" date="Sun Jun 20 23:40:12 EDT 2021" docOffset="3787" starttimestamp="1624232406782" timestamp="14405786" />
  <Command __id="3753" _type="PauseCommand" date="Sun Jun 20 23:40:43 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="14436353">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[30567]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BreakPointCommand]]></next>
  </Command>
  <Command __id="3752" _type="BreakPointCommand" date="Sun Jun 20 23:40:43 EDT 2021" lineNumber="148" starttimestamp="1624232406782" timestamp="14436353" type="BreakPointRemoved" />
  <Command __id="3754" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Jun 20 23:40:43 EDT 2021" starttimestamp="1624232406782" timestamp="14436374" />
  <Command __id="3756" _type="PauseCommand" date="Sun Jun 20 23:40:45 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14438456">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2082]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3755" _type="MoveCaretCommand" caretOffset="3079" date="Sun Jun 20 23:40:45 EDT 2021" docOffset="3644" starttimestamp="1624232406782" timestamp="14438456" />
  <Command __id="3757" _type="MoveCaretCommand" caretOffset="3079" date="Sun Jun 20 23:40:45 EDT 2021" docOffset="3644" starttimestamp="1624232406782" timestamp="14438457" />
  <Command __id="3759" _type="PauseCommand" date="Sun Jun 20 23:40:47 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14440865">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2408]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3758" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Sun Jun 20 23:40:47 EDT 2021" starttimestamp="1624232406782" timestamp="14440865" />
  <Command __id="3760" _type="BreakPointCommand" date="Sun Jun 20 23:40:47 EDT 2021" lineNumber="150" starttimestamp="1624232406782" timestamp="14440865" type="BreakPointAdded" />
  <Command __id="3762" _type="PauseCommand" date="Sun Jun 20 23:41:02 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14456167">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BreakPointCommand]]></prev>
    <pause><![CDATA[15302]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3761" _type="ShellCommand" date="Sun Jun 20 23:41:02 EDT 2021" starttimestamp="1624232406782" timestamp="14456167" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3764" _type="PauseCommand" date="Sun Jun 20 23:41:04 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14457370">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1203]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3763" _type="ShellCommand" date="Sun Jun 20 23:41:04 EDT 2021" starttimestamp="1624232406782" timestamp="14457370" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3765" _type="RunCommand" date="Sun Jun 20 23:41:04 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14457376" type="Debug" />
  <Command __id="3766" _type="RunCommand" date="Sun Jun 20 23:41:04 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14457376" type="Run" />
  <Command __id="3767" _type="RunCommand" date="Sun Jun 20 23:41:04 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14457376" type="Debug" />
  <Command __id="3768" _type="RunCommand" date="Sun Jun 20 23:41:04 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14457376" type="Run" />
  <Command __id="3773" _type="PauseCommand" date="Sun Jun 20 23:41:09 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14463053">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1731]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3772" _type="RunCommand" date="Sun Jun 20 23:41:09 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14463053" type="Run" />
  <Command __id="3774" _type="RunCommand" date="Sun Jun 20 23:41:09 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14463053" type="Run" />
  <Command __id="3775" _type="RunCommand" date="Sun Jun 20 23:41:10 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14463263" type="Run" />
  <Command __id="3776" _type="RunCommand" date="Sun Jun 20 23:41:10 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14463295" type="Run" />
  <Command __id="3777" _type="RunCommand" date="Sun Jun 20 23:41:10 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14463434" type="Run" />
  <Command __id="3778" _type="ShellCommand" date="Sun Jun 20 23:41:10 EDT 2021" starttimestamp="1624232406782" timestamp="14463917" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3779" _type="RunCommand" date="Sun Jun 20 23:41:10 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14463954" type="Run" />
  <Command __id="3781" _type="PauseCommand" date="Sun Jun 20 23:41:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14465112">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1158]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3780" _type="ShellCommand" date="Sun Jun 20 23:41:11 EDT 2021" starttimestamp="1624232406782" timestamp="14465112" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3782" _type="RunCommand" date="Sun Jun 20 23:41:12 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14465319" type="Run" />
  <Command __id="3783" _type="ConsoleOutput" date="Sun Jun 20 23:41:12 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14465556" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@5af3afd9
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4567f35d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4567f35d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5ffead27]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5ffead27]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6356695f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6356695f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4f18837a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4f18837a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@359f7cdf]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@359f7cdf]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@1fa268de]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@1fa268de]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4f6ee6e4]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4f6ee6e4]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@4466af20]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"grail.compositeFigs.MontyAvatar@"), Diff(DELETE,"d706f1"), Diff(INSERT,"5af3afd"), Diff(EQUAL,"9¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"4567f35d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"29176cc1"), Diff(INSERT,"4567f35d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2f177a4b"), Diff(INSERT,"5ffead27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2f177a4b"), Diff(INSERT,"5ffead27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4278a03"), Diff(INSERT,"6356695"), Diff(EQUAL,"f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"4278a03"), Diff(INSERT,"6356695"), Diff(EQUAL,"f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"4f18837a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"147ed70f"), Diff(INSERT,"4f18837a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"61dd025"), Diff(INSERT,"359f7cdf"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"61dd025"), Diff(INSERT,"359f7cdf"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@1"), Diff(DELETE,"24c278f"), Diff(INSERT,"fa268de"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@1"), Diff(DELETE,"24c278f"), Diff(INSERT,"fa268de"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"15b204a1"), Diff(INSERT,"4f6ee6e4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@77167fb7]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=tru"), Diff(INSERT,"4f6ee6e4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"77167fb7"), Diff(INSERT,"4466af20"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="3785" _type="MoveCaretCommand" caretOffset="3075" date="Sun Jun 20 23:41:13 EDT 2021" docOffset="3640" starttimestamp="1624232406782" timestamp="14466451" />
  <Command __id="3787" _type="PauseCommand" date="Sun Jun 20 23:41:21 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14474408">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7957]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3786" _type="MoveCaretCommand" caretOffset="3078" date="Sun Jun 20 23:41:21 EDT 2021" docOffset="3643" starttimestamp="1624232406782" timestamp="14474408" />
  <Command __id="3788" _type="MoveCaretCommand" caretOffset="3078" date="Sun Jun 20 23:41:21 EDT 2021" docOffset="3643" starttimestamp="1624232406782" timestamp="14474408" />
  <Command __id="3790" _type="PauseCommand" date="Sun Jun 20 23:41:30 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14483845">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9437]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3789" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:41:30 EDT 2021" starttimestamp="1624232406782" timestamp="14483845" />
  <Command __id="3791" _type="RunCommand" date="Sun Jun 20 23:41:30 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14483848" type="Run" />
  <Command __id="3793" _type="PauseCommand" date="Sun Jun 20 23:41:34 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14487597">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3749]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3792" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:41:34 EDT 2021" starttimestamp="1624232406782" timestamp="14487597" />
  <Command __id="3794" _type="RunCommand" date="Sun Jun 20 23:41:34 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14487601" type="Run" />
  <Command __id="3796" _type="PauseCommand" date="Sun Jun 20 23:41:35 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14489192">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1591]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3795" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Sun Jun 20 23:41:35 EDT 2021" starttimestamp="1624232406782" timestamp="14489192" />
  <Command __id="3797" _type="RunCommand" date="Sun Jun 20 23:41:35 EDT 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14489196" type="Run" />
  <Command __id="3799" _type="PauseCommand" date="Sun Jun 20 23:43:46 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="14620076">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[130880]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3798" _type="ShellCommand" date="Sun Jun 20 23:43:46 EDT 2021" starttimestamp="1624232406782" timestamp="14620076" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3801" _type="PauseCommand" date="Sun Jun 20 23:43:47 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14621196">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1120]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3800" _type="ShellCommand" date="Sun Jun 20 23:43:47 EDT 2021" starttimestamp="1624232406782" timestamp="14621196" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3802" _type="RunCommand" date="Sun Jun 20 23:43:47 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14621210" type="Debug" />
  <Command __id="3803" _type="RunCommand" date="Sun Jun 20 23:43:47 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14621210" type="Run" />
  <Command __id="3804" _type="RunCommand" date="Sun Jun 20 23:43:47 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="14621210" type="Debug" />
  <Command __id="3805" _type="RunCommand" date="Sun Jun 20 23:43:47 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14621210" type="Run" />
  <Command __id="3807" _type="PauseCommand" date="Sun Jun 20 23:43:49 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14622397">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1187]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3806" _type="ShellCommand" date="Sun Jun 20 23:43:49 EDT 2021" starttimestamp="1624232406782" timestamp="14622397" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3809" _type="PauseCommand" date="Sun Jun 20 23:44:43 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="14676586">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[54189]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3808" _type="ShellCommand" date="Sun Jun 20 23:44:43 EDT 2021" starttimestamp="1624232406782" timestamp="14676586" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3814" _type="PauseCommand" date="Sun Jun 20 23:44:53 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14686999">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5121]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3813" _type="RunCommand" date="Sun Jun 20 23:44:53 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14686999" type="Run" />
  <Command __id="3815" _type="RunCommand" date="Sun Jun 20 23:44:53 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14686999" type="Run" />
  <Command __id="3816" _type="ShellCommand" date="Sun Jun 20 23:44:54 EDT 2021" starttimestamp="1624232406782" timestamp="14687464" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3818" _type="PauseCommand" date="Sun Jun 20 23:45:11 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14704491">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17027]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3817" _type="ConsoleOutput" date="Sun Jun 20 23:45:11 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14704491" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 23:45:11 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"grail.compositeFigs.MontyAvatar@5af3afd9¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4567f35d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4567f35d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5ffead27]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5ffead27]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6356695f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6356695f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@4f18837a]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4f18837a]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@359f7cdf]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@359f7cdf]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@1fa268de]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@1fa268de]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@4f6ee6e4]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@4f6ee6e4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@4466af20]"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 23:45:11 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3820" _type="PauseCommand" date="Sun Jun 20 23:45:13 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14706463">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1972]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3819" _type="ConsoleOutput" date="Sun Jun 20 23:45:13 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14706463" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 23:45:13 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 23:45:13 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Sun Jun 20 23:45:1"), Diff(DELETE,"1"), Diff(INSERT,"3 EDT 2021¶Start O(n2) inter- and intra class method calls:Sun Jun 20 23:45:13"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3821" _type="ConsoleOutput" date="Sun Jun 20 23:45:13 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14706624" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 23:45:13 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Sun Jun 20 23:45:13 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 23:45:13 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3823" _type="PauseCommand" date="Sun Jun 20 23:45:14 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14708039">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1415]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3822" _type="ConsoleOutput" date="Sun Jun 20 23:45:14 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14708039" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 23:45:14 EDT 2021
Generating checks:Sun Jun 20 23:45:14 EDT 2021
Finished Generating checks:Sun Jun 20 23:45:14 EDT 2021
Generating externals:Sun Jun 20 23:45:14 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 23:45:14 EDT 2021¶Generating checks:Sun Jun 20 23:45:14 EDT 2021¶Finished Generating checks:Sun Jun 20 23:45:14 EDT 2021¶Generating externa"), Diff(EQUAL,"ls:Sun Jun 20 23:45:1"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3824" _type="ConsoleOutput" date="Sun Jun 20 23:45:15 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14708427" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 23:45:15 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 23:45:14 EDT 2021¶Generating checks:Sun Jun 20 23:45:14 EDT 2021¶Finished Generating checks:Sun Jun 20 23:45:14 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 23:45:1"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3825" _type="ConsoleOutput" date="Sun Jun 20 23:45:15 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14709068" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@57996f1e]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@57996f1e]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=880; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=920; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7b7cc5ec]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 23:45:15 EDT 2021"), Diff(INSERT,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@57996f1e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@57996f1e]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=880; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=920; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7b7cc5ec]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3827" _type="PauseCommand" date="Sun Jun 20 23:46:08 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="14761472">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[52404]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3826" _type="ConsoleOutput" date="Sun Jun 20 23:46:08 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14761472" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-1,5,main]: before wait
Thread[Thread-2,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=400; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=40; newValue=380; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=80; newValue=420; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@57996f1e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@57996f1e]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@5cf696ca]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6efd826]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@372a3df]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=900; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@511d1d61]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=380; newValue=880; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@a5b4c02]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=420; newValue=920; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@39b5814e]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@47743b3f]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@7b7cc5ec]"), Diff(INSERT,"Thread[Thread-1,5,main]: before wait¶Thread[Thread-2,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3828" _type="ConsoleOutput" date="Sun Jun 20 23:46:08 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14761573" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,5,main]: before wait
Thread[Thread-4,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,",5,main]: before wait¶Thread[Thread-"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="3830" _type="PauseCommand" date="Sun Jun 20 23:46:09 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14762686">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1113]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3829" _type="ConsoleOutput" date="Sun Jun 20 23:46:09 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14762686" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-1,5,main]: after wait
Thread[Thread-4,5,main]: after wait
Thread[Thread-3,5,main]: after wait
Thread[Thread-2,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"T"), Diff(INSERT,"pool-1-t"), Diff(EQUAL,"hread-"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"before wait¶Thread[Thread-4,5,main]: before"), Diff(INSERT,"after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="3831" _type="ExceptionCommand" date="Sun Jun 20 23:46:09 EDT 2021" starttimestamp="1624232406782" timestamp="14762942" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=410; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]
Exception in thread "Thread-1" Exception in thread "Thread-2" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
java.beans.PropertyChangeEvent[propertyName=X; oldValue=670; newValue=680; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=60; newValue=70; propagationId=null; source=grail.geometryFigs.RotatingLine@7072b713]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=120; newValue=130; propagationId=null; source=grail.geometryFigs.RotatingLine@7a55758]
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
Exception in thread "Thread-4" Exception in thread "Thread-3" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3832" _type="ExceptionCommand" date="Sun Jun 20 23:46:10 EDT 2021" starttimestamp="1624232406782" timestamp="14763691" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="3833" _type="ConsoleOutput" date="Sun Jun 20 23:46:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14763706" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after wait"), Diff(INSERT,"java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3834" _type="ConsoleOutput" date="Sun Jun 20 23:46:10 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14763879" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-6,5,main]: before wait
Thread[Thread-7,5,main]: before wait
Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-5,5,main]: after wait
Thread[Thread-7,5,main]: after wait
Thread[Thread-6,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Threads notified after proceedAll;0 1 expected threads:4%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.checkOutput(WaitingAvatarsAnimationTestCase.java:115)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.WaitingAvatarsAnimationTestCase.doTest(WaitingAvatarsAnimationTestCase.java:154)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)"), Diff(INSERT,"Thread[Thread-6,5,main]: before wait¶Thread[Thread-7,5,main]: before wait¶Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3835" _type="ExceptionCommand" date="Sun Jun 20 23:46:10 EDT 2021" starttimestamp="1624232406782" timestamp="14764121" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=410; newValue=420; propagationId=null; source=grail.geometryFigs.RotatingLine@4e639bd3]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=680; newValue=690; propagationId=null; source=grail.geometryFigs.RotatingLine@6e568699]
java.beans.PropertyChangeEvent[propertyName=Angle; oldValue=2.356194490192345; newValue=1.6689710972195777; propagationId=null; source=grail.geometryFigs.RotatingLine@43f94a5]
Exception in thread "Thread-6" Exception in thread "Thread-5" Exception in thread "Thread-7" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:28)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Boolean (java.lang.Double and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.RotatingLine.setAngle(RotatingLine.java:117)
	at grail.geometryFigs.RotatingLine.rotate(RotatingLine.java:64)
	at AnimationMethods.ABridgeSceneAnimator.animateGuard(ABridgeSceneAnimator.java:27)
	at AnimationMethods.SceneLockedAnimationCommand.run(SceneLockedAnimationCommand.java:22)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3846" _type="PauseCommand" date="Sun Jun 20 23:46:31 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14785112">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4054]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3845" _type="RunCommand" date="Sun Jun 20 23:46:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14785112" type="Run" />
  <Command __id="3847" _type="RunCommand" date="Sun Jun 20 23:46:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14785112" type="Run" />
  <Command __id="3848" _type="ShellCommand" date="Sun Jun 20 23:46:32 EDT 2021" starttimestamp="1624232406782" timestamp="14785846" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3850" _type="PauseCommand" date="Sun Jun 20 23:46:38 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14791315">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5469]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3849" _type="ConsoleOutput" date="Sun Jun 20 23:46:38 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14791315" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Sun Jun 20 23:46:38 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Number of coordinated threads: 0 instead of 2%0.0¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkNumThreads(LockstepAvatarsAnimationTestCase.java:81)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.checkOutput(LockstepAvatarsAnimationTestCase.java:223)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.comp401f16.assignment12.waitnotify.testcases.LockstepAvatarsAnimationTestCase.doTest(LockstepAvatarsAnimationTestCase.java:278)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)"), Diff(INSERT,"Building symbol table and running first pass checks:Sun Jun 20 23:46:38 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3852" _type="PauseCommand" date="Sun Jun 20 23:46:39 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14793119">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1804]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3851" _type="ConsoleOutput" date="Sun Jun 20 23:46:39 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14793119" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Sun Jun 20 23:46:39 EDT 2021
Start O(n2) inter- and intra class method calls:Sun Jun 20 23:46:39 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Sun Jun 20 23:46:39 EDT 2021¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Sun Jun 20 23:46:3"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3853" _type="ConsoleOutput" date="Sun Jun 20 23:46:40 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14793238" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Sun Jun 20 23:46:39 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Sun Jun 20 23:46:39 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Sun Jun 20 23:46:39 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3855" _type="PauseCommand" date="Sun Jun 20 23:46:41 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14794614">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1376]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3854" _type="ConsoleOutput" date="Sun Jun 20 23:46:41 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14794614" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Sun Jun 20 23:46:41 EDT 2021
Generating checks:Sun Jun 20 23:46:41 EDT 2021
Finished Generating checks:Sun Jun 20 23:46:41 EDT 2021
Generating externals:Sun Jun 20 23:46:41 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Sun Jun 20 23:46:41 EDT 2021¶Generating checks:Sun Jun 20 23:46:41 EDT 2021¶Finished Generating checks:Sun Jun 20 23:46:41 EDT 2021¶Generating externa"), Diff(EQUAL,"ls:Sun Jun 20 23:46:"), Diff(DELETE,"39"), Diff(INSERT,"41"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3856" _type="ConsoleOutput" date="Sun Jun 20 23:46:41 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14795100" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Sun Jun 20 23:46:41 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Sun Jun 20 23:46:41 EDT 2021¶Generating checks:Sun Jun 20 23:46:41 EDT 2021¶Finished Generating checks:Sun Jun 20 23:46:41 EDT 2021¶"), Diff(EQUAL,"Generating externals:Sun Jun 20 23:46:41 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="3857" _type="ConsoleOutput" date="Sun Jun 20 23:46:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14795375" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-1,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Sun Jun 20 23:46:41 EDT 2021"), Diff(INSERT,"Thread[Thread-1,5,main]: before wait"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3858" _type="ConsoleOutput" date="Sun Jun 20 23:46:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14795460" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-2,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="3859" _type="ConsoleOutput" date="Sun Jun 20 23:46:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14795516" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="3860" _type="ConsoleOutput" date="Sun Jun 20 23:46:42 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14795572" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-4,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="3862" _type="PauseCommand" date="Sun Jun 20 23:46:43 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="14796633">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3861" _type="ConsoleOutput" date="Sun Jun 20 23:46:43 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14796633" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-1,5,main]: after wait
Thread[Thread-4,5,main]: after wait
Thread[Thread-3,5,main]: after wait
Thread[Thread-2,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"Thread-4,5,main]: before"), Diff(INSERT,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="3864" _type="PauseCommand" date="Sun Jun 20 23:46:48 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14801898">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5265]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3863" _type="ConsoleOutput" date="Sun Jun 20 23:46:48 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14801898" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-5,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-1,5,main]: after wait¶Thread[Thread-4,5,main]: after wait¶Thread[Thread-3,5,main]: after wait¶Thread[Thread-2,5,main]: after"), Diff(INSERT,"Thread-5,5,main]: before"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="3865" _type="ConsoleOutput" date="Sun Jun 20 23:46:48 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14802001" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-6,5,main]: before wait
Thread[Thread-7,5,main]: before wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-"), Diff(DELETE,"5"), Diff(INSERT,"6,5,main]: before wait¶Thread[Thread-7"), Diff(EQUAL,",5,main]: before wait¶")]]]></diff>
  </Command>
  <Command __id="3866" _type="ConsoleOutput" date="Sun Jun 20 23:46:48 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14802072" type="ConsoleOutput">
    <outputString><![CDATA[Thread[pool-1-thread-1,5,main]: after notifyAll
Thread[Thread-5,5,main]: after wait
Thread[Thread-7,5,main]: after wait
Thread[Thread-6,5,main]: after wait
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread["), Diff(DELETE,"T"), Diff(INSERT,"pool-1-t"), Diff(EQUAL,"hread-"), Diff(DELETE,"6"), Diff(INSERT,"1"), Diff(EQUAL,",5,main]: "), Diff(DELETE,"before wait¶Thread[Thread-7,5,main]: before"), Diff(INSERT,"after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after"), Diff(EQUAL," wait¶")]]]></diff>
  </Command>
  <Command __id="3868" _type="PauseCommand" date="Sun Jun 20 23:47:13 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="14826964">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[24892]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3867" _type="ConsoleOutput" date="Sun Jun 20 23:47:13 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14826964" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
in precondition
in precondition
in precondition
in precondition
in precondition
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Thread[pool-1-thread-1,5,main]: after notifyAll¶Thread[Thread-5,5,main]: after wait¶Thread[Thread-7,5,main]: after wait¶Thread[Thread-6,5,main]: after wait"), Diff(INSERT,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3870" _type="PauseCommand" date="Sun Jun 20 23:47:16 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="14830100">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3136]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3869" _type="ExceptionCommand" date="Sun Jun 20 23:47:16 EDT 2021" starttimestamp="1624232406782" timestamp="14830100" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=900; newValue=400; propagationId=null; source=grail.geometryFigs.RotatingLine@2340caff]
Execution exception caused by invocation exception caused by:
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:178)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
SceneControllerButtonDynamics did not pass completely:java.lang.ClassCastException class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')%0.0
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3872" _type="PauseCommand" date="Sun Jun 20 23:47:29 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="14842342">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[12242]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3871" _type="ExceptionCommand" date="Sun Jun 20 23:47:29 EDT 2021" starttimestamp="1624232406782" timestamp="14842342" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=400; newValue=410; propagationId=null; source=grail.geometryFigs.RotatingLine@2340caff]
Exception in thread "Thread-12" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.beans.PropertyChangeEvent[propertyName=X; oldValue=410; newValue=420; propagationId=null; source=grail.geometryFigs.RotatingLine@2340caff]
Exception in thread "Thread-13" java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Boolean (java.lang.Integer and java.lang.Boolean are in module java.base of loader 'bootstrap')
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3873" _type="ConsoleOutput" date="Sun Jun 20 23:47:29 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14842496" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)
	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)
	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)
	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)
	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶in precondition¶in precondition¶in precondition¶in precondition¶in precondition"), Diff(INSERT,"	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:124)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.geometryFigs.Alocatable.setX(Alocatable.java:40)¶	at grail.compositeFigs.MontyAvatar.combineFigs(MontyAvatar.java:92)¶	at grail.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar.java:113)¶	at AnimationMethods.ABridgeSceneAnimator.animateAvatar(ABridgeSceneAnimator.java:17)¶	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)¶	at java.base/java.lang.Thread.run(Thread.java:834)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3875" _type="PauseCommand" date="Sun Jun 20 23:47:34 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="14848205">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5709]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3874" _type="ExceptionCommand" date="Sun Jun 20 23:47:34 EDT 2021" starttimestamp="1624232406782" timestamp="14848205" type="Exception">
    <exceptionString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)
	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="3876" _type="ConsoleOutput" date="Sun Jun 20 23:47:35 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14848228" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.AssertionError: Child thread 1 not found:%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)
	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)
	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)
	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)
	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)
	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)
	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶"), Diff(EQUAL,"	at gradingTools.comp"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"01"), Diff(DELETE,"ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics"), Diff(INSERT,"f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(EQUAL,"4"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelp"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(INSERT,"28"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"grail.geometryFigs.Alocatable.setX(Alocatable"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"30"), Diff(EQUAL,"0)¶	at gra"), Diff(DELETE,"il.compositeFigs.MontyAvatar.combineFigs(MontyAvatar"), Diff(INSERT,"der.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"161"), Diff(EQUAL,")¶	at gra"), Diff(DELETE,"il.compositeFigs.MontyAvatar.moveAvatar(MontyAvatar"), Diff(INSERT,"der.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)¶	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"113"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"AnimationMethods.ABridgeSceneAnim"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".animateAvatar(ABridgeSceneAnimator.java:17)¶	at AnimationMethods.BridgeSceneAnimationCommand.run(BridgeSceneAnimationCommand.java:30)¶	at java.base/java.lang.Thread.run(Thread.java:834"), Diff(INSERT,"g.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3877" _type="ConsoleOutput" date="Sun Jun 20 23:47:35 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14848328" type="ConsoleOutput">
    <outputString><![CDATA[
A4NoHiddenFields did not pass completely:%0.7142857142857143
A4NamingConventions did not pass completely:%0.7142857142857143

A4InterfaceAsType did not pass completely:%0.7142857142857143

A4NamedConstants did not pass completely:See console trace about lines failing  this check%0.6459627329192547

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.AssertionError: Child thread 1 not found:%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at grader.basics.testcase.PassFailJUnitTestCase.assertTrue(PassFailJUnitTestCase.java:245)¶	at gradingTools.comp401f16.assignment11.sync.testcases.SyncArthurAnimationTestCase.checkOutput(SyncArthurAnimationTestCase.java:77)¶	at gradingTools.comp401f16.assignment10.async.testcases.AsyncArthurAnimationTestCase.doTest(AsyncArthurAnimationTestCase.java:246)¶	at gradingTools.shared.testcases.MethodExecutionTest.test(MethodExecutionTest.java:767)¶	at gradingTools.shared.testcases.MethodExecutionTest.defaultTest(MethodExecutionTest.java:760)¶	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:161)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:186)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:102)¶	at jdk.internal.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:300)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(INSERT,"¶A4NoHiddenFields did not pass completely:%0.7142857142857143¶A4NamingConventions did not pass completely:%0.7142857142857143¶¶A4InterfaceAsType did not pass completely:%0.7142857142857143¶¶A4NamedConstants did not pass completely:See console trace about lines failing  this check%0.6459627329192547¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3878" _type="ConsoleOutput" date="Sun Jun 20 23:47:35 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14848354" type="ConsoleOutput">
    <outputString><![CDATA[A4PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.6026785714285714

A4MnemonicNames did not pass completely:See console trace about lines failing  this check%0.6245191074634522

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶A4NoHiddenFields"), Diff(INSERT,"A4PublicMethodsOverride"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"%0.7142857142857143¶A4NamingConventions did not pass completely:%0.7142857142857143¶¶A4InterfaceAsType did not pass completely:%0.7142"), Diff(INSERT,"See console trace about lines failing  this check%0.60267"), Diff(EQUAL,"85714285714"), Diff(DELETE,"3"), Diff(EQUAL,"¶¶A4"), Diff(DELETE,"NamedConstant"), Diff(INSERT,"MnemonicName"), Diff(EQUAL,"s did not pass completely:See console trace about lines failing  this check%0.6"), Diff(INSERT,"2"), Diff(EQUAL,"45"), Diff(DELETE,"9627329192547"), Diff(INSERT,"191074634522"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="3879" _type="ConsoleOutput" date="Sun Jun 20 23:47:35 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14848425" type="ConsoleOutput">
    <outputString><![CDATA[A4Encapsulation did not pass completely:%0.7142857142857143

A4NonPublicAccessModifiersMatched did not pass completely:%0.7142857142857143

A4CommonPropertiesAreInherited did not pass completely:See console trace about lines failing  this check%0.5791505791505792

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A4"), Diff(DELETE,"PublicMethodsOverride"), Diff(INSERT,"Encapsulation"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"See console trace about lines failing  this check%0.60267"), Diff(INSERT,"%0.7142857142857143¶¶A4NonPublicAccessModifiersMatched did not pass completely:%0.7142"), Diff(EQUAL,"85714285714"), Diff(INSERT,"3"), Diff(EQUAL,"¶¶A4"), Diff(DELETE,"MnemonicNames"), Diff(INSERT,"CommonPropertiesAreInherited"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"624519107463452"), Diff(INSERT,"579150579150579"), Diff(EQUAL,"2¶¶")]]]></diff>
  </Command>
  <Command __id="3880" _type="ConsoleOutput" date="Sun Jun 20 23:47:35 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="14848504" type="ConsoleOutput">
    <outputString><![CDATA[A4CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.29936974789915966
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A4"), Diff(DELETE,"Encapsulation did not pass completely:%0.7142857142857143¶¶A4NonPublicAccessModifiersMatched did not pass completely:%0.7142857142857143¶¶A4CommonProperti"), Diff(INSERT,"CommonSignatur"), Diff(EQUAL,"esAreInherited did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"5791505791505792¶"), Diff(INSERT,"29936974789915966"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3882" _type="PauseCommand" date="Sun Jun 20 23:56:13 EDT 2021" range="5m-10m" starttimestamp="1624232406782" timestamp="15366961">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[518457]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="3881" _type="BalloonCommand" date="Sun Jun 20 23:56:13 EDT 2021" message="*******************************************
Worked 47 minutes(fixed)/41 minutes(context based) from
Sun Jun 20 22:56:13 EDT 2021 to Sun Jun 20 23:47:35 EDT 2021
Edited 1 Projects: 
	grailA4FinalProject
Edited 3 Files: 
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java
	/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java
Number of insert: 607
Number of delete: 204
" starttimestamp="1624232406782" timestamp="15366961">
    <fineGrainedWorkTime><![CDATA[41]]></fineGrainedWorkTime>
    <insert><![CDATA[607]]></insert>
    <startTime><![CDATA[1624244173733]]></startTime>
    <endTime><![CDATA[1624247255286]]></endTime>
    <workTime><![CDATA[47]]></workTime>
    <delete><![CDATA[204]]></delete>
  </Command>
  <Command __id="3884" _type="PauseCommand" date="Sun Jun 20 23:58:31 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="15504384">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[137423]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3883" _type="ShellCommand" date="Sun Jun 20 23:58:31 EDT 2021" starttimestamp="1624232406782" timestamp="15504384" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3886" _type="PauseCommand" date="Mon Jun 21 00:01:10 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="15663843">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[159459]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3887" _type="MoveCaretCommand" caretOffset="964" date="Mon Jun 21 00:01:10 EDT 2021" docOffset="1060" starttimestamp="1624232406782" timestamp="15664018" />
  <Command __id="3889" _type="PauseCommand" date="Mon Jun 21 00:05:05 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="15898658">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[234640]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3890" _type="SelectTextCommand" caretOffset="4672" date="Mon Jun 21 00:05:06 EDT 2021" end="4672" start="4525" starttimestamp="1624232406782" timestamp="15899507" />
  <Command __id="3892" _type="PauseCommand" date="Mon Jun 21 00:05:09 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="15902766">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3259]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3891" _type="MoveCaretCommand" caretOffset="4973" date="Mon Jun 21 00:05:09 EDT 2021" docOffset="5895" starttimestamp="1624232406782" timestamp="15902766" />
  <Command __id="3894" _type="PauseCommand" date="Mon Jun 21 00:06:29 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="15982233">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[79467]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3895" _type="SelectTextCommand" caretOffset="558" date="Mon Jun 21 00:06:29 EDT 2021" end="558" start="481" starttimestamp="1624232406782" timestamp="15982605" />
  <DocumentChange __id="3440" _type="Insert" date="Sun Jun 20 23:32:43 EDT 2021" docASTNodeCount="668" docActiveCodeLength="4223" docExpressionCount="467" docLength="4323" length="16" offset="1494" repeat="16" starttimestamp="1624232406782" timestamp="13956799" timestamp2="13961817">
    <text><![CDATA[aBridgeScene.add]]></text>
  </DocumentChange>
  <DocumentChange __id="3487" _type="Replace" date="Sun Jun 20 23:32:50 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4252" docExpressionCount="468" docLength="4352" endLine="56" insertionLength="32" int_docASTNodeCount="666" int_docActiveCodeLength="4220" int_docExpressionCount="465" int_docLength="4320" length="3" offset="1507" startLine="56" starttimestamp="1624232406782" timestamp="13963372">
    <deletedText><![CDATA[add]]></deletedText>
    <insertedText><![CDATA[addPropertyChangeListener(null);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3490" _type="Replace" date="Sun Jun 20 23:32:52 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4249" docExpressionCount="468" docLength="4349" endLine="56" insertionLength="1" int_docASTNodeCount="668" int_docActiveCodeLength="4248" int_docExpressionCount="467" int_docLength="4348" length="4" offset="1533" startLine="56" starttimestamp="1624232406782" timestamp="13965303">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3494" _type="Insert" date="Sun Jun 20 23:32:52 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4252" docExpressionCount="468" docLength="4352" length="3" offset="1534" repeat="3" starttimestamp="1624232406782" timestamp="13965397" timestamp2="13965779">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="3507" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:32:57 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="13970907">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3543" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:33:47 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4252" docExpressionCount="468" docLength="4352" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14020574">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		"), Diff(INSERT,"aBridgeScene.addPropertyChangeListener(this);¶		"), Diff(EQUAL,"¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		aBridgeScene.addPropertyChangeListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue().equals("approach")) {
				if((Boolean)evt.getNewValue() == false) {
				buttons.getApproach().setEnabled(false);
				} 
				buttons.getApproach().setEnabled(true);
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="3553" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:33:58 EDT 2021" docASTNodeCount="307" docActiveCodeLength="1821" docExpressionCount="185" docLength="1896" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14031308">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/AnObservableHelper.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶	import java.beans.PropertyChangeEvent;¶¶¶	import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶public class AnObservableHelper implements ObservableHelp {¶		public static final int MAX_SIZE = 50;¶		¶		List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶		//PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];¶		int size = 0;¶		¶		@Override¶		public List<PropertyChangeListener> getPropertyChangeListenerList() {¶			return contents;¶		}¶		@Override¶		public int size() {¶			return size;¶		}¶		@Override¶		public PropertyChangeListener get (int index) {¶			return contents.get(index);¶		}¶		¶		@Override¶		public boolean isFull() {¶			return size == MAX_SIZE;¶¶		}¶		@Override¶		public void add(PropertyChangeListener listener) {¶			if (isFull())¶				System.out.println("Adding item to a full collection");¶			else {¶				contents.add(size, listener);¶				size++;¶			}¶		}¶		¶		@Override¶		public void notifyAllListeners(PropertyChangeEvent event) {¶			for (int index = 0; index < size(); index++) {			¶				get(index).propertyChange(event);¶			}¶		}¶	¶		@Override¶		public void remove(PropertyChangeListener element) {¶			contents.remove(contents.indexOf(element));¶			size--;¶		}¶		@Override¶		public void remove(int startIndex) {¶			shiftUp(startIndex);¶			size--;¶		}¶		¶		private void shiftUp(int startIndex) {¶			for (int index = startIndex; index + 1 < size; index++)¶				contents.set(index, contents.get(index + 1));¶		}¶		@Override¶		public int indexOf(PropertyChangeListener element) {¶			int index;¶			for (index = 0; index < size && !element.equals(contents.get(index)); index++)¶				;¶			return index;¶		}¶		@Override¶		public boolean member(PropertyChangeListener element) {¶			return indexOf(element) < size;¶¶		}¶		@Override¶		public void clear() {¶			size = 0;¶		}¶	}¶¶¶")]]]></diff>
  </Command>
  <Command __id="3560" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:34:24 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14057560">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶		helper.add(aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="3563" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:34:25 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14058997">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3565" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:34:25 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14059050">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶		helper.add(aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="3568" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:34:27 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14061029">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3584" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:34:42 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4252" docExpressionCount="468" docLength="4352" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14075641">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		aBridgeScene.addPropertyChangeListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				buttons.getApproach().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3688" _type="Insert" date="Sun Jun 20 23:39:02 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4255" docExpressionCount="468" docLength="4355" length="3" offset="3742" repeat="3" starttimestamp="1624232406782" timestamp="14335836" timestamp2="14336102">
    <text><![CDATA[els]]></text>
  </DocumentChange>
  <DocumentChange __id="3698" _type="Replace" date="Sun Jun 20 23:39:03 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4256" docExpressionCount="468" docLength="4356" endLine="152" insertionLength="8" int_docASTNodeCount="669" int_docActiveCodeLength="4248" int_docExpressionCount="468" int_docLength="4348" length="7" offset="3738" startLine="152" starttimestamp="1624232406782" timestamp="14336329">
    <deletedText><![CDATA[				els]]></deletedText>
    <insertedText><![CDATA[				else]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3701" _type="Insert" date="Sun Jun 20 23:39:05 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4257" docExpressionCount="468" docLength="4357" length="1" offset="3746" starttimestamp="1624232406782" timestamp="14338649">
    <text><![CDATA[{]]></text>
  </DocumentChange>
  <DocumentChange __id="3708" _type="Insert" date="Sun Jun 20 23:39:10 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="468" docLength="4358" length="1" offset="3786" starttimestamp="1624232406782" timestamp="14343797">
    <text><![CDATA[}]]></text>
  </DocumentChange>
  <Command __id="3712" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:39:17 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14350646">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3750" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:40:12 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="468" docLength="4358" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14405245">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		aBridgeScene.addPropertyChangeListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				"), Diff(INSERT,"else{"), Diff(EQUAL,"buttons.getApproach().setEnabled(true);"), Diff(INSERT,"}"), Diff(EQUAL,"¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		aBridgeScene.addPropertyChangeListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue().equals("approach")) {
				if((Boolean)evt.getNewValue() == false) {
				buttons.getApproach().setEnabled(false);
				} 
				else{buttons.getApproach().setEnabled(true);}
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <Command __id="3769" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:41:07 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14461190">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3784" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:41:12 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="468" docLength="4358" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14466068">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		aBridgeScene.addPropertyChangeListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				else{buttons.getApproach().setEnabled(true);}¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3810" _type="DiffBasedFileOpenCommand" date="Sun Jun 20 23:44:48 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="14681733">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="3885" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:01:10 EDT 2021" docASTNodeCount="307" docActiveCodeLength="1821" docExpressionCount="185" docLength="1896" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="15663843">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/AnObservableHelper.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶	import java.beans.PropertyChangeEvent;¶¶¶	import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶public class AnObservableHelper implements ObservableHelp {¶		public static final int MAX_SIZE = 50;¶		¶		List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶		//PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];¶		int size = 0;¶		¶		@Override¶		public List<PropertyChangeListener> getPropertyChangeListenerList() {¶			return contents;¶		}¶		@Override¶		public int size() {¶			return size;¶		}¶		@Override¶		public PropertyChangeListener get (int index) {¶			return contents.get(index);¶		}¶		¶		@Override¶		public boolean isFull() {¶			return size == MAX_SIZE;¶¶		}¶		@Override¶		public void add(PropertyChangeListener listener) {¶			if (isFull())¶				System.out.println("Adding item to a full collection");¶			else {¶				contents.add(size, listener);¶				size++;¶			}¶		}¶		¶		@Override¶		public void notifyAllListeners(PropertyChangeEvent event) {¶			for (int index = 0; index < size(); index++) {			¶				get(index).propertyChange(event);¶			}¶		}¶	¶		@Override¶		public void remove(PropertyChangeListener element) {¶			contents.remove(contents.indexOf(element));¶			size--;¶		}¶		@Override¶		public void remove(int startIndex) {¶			shiftUp(startIndex);¶			size--;¶		}¶		¶		private void shiftUp(int startIndex) {¶			for (int index = startIndex; index + 1 < size; index++)¶				contents.set(index, contents.get(index + 1));¶		}¶		@Override¶		public int indexOf(PropertyChangeListener element) {¶			int index;¶			for (index = 0; index < size && !element.equals(contents.get(index)); index++)¶				;¶			return index;¶		}¶		@Override¶		public boolean member(PropertyChangeListener element) {¶			return indexOf(element) < size;¶¶		}¶		@Override¶		public void clear() {¶			size = 0;¶		}¶	}¶¶¶")]]]></diff>
  </Command>
  <Command __id="3888" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:05:05 EDT 2021" docASTNodeCount="1657" docActiveCodeLength="11339" docExpressionCount="1075" docLength="11697" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="15898658">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/FiveChars.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimationCommand;¶import AnimationMethods.BridgeSceneAnimator;¶import AnimationMethods.BridgeSceneGuardAnimation;¶import AnimationMethods.SceneLockedAnimationCommand;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.extras.Tables;¶import grail.geometryFigs.ACircle;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.CircleFig;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.annotations.Visible;¶import util.misc.ThreadSupport;¶import util.models.PropertyListenerRegisterer;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.BRIDGE_SCENE)¶¶public class FiveChars implements FiveAvatars, PropertyListenerRegisterer {¶	¶	static final String¶		ARTHUR = "images/arthur.jpg",¶		GALAHAD = "images/galahad.jpg",¶		GUARD = "images/guard.jpg",¶		LANCELOT = "images/lancelot.jpg",¶		ROBIN = "images/robin.jpg",¶		ARTHUR_NAME = "Arthur",¶		GALAHAD_NAME = "Galahad",¶		GUARD_NAME = "Guard",¶		LANCELOT_NAME = "Lancelot",¶		ROBIN_NAME = "Robin";¶	static final int¶		ZERO_EXTRA = 0,¶		HEAD_WIDTH = 40,¶		HEAD_HEIGHT = 45,¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Z_X = 480,¶		GUARD_Z_Y = 495,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660,¶		GORGE_X = 270,¶		GORGE_Y = -200,¶		OFF_SET = 20,¶		SLEEP_TIME = 50,¶		PASSED_KNIGHT = 500,¶		KNIGHTS_X = 380;¶	static final double¶	ZONE_RAD = 80,¶	ZONE_ANGLE = Math.PI/6;¶	¶	¶	Avatars arthur;¶	Avatars galahad;¶	Avatars guard;¶	Avatars lancelot;¶	Avatars robin;¶	Gorges bridgeGorge;¶	CircleFig knightZone;¶	CircleFig guardZone;¶	boolean occupationState = false;¶	Avatars avatarInZone;¶	boolean knightsTurn = false;¶	//List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶	ObservableHelp helper = BridgeSceneFactory.helperFactoryMethod();¶	Object arthurAnimator; ¶	Object galahadAnimator;¶	Object lancelotAnimator; ¶	Object robinAnimator; ¶	¶	public FiveChars() {¶		ImageShapes arthurHead = new CharHeads(ARTHUR_X, ARTHUR_Y, HEAD_WIDTH, HEAD_HEIGHT, ARTHUR);¶		ImageShapes galahadHead = new CharHeads(GALAHAD_X, GALAHAD_Y, HEAD_WIDTH, HEAD_HEIGHT, GALAHAD);¶		ImageShapes guardHead = new CharHeads(GUARD_X, GUARD_Y, HEAD_WIDTH, HEAD_HEIGHT, GUARD);¶		ImageShapes lancelotHead = new CharHeads(LANCE_X, LANCE_Y, HEAD_WIDTH, HEAD_HEIGHT, LANCELOT);¶		ImageShapes robinHead = new CharHeads(ROBIN_X, ROBIN_Y, HEAD_WIDTH, HEAD_HEIGHT, ROBIN);¶		knightZone = new ACircle(ZONE_RAD, ZONE_ANGLE, KNIGHTS_X, ARTHUR_Y ); ¶		guardZone = new ACircle(ZONE_RAD, ZONE_ANGLE, GUARD_Z_X, GUARD_Z_Y ); ¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		arthur = new MontyAvatar(arthurHead);¶		aCollection.put(ARTHUR_NAME, arthur);¶		galahad = new MontyAvatar(galahadHead);¶		aCollection.put(GALAHAD_NAME, galahad);¶		guard = new MontyAvatar(guardHead);¶		aCollection.put(GUARD_NAME, guard);¶		lancelot = new MontyAvatar(lancelotHead);¶		aCollection.put(LANCELOT_NAME, lancelot);¶		robin = new MontyAvatar(robinHead);¶		aCollection.put(ROBIN_NAME, robin);¶		bridgeGorge = new GorgeWithBridge();¶		arthurAnimator = new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator() , false);¶		galahadAnimator = new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator() , false);¶		lancelotAnimator = new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator() , false);¶		robinAnimator = new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator() , false);¶		¶	}¶	¶	@Override¶	public Avatars getArthur() {¶		return arthur;¶	}¶	@Override¶	public Avatars getGalahad() {¶		return galahad;¶	}¶	@Override¶	public Avatars getGuard() {¶		return guard;¶	}¶	@Override¶	public Avatars getLancelot() {¶		return lancelot;¶	}¶	@Override¶	public Avatars getRobin() {¶		return robin;¶	}¶	@Override¶	public Gorges getGorge() {¶		return bridgeGorge;¶	}¶	@Override¶	public MovingL getGuardArea() {¶		return guardZone;¶		¶	}¶	@Override¶	public MovingL getKnightArea() {¶		return knightZone;¶	}¶	@Override¶	@Visible(false)¶	public void newOccupation(boolean newState) {¶		occupationState = newState;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "approach", !newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "say", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", newState));¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "failed", newState));¶		¶	}¶	@Override¶	@Visible(false)¶	public void updateSpeakTurn(boolean newTurn) {¶		knightsTurn = newTurn;¶		helper.notifyAllListeners(new PropertyChangeEvent (this, "this", "passed", !newTurn));¶	}¶	public boolean preApproach() {¶		System.out.println("in precondition");¶		//boolean condition1 = (occupationState == false);¶		return !occupationState;¶	}¶	@Override¶	public void approach(Avatars anAvatar) {¶		assert preApproach() : "AREA OCCUPIED";¶		//if (occupationState) {return;}¶		anAvatar.moveAvatar(KNIGHTS_X + OFF_SET - anAvatar.getLegs().getLeftLine().getX(), ARTHUR_Y + OFF_SET - anAvatar.getLegs().getLeftLine().getY());¶		newOccupation(true);¶		avatarInZone = anAvatar;¶	}¶	@Override¶	public void approach(String name) {¶		Avatars avatar = BridgeSceneFactory.avatarAndObject.get(name);¶		approach(avatar);¶	}¶	¶	public boolean preSay() {¶		boolean condition = (occupationState == true);¶		return condition;¶	}¶	@Override¶	public void say(String question) {¶		assert preSay();¶		//if(!occupationState) {return;}¶		if(!knightsTurn) {¶			avatarInZone.getStringShape().setText("");¶			guard.getStringShape().setText(question);¶			updateSpeakTurn(true);¶		}¶		else {¶			guard.getStringShape().setText("");¶			avatarInZone.getStringShape().setText(question);¶			updateSpeakTurn(false);	¶			}¶	}¶	@Override¶	@Visible(false)¶	public boolean getOccupied() {¶		return occupationState;¶	}¶	@Override¶	@Visible(false)¶	public boolean getKnightTurn() {¶		return knightsTurn;¶	}¶	@Override¶	@Visible(false)¶	public Avatars getInteractingKnight() {¶		if (occupationState) {return avatarInZone;} ¶		return null;¶	}¶	¶	¶	public boolean prePassed() {¶		boolean condition = !knightsTurn && occupationState;¶		return condition;¶	}¶	¶	@Override¶	public void passed() {¶		assert prePassed();¶		if (!knightsTurn && occupationState) {¶			avatarInZone.moveAvatar(PASSED_KNIGHT, ZERO_EXTRA);¶			newOccupation(false);¶			//avatarInZone = null;¶		}¶	¶	}¶	¶	¶	public boolean preFailed() {¶		boolean condition1 = occupationState;¶		return condition1;¶		¶	}¶	@Override¶	public void failed() {¶		assert preFailed();¶		if (!knightsTurn){ //&& occupationState) {¶			avatarInZone.moveAvatar(GORGE_X, GORGE_Y);¶			newOccupation(false);¶		}¶		else { //&& occupationState) {¶			guard.moveAvatar(GORGE_X, GORGE_Y);¶		}¶	}¶	¶	@Override¶	public void scroll(int moveInX, int moveInY) {¶		arthur.moveAvatar(moveInX, moveInY);¶		galahad.moveAvatar(moveInX, moveInY);¶		guard.moveAvatar(moveInX, moveInY);¶		lancelot.moveAvatar(moveInX, moveInY);¶		robin.moveAvatar(moveInX, moveInY);¶		bridgeGorge.moveBridge(moveInX, moveInY);¶		int oldKnightZonex = knightZone.getX();¶		int oldKnightZoney = knightZone.getY();¶		int oldGuardZonex = guardZone.getX();¶		int oldGuardZoney = guardZone.getY();¶		knightZone.move( oldKnightZonex + moveInX, oldKnightZoney + moveInY);¶		guardZone.move(oldGuardZonex + moveInX, oldGuardZoney + moveInY);¶	}¶¶	@Override¶	//public void addPropertyChangeListener(PropertyChangeListener arg0) {¶	//	helper.add(arg0);	¶	//}¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		FiveAvatars bridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		Avatars.addPropertyChangeListener(bridgeScene.getArthur(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGalahad(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getLancelot(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getRobin(), aListener);¶		Avatars.addPropertyChangeListener(bridgeScene.getGuard(), aListener);¶		helper.add(aListener);¶	}¶	@Override¶	public synchronized void asynchronousArthur() {¶		Thread aThread = new Thread((Runnable) arthurAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	@Override¶	public synchronized void asynchronousGalahad() {¶		Thread aThread = new Thread((Runnable) galahadAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousLancelot() {¶		Thread aThread = new Thread((Runnable) lancelotAnimator);¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousRobin() {¶		Thread aThread = new Thread((Runnable) robinAnimator);;¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void asynchronousGuard() {¶		Thread aThread = new Thread(new BridgeSceneGuardAnimation(guard, new ABridgeSceneAnimator()));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶¶	}¶	¶	¶	@Override¶	public synchronized void waitingArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶	@Override¶	public synchronized void waitingGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	@Override¶	public synchronized void waitingRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	@Override¶	public synchronized void startAnimation() {¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	@Override¶	public synchronized void lockstepArthur() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(arthur, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	} ¶	¶	¶¶	@Override¶	public synchronized void lockstepGalahad() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(galahad, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶	¶¶	@Override¶	public synchronized void lockstepLancelot() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(lancelot, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	¶¶	@Override¶	public synchronized void lockstepRobin() {¶		Thread aThread = new Thread(new BridgeSceneAnimationCommand(robin, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶	}¶	¶	public synchronized void lockstepGuard() {¶		Thread aThread = new Thread(new SceneLockedAnimationCommand(guard, new ABridgeSceneAnimator(), true));¶		aThread.start();¶		ThreadSupport.sleep(SLEEP_TIME);¶		BridgeSceneFactory.broadcastingClearanceManagerFactoryMethod().proceedAll();¶	}¶	¶	¶	¶	¶	¶	¶	¶	¶	¶	¶}	¶")]]]></diff>
  </Command>
  <Command __id="3893" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:06:29 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1384" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="15982233">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/Alocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.geometryFigs;¶¶import java.beans.PropertyChangeEvent;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.LOCATABLE)¶@PropertyNames({"X", "Y"})¶@EditablePropertyNames({"X", "Y"})¶¶¶public abstract class Alocatable implements Locatable {¶	¶	int x;¶	int y;¶	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	@Override¶	public void setX(int newX) {¶		int oldX = getX();¶		x = newX;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", oldX,¶				newX));¶	}¶	@Override¶	public void setY(int newY) {¶		int oldY = getY();¶		y = newY;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,¶				newY));¶	}¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 ¶		propertySupport.add(aListener);¶	}¶	@Override¶	public List<PropertyChangeListener> getPropertyChangeListeners() {¶		return propertySupport.getPropertyChangeListenerList();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3897" _type="PauseCommand" date="Mon Jun 21 00:07:42 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="16055644">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[73039]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3898" _type="SelectTextCommand" caretOffset="2050" date="Mon Jun 21 00:07:42 EDT 2021" end="2050" start="2016" starttimestamp="1624232406782" timestamp="16056027" />
  <Command __id="3900" _type="PauseCommand" date="Mon Jun 21 00:09:43 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="16176984">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[120957]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3901" _type="SelectTextCommand" caretOffset="558" date="Mon Jun 21 00:09:44 EDT 2021" end="558" start="481" starttimestamp="1624232406782" timestamp="16177329" />
  <Command __id="3903" _type="PauseCommand" date="Mon Jun 21 00:10:02 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="16195873">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[18544]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3902" _type="MoveCaretCommand" caretOffset="465" date="Mon Jun 21 00:10:02 EDT 2021" docOffset="840" starttimestamp="1624232406782" timestamp="16195873" />
  <Command __id="3904" _type="MoveCaretCommand" caretOffset="466" date="Mon Jun 21 00:10:02 EDT 2021" docOffset="841" starttimestamp="1624232406782" timestamp="16196188" />
  <Command __id="3905" _type="SelectTextCommand" caretOffset="469" date="Mon Jun 21 00:10:03 EDT 2021" end="469" start="448" starttimestamp="1624232406782" timestamp="16196278" />
  <Command __id="3910" _type="PauseCommand" date="Mon Jun 21 00:13:02 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="16375789">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[120978]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="3909" _type="RunCommand" date="Mon Jun 21 00:13:02 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="16375789" type="Debug" />
  <Command __id="3911" _type="RunCommand" date="Mon Jun 21 00:13:02 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16375789" type="Run" />
  <Command __id="3912" _type="RunCommand" date="Mon Jun 21 00:13:02 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="16375789" type="Debug" />
  <Command __id="3913" _type="RunCommand" date="Mon Jun 21 00:13:02 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16375789" type="Run" />
  <Command __id="3915" _type="PauseCommand" date="Mon Jun 21 00:13:04 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16377689">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1900]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3914" _type="ShellCommand" date="Mon Jun 21 00:13:04 EDT 2021" starttimestamp="1624232406782" timestamp="16377689" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3917" _type="PauseCommand" date="Mon Jun 21 00:17:19 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="16632687">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[254998]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3916" _type="ShellCommand" date="Mon Jun 21 00:17:19 EDT 2021" starttimestamp="1624232406782" timestamp="16632687" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3918" _type="MoveCaretCommand" caretOffset="1010" date="Mon Jun 21 00:17:20 EDT 2021" docOffset="1106" starttimestamp="1624232406782" timestamp="16633239" />
  <Command __id="3920" _type="PauseCommand" date="Mon Jun 21 00:17:26 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="16639284">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6045]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3921" _type="SelectTextCommand" caretOffset="469" date="Mon Jun 21 00:17:26 EDT 2021" end="469" start="448" starttimestamp="1624232406782" timestamp="16639404" />
  <Command __id="3923" _type="PauseCommand" date="Mon Jun 21 00:17:33 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="16646551">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[7147]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3922" _type="MoveCaretCommand" caretOffset="552" date="Mon Jun 21 00:17:33 EDT 2021" docOffset="927" starttimestamp="1624232406782" timestamp="16646551" />
  <Command __id="3925" _type="PauseCommand" date="Mon Jun 21 00:17:36 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16649694">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3143]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3926" _type="InsertStringCommand" date="Mon Jun 21 00:17:36 EDT 2021" starttimestamp="1624232406782" timestamp="16649697" timestamp2="16649697">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3928" _type="PauseCommand" date="Mon Jun 21 00:17:40 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16653948">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4251]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3929" _type="InsertStringCommand" date="Mon Jun 21 00:17:40 EDT 2021" starttimestamp="1624232406782" timestamp="16653953" timestamp2="16653953">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3931" _type="InsertStringCommand" date="Mon Jun 21 00:17:40 EDT 2021" starttimestamp="1624232406782" timestamp="16654061" timestamp2="16654061">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3933" _type="InsertStringCommand" date="Mon Jun 21 00:17:41 EDT 2021" starttimestamp="1624232406782" timestamp="16654239" timestamp2="16654239">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3935" _type="InsertStringCommand" date="Mon Jun 21 00:17:41 EDT 2021" starttimestamp="1624232406782" timestamp="16654354" timestamp2="16654354">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3937" _type="PauseCommand" date="Mon Jun 21 00:17:42 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16656038">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1684]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3938" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:17:42 EDT 2021" starttimestamp="1624232406782" timestamp="16656041" />
  <Command __id="3940" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:17:42 EDT 2021" starttimestamp="1624232406782" timestamp="16656198" />
  <Command __id="3942" _type="InsertStringCommand" date="Mon Jun 21 00:17:43 EDT 2021" starttimestamp="1624232406782" timestamp="16656514" timestamp2="16656514">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3944" _type="InsertStringCommand" date="Mon Jun 21 00:17:43 EDT 2021" starttimestamp="1624232406782" timestamp="16656603" timestamp2="16656603">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3946" _type="PauseCommand" date="Mon Jun 21 00:17:44 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16657882">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1279]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3945" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:17:44 EDT 2021" starttimestamp="1624232406782" timestamp="16657882" />
  <Command __id="3948" _type="PauseCommand" date="Mon Jun 21 00:17:46 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16659633">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1751]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3949" _type="InsertStringCommand" date="Mon Jun 21 00:17:46 EDT 2021" starttimestamp="1624232406782" timestamp="16659638" timestamp2="16659638">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3951" _type="InsertStringCommand" date="Mon Jun 21 00:17:46 EDT 2021" starttimestamp="1624232406782" timestamp="16659822" timestamp2="16659822">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3952" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:17:47 EDT 2021" starttimestamp="1624232406782" timestamp="16660243" />
  <Command __id="3953" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:17:47 EDT 2021" starttimestamp="1624232406782" timestamp="16660581" />
  <Command __id="3954" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:17:47 EDT 2021" starttimestamp="1624232406782" timestamp="16661005" />
  <Command __id="3896" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:07:42 EDT 2021" docASTNodeCount="836" docActiveCodeLength="4766" docExpressionCount="593" docLength="5303" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16055644">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/compositeFigs/MontyAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.compositeFigs;¶¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import grail.extras.Tables;¶import grail.geometryFigs.CharHeads;¶import grail.geometryFigs.ImageShapes;¶import grail.geometryFigs.MontyString;¶import grail.geometryFigs.MovingL;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.StringShape;¶import tags301.Comp301Tags;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@Tags(Comp301Tags.AVATAR)¶¶¶public class MontyAvatar implements Avatars {¶	¶	static final double¶		INITIAL_LIMB_RAD = 20,¶		USUAL_LLINE_ANG = (Math.PI/4),¶		USUAL_RLINE_ANG = 3*(Math.PI/4),¶		TORSO_ANGLE = Math.PI/2,¶		TORSO_LENGTH = 50;¶		;¶	static final int¶		ORIG_X = 0,¶		ORIG_Y = 0;¶	static final String AVATAR_SAYS = "Lets Go";¶	¶	StringShape textSpoken;¶	ImageShapes character;¶	AngleShapes arms;¶	AngleShapes legs;¶	MovingL torso;¶	¶	public MontyAvatar(ImageShapes newHead) {¶		character = newHead;¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		armLegMiniFact();¶		torso = new RotatingLine(TORSO_LENGTH, TORSO_ANGLE, ORIG_X, ORIG_Y);¶		textSpoken = new MontyString(ORIG_X, ORIG_Y, AVATAR_SAYS);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	@Override¶	public void armLegMiniFact() {¶		arms = new ArmsAndLegs(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶//		try {¶//			legs = new RealisticLegs(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶//		} catch (IOException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶		legs = BridgeSceneFactory.legsFactoryMethod(INITIAL_LIMB_RAD,USUAL_LLINE_ANG,INITIAL_LIMB_RAD,USUAL_RLINE_ANG, ORIG_X, ORIG_Y);¶	}¶	@Override¶	public StringShape getStringShape() {¶		return textSpoken;¶	}¶	@Override¶	public ImageShapes getHead() {¶		return character;¶	}¶	@Override¶	public AngleShapes getArms() {¶		return arms;¶	}¶	@Override¶	public AngleShapes getLegs() {¶		return legs;¶	}¶	@Override¶	public MovingL getTorso() {¶		return torso;¶	}¶	@Override¶	public void combineFigs(int comunX, int comunY) {¶			¶		arms.getLeftLine().setX(comunX);¶		arms.getLeftLine().setY(comunY);¶		arms.getRightLine().setX(comunX);¶		arms.getRightLine().setY(comunY);¶		¶		torso.setX(comunX);¶		torso.setY(comunY);¶		¶		int lowTorsoY = comunY + torso.getHeight();¶		int lowTorsoX = comunX + torso.getWidth();¶		legs.getLeftLine().setX(lowTorsoX);¶		legs.getLeftLine().setY(lowTorsoY);¶		legs.getRightLine().setX(lowTorsoX);¶		legs.getRightLine().setY(lowTorsoY);¶		¶		¶	}¶	@Override¶	public void moveAvatar(int newX, int newY) {¶		int newAttachX = arms.getLeftLine().getX() + newX;¶		int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newAttachX, newAttachY);¶		int newPicLocX = character.getX() + newX;¶		int newPicLocY = character.getY() + newY;¶		character.setX(newPicLocX);¶		character.setY(newPicLocY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	@Override¶	public void move(int newX, int newY) {¶		//int newAttachX = arms.getLeftLine().getX() + newX;¶		//int newAttachY = arms.getLeftLine().getY() + newY;¶		combineFigs(newX, newY);¶		//int newPicLocX = character.getX() + newX;¶		//int newPicLocY = character.getY() + newY;¶		character.setX(newX - (character.getWidth())/2);¶		character.setY(newY - character.getHeight());¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	¶	@Override¶	public void scale(double scaleBy) {¶		double newRadL = arms.getLeftLine().getRadius()*scaleBy;¶		double newRadR = arms.getRightLine().getRadius()*scaleBy;¶		double newRadTo = torso.getRadius()*scaleBy;¶		int legAttach = (int) ((torso.getRadius()*scaleBy)- torso.getRadius());¶		double newRadLegL = legs.getLeftLine().getRadius()*scaleBy;¶		double newRadLegR = legs.getRightLine().getRadius()*scaleBy;¶		int newHeadHeight = (int)(character.getHeight()*scaleBy);¶		int newHeadWidth = (int) (character.getWidth()*scaleBy);¶		character.setHeight(newHeadHeight);¶		character.setWidth(newHeadWidth);¶		int attachPointX = character.getX() + ((character.getWidth())/2);¶		int attachPointY = character.getY() + (character.getHeight());¶		arms.getLeftLine().setRadius(newRadL);¶		arms.getRightLine().setRadius(newRadR);¶		legs.getLeftLine().setRadius(newRadLegL);¶		legs.getRightLine().setRadius(newRadLegR);¶		torso.setRadius(newRadTo);¶		legs.moveLimbs(ORIG_X, legAttach);¶		this.combineFigs(attachPointX, attachPointY);¶		int stringX = character.getX() + character.getWidth();¶		int stringY = character.getY();¶		textSpoken.setX(stringX);¶		textSpoken.setY(stringY);¶	}¶	¶	//public static void addPropertyChangeListener(Avatars anAvatar, PropertyChangeListener aListener) {¶	//	anAvatar.getArms().ad¶	//}¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3899" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:09:43 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1384" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16176984">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/Alocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.geometryFigs;¶¶import java.beans.PropertyChangeEvent;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.LOCATABLE)¶@PropertyNames({"X", "Y"})¶@EditablePropertyNames({"X", "Y"})¶¶¶public abstract class Alocatable implements Locatable {¶	¶	int x;¶	int y;¶	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	@Override¶	public void setX(int newX) {¶		int oldX = getX();¶		x = newX;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", oldX,¶				newX));¶	}¶	@Override¶	public void setY(int newY) {¶		int oldY = getY();¶		y = newY;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,¶				newY));¶	}¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 ¶		propertySupport.add(aListener);¶	}¶	@Override¶	public List<PropertyChangeListener> getPropertyChangeListeners() {¶		return propertySupport.getPropertyChangeListenerList();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3906" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:11:01 EDT 2021" docASTNodeCount="307" docActiveCodeLength="1821" docExpressionCount="185" docLength="1896" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16254705">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/AnObservableHelper.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶	import java.beans.PropertyChangeEvent;¶¶¶	import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶public class AnObservableHelper implements ObservableHelp {¶		public static final int MAX_SIZE = 50;¶		¶		List<PropertyChangeListener> contents = new ArrayList<PropertyChangeListener>();¶		//PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];¶		int size = 0;¶		¶		@Override¶		public List<PropertyChangeListener> getPropertyChangeListenerList() {¶			return contents;¶		}¶		@Override¶		public int size() {¶			return size;¶		}¶		@Override¶		public PropertyChangeListener get (int index) {¶			return contents.get(index);¶		}¶		¶		@Override¶		public boolean isFull() {¶			return size == MAX_SIZE;¶¶		}¶		@Override¶		public void add(PropertyChangeListener listener) {¶			if (isFull())¶				System.out.println("Adding item to a full collection");¶			else {¶				contents.add(size, listener);¶				size++;¶			}¶		}¶		¶		@Override¶		public void notifyAllListeners(PropertyChangeEvent event) {¶			for (int index = 0; index < size(); index++) {			¶				get(index).propertyChange(event);¶			}¶		}¶	¶		@Override¶		public void remove(PropertyChangeListener element) {¶			contents.remove(contents.indexOf(element));¶			size--;¶		}¶		@Override¶		public void remove(int startIndex) {¶			shiftUp(startIndex);¶			size--;¶		}¶		¶		private void shiftUp(int startIndex) {¶			for (int index = startIndex; index + 1 < size; index++)¶				contents.set(index, contents.get(index + 1));¶		}¶		@Override¶		public int indexOf(PropertyChangeListener element) {¶			int index;¶			for (index = 0; index < size && !element.equals(contents.get(index)); index++)¶				;¶			return index;¶		}¶		@Override¶		public boolean member(PropertyChangeListener element) {¶			return indexOf(element) < size;¶¶		}¶		@Override¶		public void clear() {¶			size = 0;¶		}¶	}¶¶¶")]]]></diff>
  </Command>
  <Command __id="3919" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:17:26 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1384" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16639284">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/Alocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.geometryFigs;¶¶import java.beans.PropertyChangeEvent;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.LOCATABLE)¶@PropertyNames({"X", "Y"})¶@EditablePropertyNames({"X", "Y"})¶¶¶public abstract class Alocatable implements Locatable {¶	¶	int x;¶	int y;¶	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	@Override¶	public void setX(int newX) {¶		int oldX = getX();¶		x = newX;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", oldX,¶				newX));¶	}¶	@Override¶	public void setY(int newY) {¶		int oldY = getY();¶		y = newY;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,¶				newY));¶	}¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 ¶		propertySupport.add(aListener);¶	}¶	@Override¶	public List<PropertyChangeListener> getPropertyChangeListeners() {¶		return propertySupport.getPropertyChangeListenerList();¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3924" _type="Insert" date="Mon Jun 21 00:17:36 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1385" docExpressionCount="143" docLength="1385" length="1" offset="927" starttimestamp="1624232406782" timestamp="16649694">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="3927" _type="Insert" date="Mon Jun 21 00:17:40 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1389" docExpressionCount="143" docLength="1389" length="4" offset="928" repeat="4" starttimestamp="1624232406782" timestamp="16653948" timestamp2="16654350">
    <text><![CDATA[treu]]></text>
  </DocumentChange>
  <DocumentChange __id="3936" _type="Delete" date="Mon Jun 21 00:17:42 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1387" docExpressionCount="143" docLength="1387" endLine="39" length="2" offset="930" repeat="2" startLine="39" starttimestamp="1624232406782" timestamp="16656038" timestamp2="16656195">
    <text><![CDATA[eu]]></text>
  </DocumentChange>
  <DocumentChange __id="3941" _type="Insert" date="Mon Jun 21 00:17:43 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1389" docExpressionCount="143" docLength="1389" length="2" offset="930" repeat="2" starttimestamp="1624232406782" timestamp="16656510" timestamp2="16656599">
    <text><![CDATA[ue]]></text>
  </DocumentChange>
  <DocumentChange __id="3947" _type="Insert" date="Mon Jun 21 00:17:46 EDT 2021" docASTNodeCount="216" docActiveCodeLength="1384" docExpressionCount="142" docLength="1391" length="2" offset="933" repeat="2" starttimestamp="1624232406782" timestamp="16659633" timestamp2="16659818">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3956" _type="PauseCommand" date="Mon Jun 21 00:17:49 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16663102">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2097]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3957" _type="InsertStringCommand" date="Mon Jun 21 00:17:49 EDT 2021" starttimestamp="1624232406782" timestamp="16663107" timestamp2="16663107">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3959" _type="InsertStringCommand" date="Mon Jun 21 00:17:50 EDT 2021" starttimestamp="1624232406782" timestamp="16663305" timestamp2="16663305">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3961" _type="InsertStringCommand" date="Mon Jun 21 00:17:50 EDT 2021" starttimestamp="1624232406782" timestamp="16663535" timestamp2="16663535">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3963" _type="InsertStringCommand" date="Mon Jun 21 00:17:50 EDT 2021" starttimestamp="1624232406782" timestamp="16663621" timestamp2="16663621">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3965" _type="InsertStringCommand" date="Mon Jun 21 00:17:50 EDT 2021" starttimestamp="1624232406782" timestamp="16663894" timestamp2="16663894">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3967" _type="InsertStringCommand" date="Mon Jun 21 00:17:50 EDT 2021" starttimestamp="1624232406782" timestamp="16664027" timestamp2="16664027">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3970" _type="PauseCommand" date="Mon Jun 21 00:17:51 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16665089">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1062]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3969" _type="InsertStringCommand" date="Mon Jun 21 00:17:51 EDT 2021" starttimestamp="1624232406782" timestamp="16665089" timestamp2="16665089">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3972" _type="PauseCommand" date="Mon Jun 21 00:17:53 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16666386">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1297]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:17:53 EDT 2021" starttimestamp="1624232406782" timestamp="16666386" />
  <Command __id="3974" _type="InsertStringCommand" date="Mon Jun 21 00:17:53 EDT 2021" starttimestamp="1624232406782" timestamp="16666645" timestamp2="16666645">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3976" _type="PauseCommand" date="Mon Jun 21 00:17:55 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16668913">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2268]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3975" _type="MoveCaretCommand" caretOffset="576" date="Mon Jun 21 00:17:55 EDT 2021" docOffset="951" starttimestamp="1624232406782" timestamp="16668913" />
  <Command __id="3978" _type="InsertStringCommand" date="Mon Jun 21 00:17:56 EDT 2021" starttimestamp="1624232406782" timestamp="16669856" timestamp2="16669856">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3980" _type="InsertStringCommand" date="Mon Jun 21 00:17:56 EDT 2021" starttimestamp="1624232406782" timestamp="16670010" timestamp2="16670010">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3982" _type="PauseCommand" date="Mon Jun 21 00:18:00 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16673270">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3260]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3981" _type="MoveCaretCommand" caretOffset="565" date="Mon Jun 21 00:18:00 EDT 2021" docOffset="940" starttimestamp="1624232406782" timestamp="16673270" />
  <Command __id="3984" _type="PauseCommand" date="Mon Jun 21 00:18:01 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16674352">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1082]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3985" _type="InsertStringCommand" date="Mon Jun 21 00:18:01 EDT 2021" starttimestamp="1624232406782" timestamp="16674359" timestamp2="16674359">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3987" _type="PauseCommand" date="Mon Jun 21 00:18:06 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16679219">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4860]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3986" _type="MoveCaretCommand" caretOffset="565" date="Mon Jun 21 00:18:06 EDT 2021" docOffset="940" starttimestamp="1624232406782" timestamp="16679219" />
  <Command __id="3989" _type="PauseCommand" date="Mon Jun 21 00:18:07 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16680562">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1343]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3990" _type="InsertStringCommand" date="Mon Jun 21 00:18:07 EDT 2021" starttimestamp="1624232406782" timestamp="16680570" timestamp2="16680570">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3992" _type="PauseCommand" date="Mon Jun 21 00:18:17 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="16690491">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[9921]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3991" _type="ShellCommand" date="Mon Jun 21 00:18:17 EDT 2021" starttimestamp="1624232406782" timestamp="16690491" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3994" _type="PauseCommand" date="Mon Jun 21 00:18:23 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="16696705">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6214]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3993" _type="ShellCommand" date="Mon Jun 21 00:18:23 EDT 2021" starttimestamp="1624232406782" timestamp="16696705" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3996" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:18:23 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="16697132" />
  <Command __id="3998" _type="PauseCommand" date="Mon Jun 21 00:18:26 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16699356">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2224]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3997" _type="ShellCommand" date="Mon Jun 21 00:18:26 EDT 2021" starttimestamp="1624232406782" timestamp="16699356" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4000" _type="PauseCommand" date="Mon Jun 21 00:18:27 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16701183">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1827]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3999" _type="ShellCommand" date="Mon Jun 21 00:18:27 EDT 2021" starttimestamp="1624232406782" timestamp="16701183" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4001" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:18:28 EDT 2021" starttimestamp="1624232406782" timestamp="16701322" />
  <Command __id="4002" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:18:28 EDT 2021" starttimestamp="1624232406782" timestamp="16701359" />
  <Command __id="4003" _type="RunCommand" date="Mon Jun 21 00:18:28 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16702028" type="Run" />
  <Command __id="4004" _type="RunCommand" date="Mon Jun 21 00:18:28 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16702029" type="Run" />
  <Command __id="4005" _type="ShellCommand" date="Mon Jun 21 00:18:29 EDT 2021" starttimestamp="1624232406782" timestamp="16702538" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4007" _type="PauseCommand" date="Mon Jun 21 00:18:39 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="16712939">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10401]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4006" _type="ConsoleOutput" date="Mon Jun 21 00:18:39 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16712939" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Jun 21 00:18:39 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A4CommonSignaturesAreInherited did not pass completely:See cons"), Diff(INSERT,"Building symb"), Diff(EQUAL,"ol"), Diff(DELETE,"e"), Diff(EQUAL," t"), Diff(DELETE,"race about lines failing  this check%0.29936974789915966"), Diff(INSERT,"able and running first pass checks:Mon Jun 21 00:18:39 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4009" _type="PauseCommand" date="Mon Jun 21 00:18:41 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16714830">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1891]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4008" _type="ConsoleOutput" date="Mon Jun 21 00:18:41 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16714830" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Mon Jun 21 00:18:41 EDT 2021
Start O(n2) inter- and intra class method calls:Mon Jun 21 00:18:41 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Mon Jun 21 00:18:41 EDT 2021¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Mon Jun 21 00:18:"), Diff(DELETE,"39"), Diff(INSERT,"41"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4010" _type="ConsoleOutput" date="Mon Jun 21 00:18:41 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16714928" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Jun 21 00:18:41 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Mon Jun 21 00:18:41 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Jun 21 00:18:41 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4012" _type="PauseCommand" date="Mon Jun 21 00:18:43 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16716509">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1581]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4011" _type="ConsoleOutput" date="Mon Jun 21 00:18:43 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16716509" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Jun 21 00:18:43 EDT 2021
Generating checks:Mon Jun 21 00:18:43 EDT 2021
Finished Generating checks:Mon Jun 21 00:18:43 EDT 2021
Generating externals:Mon Jun 21 00:18:43 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Jun 21 00:18:43 EDT 2021¶Generating checks:Mon Jun 21 00:18:43 EDT 2021¶Finished Generating checks:Mon Jun 21 00:18:43 EDT 2021¶Generating externa"), Diff(EQUAL,"ls:Mon Jun 21 00:18:4"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4013" _type="ConsoleOutput" date="Mon Jun 21 00:18:43 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16716969" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Jun 21 00:18:43 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Jun 21 00:18:43 EDT 2021¶Generating checks:Mon Jun 21 00:18:43 EDT 2021¶Finished Generating checks:Mon Jun 21 00:18:43 EDT 2021¶"), Diff(EQUAL,"Generating externals:Mon Jun 21 00:18:43 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4014" _type="ConsoleOutput" date="Mon Jun 21 00:18:44 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16717711" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@4e7e0f9a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@4e7e0f9a]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cf1804e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2cf1804e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6131d92a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Jun 21 00:18:43 EDT 2021"), Diff(INSERT,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@4e7e0f9a]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@4e7e0f9a]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cf1804e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2cf1804e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6131d92a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4016" _type="PauseCommand" date="Mon Jun 21 00:18:55 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="16728456">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10745]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4015" _type="ShellCommand" date="Mon Jun 21 00:18:55 EDT 2021" starttimestamp="1624232406782" timestamp="16728456" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4018" _type="MoveCaretCommand" caretOffset="566" date="Mon Jun 21 00:18:55 EDT 2021" docOffset="941" starttimestamp="1624232406782" timestamp="16728867" />
  <Command __id="4020" _type="PauseCommand" date="Mon Jun 21 00:18:57 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16730918">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2051]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4019" _type="MoveCaretCommand" caretOffset="592" date="Mon Jun 21 00:18:57 EDT 2021" docOffset="967" starttimestamp="1624232406782" timestamp="16730918" />
  <Command __id="4041" _type="PauseCommand" date="Mon Jun 21 00:20:06 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="16799273">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[61032]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="4040" _type="RunCommand" date="Mon Jun 21 00:20:06 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="16799273" type="Debug" />
  <Command __id="4042" _type="RunCommand" date="Mon Jun 21 00:20:06 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16799273" type="Run" />
  <Command __id="4043" _type="RunCommand" date="Mon Jun 21 00:20:06 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="16799273" type="Debug" />
  <Command __id="4044" _type="RunCommand" date="Mon Jun 21 00:20:06 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16799273" type="Run" />
  <Command __id="4046" _type="PauseCommand" date="Mon Jun 21 00:20:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16804082">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[4809]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4045" _type="MoveCaretCommand" caretOffset="553" date="Mon Jun 21 00:20:10 EDT 2021" docOffset="928" starttimestamp="1624232406782" timestamp="16804082" />
  <Command __id="4047" _type="MoveCaretCommand" caretOffset="553" date="Mon Jun 21 00:20:11 EDT 2021" docOffset="928" starttimestamp="1624232406782" timestamp="16804791" />
  <DocumentChange __id="3955" _type="Insert" date="Mon Jun 21 00:17:49 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1392" docExpressionCount="143" docLength="1399" length="8" offset="932" repeat="8" starttimestamp="1624232406782" timestamp="16663102" timestamp2="16666639">
    <text><![CDATA[, false)]]></text>
  </DocumentChange>
  <DocumentChange __id="3977" _type="Insert" date="Mon Jun 21 00:17:56 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1383" docExpressionCount="143" docLength="1401" length="2" offset="951" repeat="2" starttimestamp="1624232406782" timestamp="16669853" timestamp2="16670007">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3983" _type="Insert" date="Mon Jun 21 00:18:01 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1402" length="1" offset="940" starttimestamp="1624232406782" timestamp="16674352">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3988" _type="Insert" date="Mon Jun 21 00:18:07 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1385" docExpressionCount="143" docLength="1403" length="1" offset="940" starttimestamp="1624232406782" timestamp="16680562">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="3995" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:18:23 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16696943">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="4017" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:18:55 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1385" docExpressionCount="143" docLength="1403" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16728686">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/Alocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.geometryFigs;¶¶import java.beans.PropertyChangeEvent;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.LOCATABLE)¶@PropertyNames({"X", "Y"})¶@EditablePropertyNames({"X", "Y"})¶¶¶public abstract class Alocatable implements Locatable {¶	¶	int x;¶	int y;¶	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	@Override¶	public void setX(int newX) {¶		int oldX = getX();¶		x = newX;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", "), Diff(INSERT,"true, false)); //"), Diff(EQUAL,"oldX,¶		"), Diff(INSERT,"//"), Diff(EQUAL,"		newX));¶	}¶	@Override¶	public void setY(int newY) {¶		int oldY = getY();¶		y = newY;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,¶				newY));¶	}¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 ¶		propertySupport.add(aListener);¶	}¶	@Override¶	public List<PropertyChangeListener> getPropertyChangeListeners() {¶		return propertySupport.getPropertyChangeListenerList();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.geometryFigs;

import java.beans.PropertyChangeEvent;

import java.beans.PropertyChangeListener;
import java.util.List;

import util.models.PropertyListenerRegisterer;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.compositeFigs.BridgeSceneFactory;
import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;

@Tags(Comp301Tags.LOCATABLE)
@PropertyNames({"X", "Y"})
@EditablePropertyNames({"X", "Y"})


public abstract class Alocatable implements Locatable {
	
	int x;
	int y;
	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();
	@Override
	public int getX() {
		return x;
	}

	@Override
	public int getY() {
		return y;
	}
	@Override
	public void setX(int newX) {
		int oldX = getX();
		x = newX;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", true, false)); //oldX,
		//		newX));
	}
	@Override
	public void setY(int newY) {
		int oldY = getY();
		y = newY;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,
				newY));
	}
	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 
		propertySupport.add(aListener);
	}
	@Override
	public List<PropertyChangeListener> getPropertyChangeListeners() {
		return propertySupport.getPropertyChangeListenerList();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4021" _type="Delete" date="Mon Jun 21 00:19:00 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1383" docExpressionCount="143" docLength="1401" endLine="39" length="2" offset="940" repeat="2" startLine="39" starttimestamp="1624232406782" timestamp="16733388" timestamp2="16734086">
    <text><![CDATA[);]]></text>
  </DocumentChange>
  <DocumentChange __id="4026" _type="Delete" date="Mon Jun 21 00:19:01 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1392" docExpressionCount="143" docLength="1399" endLine="40" length="2" offset="951" startLine="40" starttimestamp="1624232406782" timestamp="16734581">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="4028" _type="Delete" date="Mon Jun 21 00:19:01 EDT 2021" docASTNodeCount="219" docActiveCodeLength="1391" docExpressionCount="145" docLength="1398" endLine="39" length="1" offset="938" startLine="39" starttimestamp="1624232406782" timestamp="16735115">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="4030" _type="Delete" date="Mon Jun 21 00:19:02 EDT 2021" docASTNodeCount="216" docActiveCodeLength="1384" docExpressionCount="142" docLength="1391" endLine="39" length="7" offset="932" startLine="39" starttimestamp="1624232406782" timestamp="16735745">
    <text><![CDATA[, fals)]]></text>
  </DocumentChange>
  <DocumentChange __id="4032" _type="Delete" date="Mon Jun 21 00:19:03 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1389" docExpressionCount="143" docLength="1389" endLine="39" length="2" offset="933" startLine="39" starttimestamp="1624232406782" timestamp="16736269">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="4034" _type="Delete" date="Mon Jun 21 00:19:03 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1387" docExpressionCount="143" docLength="1387" endLine="39" length="2" offset="930" startLine="39" starttimestamp="1624232406782" timestamp="16736827">
    <text><![CDATA[ue]]></text>
  </DocumentChange>
  <DocumentChange __id="4036" _type="Insert" date="Mon Jun 21 00:19:04 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1389" docExpressionCount="143" docLength="1389" length="2" offset="930" starttimestamp="1624232406782" timestamp="16737638">
    <text><![CDATA[eu]]></text>
  </DocumentChange>
  <DocumentChange __id="4038" _type="Delete" date="Mon Jun 21 00:19:05 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1384" endLine="39" length="5" offset="927" startLine="39" starttimestamp="1624232406782" timestamp="16738237">
    <text><![CDATA[ treu]]></text>
  </DocumentChange>
  <Command __id="4049" _type="PauseCommand" date="Mon Jun 21 00:20:12 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16806154">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1363]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4050" _type="InsertStringCommand" date="Mon Jun 21 00:20:12 EDT 2021" starttimestamp="1624232406782" timestamp="16806159" timestamp2="16806159">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4052" _type="InsertStringCommand" date="Mon Jun 21 00:20:13 EDT 2021" starttimestamp="1624232406782" timestamp="16806315" timestamp2="16806315">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:20:13 EDT 2021" starttimestamp="1624232406782" timestamp="16806625" />
  <Command __id="4054" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:20:13 EDT 2021" starttimestamp="1624232406782" timestamp="16806828" />
  <Command __id="4057" _type="PauseCommand" date="Mon Jun 21 00:20:14 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16808116">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1288]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4056" _type="InsertStringCommand" date="Mon Jun 21 00:20:14 EDT 2021" starttimestamp="1624232406782" timestamp="16808116" timestamp2="16808116">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4059" _type="InsertStringCommand" date="Mon Jun 21 00:20:15 EDT 2021" starttimestamp="1624232406782" timestamp="16808342" timestamp2="16808342">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4061" _type="InsertStringCommand" date="Mon Jun 21 00:20:15 EDT 2021" starttimestamp="1624232406782" timestamp="16808543" timestamp2="16808543">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4063" _type="InsertStringCommand" date="Mon Jun 21 00:20:15 EDT 2021" starttimestamp="1624232406782" timestamp="16808723" timestamp2="16808723">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4066" _type="PauseCommand" date="Mon Jun 21 00:20:16 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16809780">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1057]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4065" _type="InsertStringCommand" date="Mon Jun 21 00:20:16 EDT 2021" starttimestamp="1624232406782" timestamp="16809780" timestamp2="16809780">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="4068" _type="InsertStringCommand" date="Mon Jun 21 00:20:16 EDT 2021" starttimestamp="1624232406782" timestamp="16810050" timestamp2="16810050">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4070" _type="InsertStringCommand" date="Mon Jun 21 00:20:16 EDT 2021" starttimestamp="1624232406782" timestamp="16810163" timestamp2="16810163">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4072" _type="InsertStringCommand" date="Mon Jun 21 00:20:17 EDT 2021" starttimestamp="1624232406782" timestamp="16810433" timestamp2="16810433">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4074" _type="InsertStringCommand" date="Mon Jun 21 00:20:17 EDT 2021" starttimestamp="1624232406782" timestamp="16810571" timestamp2="16810571">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4076" _type="InsertStringCommand" date="Mon Jun 21 00:20:17 EDT 2021" starttimestamp="1624232406782" timestamp="16810726" timestamp2="16810726">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4078" _type="InsertStringCommand" date="Mon Jun 21 00:20:17 EDT 2021" starttimestamp="1624232406782" timestamp="16810905" timestamp2="16810905">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4080" _type="InsertStringCommand" date="Mon Jun 21 00:20:18 EDT 2021" starttimestamp="1624232406782" timestamp="16811339" timestamp2="16811339">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4082" _type="PauseCommand" date="Mon Jun 21 00:20:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16813465">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2126]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4081" _type="MoveCaretCommand" caretOffset="575" date="Mon Jun 21 00:20:20 EDT 2021" docOffset="950" starttimestamp="1624232406782" timestamp="16813465" />
  <Command __id="4084" _type="InsertStringCommand" date="Mon Jun 21 00:20:21 EDT 2021" starttimestamp="1624232406782" timestamp="16814372" timestamp2="16814372">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4086" _type="InsertStringCommand" date="Mon Jun 21 00:20:21 EDT 2021" starttimestamp="1624232406782" timestamp="16814507" timestamp2="16814507">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4088" _type="PauseCommand" date="Mon Jun 21 00:20:24 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16817334">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2827]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4089" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:20:24 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="16817466" />
  <Command __id="4091" _type="PauseCommand" date="Mon Jun 21 00:20:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16818650">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1184]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4092" _type="MoveCaretCommand" caretOffset="1889" date="Mon Jun 21 00:20:25 EDT 2021" docOffset="2678" starttimestamp="1624232406782" timestamp="16818768" />
  <Command __id="4094" _type="PauseCommand" date="Mon Jun 21 00:20:27 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16820463">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1695]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4093" _type="ShellCommand" date="Mon Jun 21 00:20:27 EDT 2021" starttimestamp="1624232406782" timestamp="16820463" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4096" _type="PauseCommand" date="Mon Jun 21 00:20:28 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16822183">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1720]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4095" _type="ShellCommand" date="Mon Jun 21 00:20:28 EDT 2021" starttimestamp="1624232406782" timestamp="16822183" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4097" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:20:29 EDT 2021" starttimestamp="1624232406782" timestamp="16822306" />
  <Command __id="4098" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:20:29 EDT 2021" starttimestamp="1624232406782" timestamp="16822329" />
  <Command __id="4099" _type="ShellCommand" date="Mon Jun 21 00:20:29 EDT 2021" starttimestamp="1624232406782" timestamp="16822391" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4101" _type="PauseCommand" date="Mon Jun 21 00:20:33 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16826712">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4321]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4100" _type="ShellCommand" date="Mon Jun 21 00:20:33 EDT 2021" starttimestamp="1624232406782" timestamp="16826712" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4103" _type="PauseCommand" date="Mon Jun 21 00:20:35 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16828326">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1614]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4104" _type="MoveCaretCommand" caretOffset="577" date="Mon Jun 21 00:20:35 EDT 2021" docOffset="952" starttimestamp="1624232406782" timestamp="16828422" />
  <Command __id="4106" _type="PauseCommand" date="Mon Jun 21 00:20:39 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16832832">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4410]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4105" _type="MoveCaretCommand" caretOffset="565" date="Mon Jun 21 00:20:39 EDT 2021" docOffset="940" starttimestamp="1624232406782" timestamp="16832832" />
  <Command __id="4108" _type="PauseCommand" date="Mon Jun 21 00:20:41 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16834580">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1747]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4109" _type="InsertStringCommand" date="Mon Jun 21 00:20:41 EDT 2021" starttimestamp="1624232406782" timestamp="16834587" timestamp2="16834587">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4111" _type="InsertStringCommand" date="Mon Jun 21 00:20:41 EDT 2021" starttimestamp="1624232406782" timestamp="16834986" timestamp2="16834986">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4113" _type="PauseCommand" date="Mon Jun 21 00:20:44 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16837920">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2934]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4114" _type="MoveCaretCommand" caretOffset="1889" date="Mon Jun 21 00:20:44 EDT 2021" docOffset="2678" starttimestamp="1624232406782" timestamp="16838037" />
  <Command __id="4116" _type="PauseCommand" date="Mon Jun 21 00:20:46 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16839459">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1422]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4115" _type="ShellCommand" date="Mon Jun 21 00:20:46 EDT 2021" starttimestamp="1624232406782" timestamp="16839459" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4118" _type="PauseCommand" date="Mon Jun 21 00:20:47 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16840955">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1496]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4117" _type="ShellCommand" date="Mon Jun 21 00:20:47 EDT 2021" starttimestamp="1624232406782" timestamp="16840955" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4119" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:20:47 EDT 2021" starttimestamp="1624232406782" timestamp="16841078" />
  <Command __id="4120" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:20:47 EDT 2021" starttimestamp="1624232406782" timestamp="16841099" />
  <Command __id="4121" _type="RunCommand" date="Mon Jun 21 00:20:47 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16841156" type="Run" />
  <Command __id="4122" _type="RunCommand" date="Mon Jun 21 00:20:47 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16841156" type="Run" />
  <Command __id="4123" _type="ShellCommand" date="Mon Jun 21 00:20:48 EDT 2021" starttimestamp="1624232406782" timestamp="16841901" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4125" _type="PauseCommand" date="Mon Jun 21 00:20:49 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16842951">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1050]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4124" _type="ConsoleOutput" date="Mon Jun 21 00:20:49 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16842951" type="ConsoleOutput">
    <outputString><![CDATA[grail.compositeFigs.MontyAvatar@65d6b83b
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6b]"), Diff(INSERT,"grail.compositeFigs.MontyAvatar@65d6b83b"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79a6ae1e"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"79a6ae1e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@1e2ebcae"), Diff(INSERT,"27ae2fd0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"estrictedLine@75b2fbe0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=595; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@75b2fbe0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@7a4e4d85]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=500; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach"), Diff(INSERT,"otatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545"), Diff(EQUAL,"; newValue="), Diff(DELETE,"false"), Diff(INSERT,"470"), Diff(EQUAL,"; propagationId=null; source=grail."), Diff(DELETE,"compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@4e7e0f9a]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@4e7e0f9a]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@69c4892b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@116f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@386a63a8]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@56194e6"), Diff(INSERT,"geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4"), Diff(EQUAL,"b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"470"), Diff(INSERT,"545"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"56194e6b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@79a6ae1e"), Diff(INSERT,"2f177a4b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"1e2ebcae"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"20"), Diff(INSERT,"95"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"1e2ebcae"), Diff(INSERT,"4278a03f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"75b2fbe0"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"20"), Diff(INSERT,"95"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"75b2fbe0"), Diff(INSERT,"147ed70f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"7a4e4d8"), Diff(INSERT,"61dd02"), Diff(EQUAL,"5]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"425"), Diff(INSERT,"500"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"7a4e4d8"), Diff(INSERT,"61dd02"), Diff(EQUAL,"5]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"69c4892b"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"425"), Diff(INSERT,"500"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"69c4892b"), Diff(INSERT,"124c278f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@1"), Diff(DELETE,"16f8ec4"), Diff(INSERT,"5b204a1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@1"), Diff(DELETE,"16f8ec4"), Diff(INSERT,"5b204a1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@1"), Diff(DELETE,"16f8ec4"), Diff(INSERT,"5b204a1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@1"), Diff(DELETE,"16f8ec4]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cf1804e]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=545; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2cf1804e]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6131d92a"), Diff(INSERT,"5b204a1"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="4127" _type="PauseCommand" date="Mon Jun 21 00:20:54 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16847335">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4384]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4126" _type="ConsoleOutput" date="Mon Jun 21 00:20:54 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16847335" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"grail.compositeFigs.MontyAvatar@65d6b83b¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"545"), Diff(INSERT,"470"), Diff(EQUAL,"; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"95"), Diff(INSERT,"20"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=5"), Diff(DELETE,"95"), Diff(INSERT,"20"), Diff(EQUAL,"; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"500"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue="), Diff(DELETE,"500"), Diff(INSERT,"425"), Diff(EQUAL,"; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]¶")]]]></diff>
  </Command>
  <Command __id="4129" _type="PauseCommand" date="Mon Jun 21 00:21:30 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="16883273">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[35938]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4128" _type="ShellCommand" date="Mon Jun 21 00:21:30 EDT 2021" starttimestamp="1624232406782" timestamp="16883273" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4130" _type="RunCommand" date="Mon Jun 21 00:21:31 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="16884229" type="Debug" />
  <Command __id="4131" _type="RunCommand" date="Mon Jun 21 00:21:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16884229" type="Run" />
  <Command __id="4132" _type="RunCommand" date="Mon Jun 21 00:21:31 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="16884229" type="Debug" />
  <Command __id="4133" _type="RunCommand" date="Mon Jun 21 00:21:31 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16884229" type="Run" />
  <Command __id="4135" _type="PauseCommand" date="Mon Jun 21 00:21:33 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16886364">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2135]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4136" _type="MoveCaretCommand" caretOffset="567" date="Mon Jun 21 00:21:33 EDT 2021" docOffset="942" starttimestamp="1624232406782" timestamp="16886733" />
  <Command __id="4138" _type="PauseCommand" date="Mon Jun 21 00:21:38 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="16891922">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5189]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4137" _type="SelectTextCommand" caretOffset="565" date="Mon Jun 21 00:21:38 EDT 2021" end="565" start="553" starttimestamp="1624232406782" timestamp="16891922" />
  <Command __id="4140" _type="PauseCommand" date="Mon Jun 21 00:21:40 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16893324">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1402]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="4139" _type="CopyCommand" date="Mon Jun 21 00:21:40 EDT 2021" starttimestamp="1624232406782" timestamp="16893324" />
  <Command __id="4142" _type="PauseCommand" date="Mon Jun 21 00:21:42 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16895883">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2559]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4141" _type="SelectTextCommand" caretOffset="741" date="Mon Jun 21 00:21:42 EDT 2021" end="741" start="665" starttimestamp="1624232406782" timestamp="16895883" />
  <Command __id="4143" _type="MoveCaretCommand" caretOffset="739" date="Mon Jun 21 00:21:43 EDT 2021" docOffset="1114" starttimestamp="1624232406782" timestamp="16896358" />
  <Command __id="4144" _type="MoveCaretCommand" caretOffset="738" date="Mon Jun 21 00:21:43 EDT 2021" docOffset="1113" starttimestamp="1624232406782" timestamp="16897153" />
  <Command __id="4146" _type="PasteCommand" date="Mon Jun 21 00:21:44 EDT 2021" starttimestamp="1624232406782" timestamp="16898057" />
  <DocumentChange __id="4048" _type="Insert" date="Mon Jun 21 00:20:12 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1391" docExpressionCount="143" docLength="1398" length="14" offset="928" repeat="14" starttimestamp="1624232406782" timestamp="16806154" timestamp2="16811333">
    <text><![CDATA[true, false)//]]></text>
  </DocumentChange>
  <DocumentChange __id="4083" _type="Insert" date="Mon Jun 21 00:20:21 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1382" docExpressionCount="143" docLength="1400" length="2" offset="950" repeat="2" starttimestamp="1624232406782" timestamp="16814369" timestamp2="16814505">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="4087" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:20:24 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16817334">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="4090" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:20:25 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16818650">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4102" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:20:35 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1382" docExpressionCount="143" docLength="1400" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16828326">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/Alocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.geometryFigs;¶¶import java.beans.PropertyChangeEvent;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.LOCATABLE)¶@PropertyNames({"X", "Y"})¶@EditablePropertyNames({"X", "Y"})¶¶¶public abstract class Alocatable implements Locatable {¶	¶	int x;¶	int y;¶	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	@Override¶	public void setX(int newX) {¶		int oldX = getX();¶		x = newX;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", true, false)"), Diff(DELETE,"); "), Diff(EQUAL,"//oldX,¶		//		newX));¶	}¶	@Override¶	public void setY(int newY) {¶		int oldY = getY();¶		y = newY;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,¶				newY));¶	}¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 ¶		propertySupport.add(aListener);¶	}¶	@Override¶	public List<PropertyChangeListener> getPropertyChangeListeners() {¶		return propertySupport.getPropertyChangeListenerList();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.geometryFigs;

import java.beans.PropertyChangeEvent;

import java.beans.PropertyChangeListener;
import java.util.List;

import util.models.PropertyListenerRegisterer;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.compositeFigs.BridgeSceneFactory;
import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;

@Tags(Comp301Tags.LOCATABLE)
@PropertyNames({"X", "Y"})
@EditablePropertyNames({"X", "Y"})


public abstract class Alocatable implements Locatable {
	
	int x;
	int y;
	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();
	@Override
	public int getX() {
		return x;
	}

	@Override
	public int getY() {
		return y;
	}
	@Override
	public void setX(int newX) {
		int oldX = getX();
		x = newX;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", true, false)//oldX,
		//		newX));
	}
	@Override
	public void setY(int newY) {
		int oldY = getY();
		y = newY;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,
				newY));
	}
	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 
		propertySupport.add(aListener);
	}
	@Override
	public List<PropertyChangeListener> getPropertyChangeListeners() {
		return propertySupport.getPropertyChangeListenerList();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4107" _type="Insert" date="Mon Jun 21 00:20:41 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1402" length="2" offset="940" repeat="2" starttimestamp="1624232406782" timestamp="16834579" timestamp2="16834980">
    <text><![CDATA[);]]></text>
  </DocumentChange>
  <Command __id="4112" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:20:44 EDT 2021" docASTNodeCount="416" docActiveCodeLength="3033" docExpressionCount="298" docLength="6064" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16837920">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/Assignment4.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.io.IOException;¶¶import javax.swing.JFrame;¶¶import AnimationMethods.ABridgeSceneAnimator;¶import AnimationMethods.BridgeSceneAnimator;¶import bus.uigen.OEFrame;¶¶import bus.uigen.ObjectEditor;¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.compositeFigs.FiveChars;¶import grail.compositeFigs.GorgeWithBridge;¶import grail.compositeFigs.MontyAvatar;¶import grail.extras.Buttons;¶import grail.extras.Tables;¶import grail.geometryFigs.RotatingLine;¶import grail.geometryFigs.MovingL;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶//@Tags(Comp301Tags.ROTATING_LINE)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶//@Tags(Comp301Tags.BRIDGE_SCENE)¶¶		¶public class Assignment4 {¶	¶	static final double¶			RADIUS = 400,¶			ANGLE = Math.PI/4,¶			SCALE_BY = 2.5;¶	static final int¶			SLEEP_TIME = 3000,¶			MARCH_T = 1000,¶			X = 0,¶			Y = 0,¶			X_2 = 50,¶			Y_2 = 100,¶			ROTATE_BY = 8,¶			ARM_ROT = 3,¶			MOVE_BY = 20,¶			TALK_LENGTH = 6,¶			ROB_Y = 60,¶			FRAME_WIDTH = 2000,¶			FRAME_HEIGHT = 800;¶	static final String¶			KNIGHTS = "We Beat the Guard!!",¶			GUARD = "Damn it!!",¶			ARTHUR_NAME = "Arthur",¶			GALAHAD_NAME = "Galahad",¶			GUARD_NAME = "Guard",¶			LANCELOT_NAME = "Lancelot",¶			ROBIN_NAME = "Robin";¶			¶¶	public static void main(String[] args) {¶		//animateLine();¶		demonstrateBridgeScene();¶	}¶	public static void animateLine() {¶		MovingL line1 = new RotatingLine(RADIUS, ANGLE, X, Y);¶		OEFrame aFrame = ObjectEditor.edit (line1);¶		line1.rotate(ROTATE_BY);¶		aFrame.refresh();¶		//line1.setX(X_2);¶		//line1.setY(Y_2);¶		aFrame.refresh();¶	}¶	public static void demonstrateBridgeScene() {¶		FiveAvatars montyChars = BridgeSceneFactory.bridgeSceneFactoryMethod();¶//		OEFrame anOEFrame = ObjectEditor.edit(montyChars);¶//    	anOEFrame.showTreePanel();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶		//JFrame frame1 = new JFrame("Monty Scene");¶		//frame1.add((Component) BridgeSceneFactory.observableBridgeScenePainterFactoryMethod());¶		//frame1.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		//BridgeSceneFactory.delegatingBridgeSceneViewFactoryMethod();¶		//frame1.setVisible(true);¶		JFrame frame = new JFrame("Monty Scene");¶		frame.add((Component) BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod(), BorderLayout.CENTER);¶		frame.add(new Buttons(), BorderLayout.NORTH);¶		frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);¶		frame.setVisible(true);¶		Tables<Avatars> aCollection = BridgeSceneFactory.avatarTableFactoryMethod();¶		aCollection.put(ARTHUR_NAME, montyChars.getArthur());¶		aCollection.put(GALAHAD_NAME, montyChars.getGalahad());¶		aCollection.put(GUARD_NAME, montyChars.getGuard());¶		aCollection.put(LANCELOT_NAME, montyChars.getLancelot());¶		aCollection.put(ROBIN_NAME, montyChars.getRobin());¶		System.out.println(aCollection.get(ARTHUR_NAME));¶		BridgeSceneFactory.inheritingBridgeScenePainterFactoryMethod();¶		BridgeSceneFactory.bridgeSceneControllerFactoryMethod();¶//    	montyChars.getArthur().getArms().getLeftLine().rotate();¶//    	montyChars.getGalahad().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getLeftLine().rotate(-ARM_ROT);¶//    	montyChars.getArthur().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getGalahad().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getLancelot().getArms().getRightLine().rotate(-ARM_ROT);¶//    	montyChars.getRobin().getArms().getRightLine().rotate(-ARM_ROT);¶    //	anOEFrame.refresh();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//montyChars.approach("Robin");¶    	//anOEFrame.refresh();¶    	//ThreadSupport.sleep(SLEEP_TIME);¶    	montyChars.approach(montyChars.getArthur());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶    	//anOEFrame.refresh();¶    	//montyChars.scroll(X_2, Y_2);¶    	//int i = 0;¶    	//while(i < TALK_LENGTH) {¶    	//	ThreadSupport.sleep(MARCH_T);¶    	//	montyChars.say("What is the velocity of a gazeel?");¶    		//anOEFrame.refresh();¶    	//	i++;¶    	//}¶//    	montyChars.passed();¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.say(KNIGHTS);¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.approach(montyChars.getLancelot());¶//    	ThreadSupport.sleep(SLEEP_TIME);¶//    	montyChars.failed();¶//    	montyChars.waitingArthur();¶//    	montyChars.waitingGalahad();¶//    	montyChars.waitingLancelot();¶//    	montyChars.waitingRobin();¶//    	montyChars.asynchronousArthur();¶//    	montyChars.asynchronousGalahad();¶//    	montyChars.asynchronousLancelot();¶//    	montyChars.asynchronousRobin();¶//    	montyChars.asynchronousGuard();¶    	//montyChars.startAnimation();¶    ¶    	//animator.animateAvatar(montyChars.getRobin());¶    	//montyChars.getArthur().getLegs().getLeftLine().rotate(-16);¶    	//montyChars.getRobin().getStringShape().setText("Damn");¶    	//anOEFrame.refresh();¶    	¶    	//int i = X;¶    	//while (i < MOVE_BY) {¶    	//ThreadSupport.sleep(MARCH_T);¶    	//montyChars.getArthur().move(MOVE_BY, Y);¶    	//montyChars.getGalahad().move(MOVE_BY, Y);¶    	//montyChars.getLancelot().move(MOVE_BY, Y);¶    	//montyChars.getRobin().move(MOVE_BY, Y);¶    	//anOEFrame.refresh();¶    	//i++;¶    	//}¶    	//montyChars.getLancelot().move(X, MOVE_BY);¶    	//montyChars.getGalahad().move(X, MOVE_BY);¶    	//montyChars.getRobin().move(X, ROB_Y);¶    	//montyChars.getRobin().scale(SCALE_BY);¶    	//montyChars.getArthur().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGalahad().getStringShape().setText(KNIGHTS);¶    	//montyChars.getLancelot().getStringShape().setText(KNIGHTS);¶    	//montyChars.getRobin().getStringShape().setText(KNIGHTS);¶    	//montyChars.getGuard().getStringShape().setText(GUARD);¶    	//anOEFrame.refresh();¶    	¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4134" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:21:33 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1384" docExpressionCount="143" docLength="1402" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16886364">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/Alocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.geometryFigs;¶¶import java.beans.PropertyChangeEvent;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶import grail.MVC.AnObservableHelper;¶import grail.MVC.ObservableHelp;¶import grail.compositeFigs.BridgeSceneFactory;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.LOCATABLE)¶@PropertyNames({"X", "Y"})¶@EditablePropertyNames({"X", "Y"})¶¶¶public abstract class Alocatable implements Locatable {¶	¶	int x;¶	int y;¶	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	@Override¶	public void setX(int newX) {¶		int oldX = getX();¶		x = newX;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", true, false)"), Diff(INSERT,");"), Diff(EQUAL,"//oldX,¶		//		newX));¶	}¶	@Override¶	public void setY(int newY) {¶		int oldY = getY();¶		y = newY;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,¶				newY));¶	}¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 ¶		propertySupport.add(aListener);¶	}¶	@Override¶	public List<PropertyChangeListener> getPropertyChangeListeners() {¶		return propertySupport.getPropertyChangeListenerList();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.geometryFigs;

import java.beans.PropertyChangeEvent;

import java.beans.PropertyChangeListener;
import java.util.List;

import util.models.PropertyListenerRegisterer;
import grail.MVC.AnObservableHelper;
import grail.MVC.ObservableHelp;
import grail.compositeFigs.BridgeSceneFactory;
import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;

@Tags(Comp301Tags.LOCATABLE)
@PropertyNames({"X", "Y"})
@EditablePropertyNames({"X", "Y"})


public abstract class Alocatable implements Locatable {
	
	int x;
	int y;
	ObservableHelp propertySupport = BridgeSceneFactory.helperFactoryMethod();
	@Override
	public int getX() {
		return x;
	}

	@Override
	public int getY() {
		return y;
	}
	@Override
	public void setX(int newX) {
		int oldX = getX();
		x = newX;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "X", true, false));//oldX,
		//		newX));
	}
	@Override
	public void setY(int newY) {
		int oldY = getY();
		y = newY;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Y", oldY,
				newY));
	}
	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {	 
		propertySupport.add(aListener);
	}
	@Override
	public List<PropertyChangeListener> getPropertyChangeListeners() {
		return propertySupport.getPropertyChangeListenerList();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4145" _type="Insert" date="Mon Jun 21 00:21:44 EDT 2021" docASTNodeCount="218" docActiveCodeLength="1396" docExpressionCount="144" docLength="1414" length="12" offset="1113" starttimestamp="1624232406782" timestamp="16898050">
    <text><![CDATA[true, false)]]></text>
  </DocumentChange>
  <Command __id="4148" _type="PauseCommand" date="Mon Jun 21 00:21:47 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16900408">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2351]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4149" _type="InsertStringCommand" date="Mon Jun 21 00:21:47 EDT 2021" starttimestamp="1624232406782" timestamp="16900416" timestamp2="16900416">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4150" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:21:47 EDT 2021" starttimestamp="1624232406782" timestamp="16900771" />
  <Command __id="4151" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:21:48 EDT 2021" starttimestamp="1624232406782" timestamp="16901355" />
  <Command __id="4154" _type="PauseCommand" date="Mon Jun 21 00:21:49 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16902376">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1021]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4153" _type="InsertStringCommand" date="Mon Jun 21 00:21:49 EDT 2021" starttimestamp="1624232406782" timestamp="16902376" timestamp2="16902376">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4156" _type="InsertStringCommand" date="Mon Jun 21 00:21:49 EDT 2021" starttimestamp="1624232406782" timestamp="16902778" timestamp2="16902778">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4158" _type="PauseCommand" date="Mon Jun 21 00:21:51 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="16904956">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2178]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4159" _type="InsertStringCommand" date="Mon Jun 21 00:21:51 EDT 2021" starttimestamp="1624232406782" timestamp="16904961" timestamp2="16904961">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4161" _type="InsertStringCommand" date="Mon Jun 21 00:21:51 EDT 2021" starttimestamp="1624232406782" timestamp="16905118" timestamp2="16905118">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4163" _type="PauseCommand" date="Mon Jun 21 00:21:53 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16906967">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1849]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4162" _type="MoveCaretCommand" caretOffset="764" date="Mon Jun 21 00:21:53 EDT 2021" docOffset="1139" starttimestamp="1624232406782" timestamp="16906967" />
  <Command __id="4165" _type="InsertStringCommand" date="Mon Jun 21 00:21:54 EDT 2021" starttimestamp="1624232406782" timestamp="16907951" timestamp2="16907951">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4167" _type="InsertStringCommand" date="Mon Jun 21 00:21:54 EDT 2021" starttimestamp="1624232406782" timestamp="16908106" timestamp2="16908106">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4169" _type="PauseCommand" date="Mon Jun 21 00:22:08 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="16921481">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[13375]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4170" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:22:08 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="16921630" />
  <Command __id="4172" _type="PauseCommand" date="Mon Jun 21 00:22:09 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16922997">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1367]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4171" _type="ShellCommand" date="Mon Jun 21 00:22:09 EDT 2021" starttimestamp="1624232406782" timestamp="16922997" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4174" _type="PauseCommand" date="Mon Jun 21 00:22:11 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16924748">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1751]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4173" _type="ShellCommand" date="Mon Jun 21 00:22:11 EDT 2021" starttimestamp="1624232406782" timestamp="16924748" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4175" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:22:11 EDT 2021" starttimestamp="1624232406782" timestamp="16924877" />
  <Command __id="4176" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:22:11 EDT 2021" starttimestamp="1624232406782" timestamp="16924904" />
  <Command __id="4177" _type="RunCommand" date="Mon Jun 21 00:22:11 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16924980" type="Run" />
  <Command __id="4178" _type="RunCommand" date="Mon Jun 21 00:22:11 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16924980" type="Run" />
  <Command __id="4179" _type="ShellCommand" date="Mon Jun 21 00:22:12 EDT 2021" starttimestamp="1624232406782" timestamp="16925855" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4181" _type="PauseCommand" date="Mon Jun 21 00:22:21 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="16934921">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9066]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4180" _type="ConsoleOutput" date="Mon Jun 21 00:22:21 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16934921" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Jun 21 00:22:21 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@27ae2fd0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@29176cc1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=470; newValue=470; propagationId=null; source=grail.geometryFigs.RotatingLine@2f177a4b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@4278a03f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=520; newValue=520; propagationId=null; source=grail.geometryFigs.RestrictedLine@147ed70f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.CharHeads@61dd025]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=425; newValue=425; propagationId=null; source=grail.geometryFigs.MontyString@124c278f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@15b204a1]"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Jun 21 00:22:21 EDT 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4183" _type="PauseCommand" date="Mon Jun 21 00:22:23 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16936787">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1866]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4182" _type="ConsoleOutput" date="Mon Jun 21 00:22:23 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16936787" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:123
Running second pass checks Mon Jun 21 00:22:23 EDT 2021
Start O(n2) inter- and intra class method calls:Mon Jun 21 00:22:23 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:123¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Mon Jun 21 00:22:2"), Diff(DELETE,"1"), Diff(INSERT,"3 EDT 2021¶Start O(n2) inter- and intra class method calls:Mon Jun 21 00:22:23"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4184" _type="ConsoleOutput" date="Mon Jun 21 00:22:23 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16936922" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Mon Jun 21 00:22:23 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:123¶Running second pass checks Mon Jun 21 00:22:23 EDT 2021¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Mon Jun 21 00:22:23 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4186" _type="PauseCommand" date="Mon Jun 21 00:22:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="16938286">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1364]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4185" _type="ConsoleOutput" date="Mon Jun 21 00:22:25 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16938286" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Jun 21 00:22:25 EDT 2021
Generating checks:Mon Jun 21 00:22:25 EDT 2021
Finished Generating checks:Mon Jun 21 00:22:25 EDT 2021
Generating externals:Mon Jun 21 00:22:25 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Mon Jun 21 00:22:25 EDT 2021¶Generating checks:Mon Jun 21 00:22:25 EDT 2021¶Finished Generating checks:Mon Jun 21 00:22:25 EDT 2021¶Generating externa"), Diff(EQUAL,"ls:Mon Jun 21 00:22:2"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4187" _type="ConsoleOutput" date="Mon Jun 21 00:22:25 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16938636" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Jun 21 00:22:25 EDT 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass checks:Mon Jun 21 00:22:25 EDT 2021¶Generating checks:Mon Jun 21 00:22:25 EDT 2021¶Finished Generating checks:Mon Jun 21 00:22:25 EDT 2021¶"), Diff(EQUAL,"Generating externals:Mon Jun 21 00:22:25 EDT 2021¶")]]]></diff>
  </Command>
  <Command __id="4188" _type="ConsoleOutput" date="Mon Jun 21 00:22:25 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="16939191" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@566962f]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@51de871d]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@51de871d]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@566962f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@626910e8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@626910e8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@530f3564]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Jun 21 00:22:25 EDT 2021"), Diff(INSERT,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@566962f]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@51de871d]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@51de871d]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@566962f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ab869b]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@156a48b9]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2c56cdb3]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@194ae3bb]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@420e2157]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@72c3e6c]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@566962f]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@43c0d70b]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@626910e8]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@626910e8]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@530f3564]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4190" _type="PauseCommand" date="Mon Jun 21 00:24:32 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="17065672">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[126481]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4189" _type="ShellCommand" date="Mon Jun 21 00:24:32 EDT 2021" starttimestamp="1624232406782" timestamp="17065672" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4192" _type="PauseCommand" date="Mon Jun 21 00:24:49 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="17082220">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16548]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4191" _type="ShellCommand" date="Mon Jun 21 00:24:49 EDT 2021" starttimestamp="1624232406782" timestamp="17082220" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4194" _type="PauseCommand" date="Mon Jun 21 00:24:56 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17089410">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7190]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4193" _type="ShellCommand" date="Mon Jun 21 00:24:56 EDT 2021" starttimestamp="1624232406782" timestamp="17089410" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4196" _type="PauseCommand" date="Mon Jun 21 00:27:20 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="17233667">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[144257]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4195" _type="ShellCommand" date="Mon Jun 21 00:27:20 EDT 2021" starttimestamp="1624232406782" timestamp="17233667" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4198" _type="PauseCommand" date="Mon Jun 21 00:27:26 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17239472">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5805]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4197" _type="ShellCommand" date="Mon Jun 21 00:27:26 EDT 2021" starttimestamp="1624232406782" timestamp="17239472" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4200" _type="MoveCaretCommand" caretOffset="3785" date="Mon Jun 21 00:27:26 EDT 2021" docOffset="4350" starttimestamp="1624232406782" timestamp="17239709" />
  <Command __id="4202" _type="PauseCommand" date="Mon Jun 21 00:27:33 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17246279">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6570]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4201" _type="MoveCaretCommand" caretOffset="3357" date="Mon Jun 21 00:27:33 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="17246279" />
  <Command __id="4203" _type="MoveCaretCommand" caretOffset="3357" date="Mon Jun 21 00:27:33 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="17246280" />
  <Command __id="4205" _type="PauseCommand" date="Mon Jun 21 00:27:34 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17248125">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1845]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:34 EDT 2021" starttimestamp="1624232406782" timestamp="17248131" />
  <Command __id="4207" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:34 EDT 2021" starttimestamp="1624232406782" timestamp="17248131" />
  <Command __id="4209" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:35 EDT 2021" starttimestamp="1624232406782" timestamp="17248328" />
  <Command __id="4210" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:35 EDT 2021" starttimestamp="1624232406782" timestamp="17248328" />
  <Command __id="4212" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:35 EDT 2021" starttimestamp="1624232406782" timestamp="17248570" />
  <Command __id="4213" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:35 EDT 2021" starttimestamp="1624232406782" timestamp="17248570" />
  <Command __id="4215" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:35 EDT 2021" starttimestamp="1624232406782" timestamp="17249071" />
  <Command __id="4216" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:35 EDT 2021" starttimestamp="1624232406782" timestamp="17249071" />
  <Command __id="4218" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:36 EDT 2021" starttimestamp="1624232406782" timestamp="17249886" />
  <Command __id="4219" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:36 EDT 2021" starttimestamp="1624232406782" timestamp="17249886" />
  <Command __id="4221" _type="InsertStringCommand" date="Mon Jun 21 00:27:37 EDT 2021" starttimestamp="1624232406782" timestamp="17250663" timestamp2="17250663">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4222" _type="InsertStringCommand" date="Mon Jun 21 00:27:37 EDT 2021" starttimestamp="1624232406782" timestamp="17250663" timestamp2="17250663">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4224" _type="InsertStringCommand" date="Mon Jun 21 00:27:37 EDT 2021" starttimestamp="1624232406782" timestamp="17250871" timestamp2="17250871">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4225" _type="InsertStringCommand" date="Mon Jun 21 00:27:37 EDT 2021" starttimestamp="1624232406782" timestamp="17250871" timestamp2="17250871">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4227" _type="InsertStringCommand" date="Mon Jun 21 00:27:38 EDT 2021" starttimestamp="1624232406782" timestamp="17251389" timestamp2="17251389">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4228" _type="InsertStringCommand" date="Mon Jun 21 00:27:38 EDT 2021" starttimestamp="1624232406782" timestamp="17251389" timestamp2="17251389">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4230" _type="InsertStringCommand" date="Mon Jun 21 00:27:38 EDT 2021" starttimestamp="1624232406782" timestamp="17251742" timestamp2="17251742">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4231" _type="InsertStringCommand" date="Mon Jun 21 00:27:38 EDT 2021" starttimestamp="1624232406782" timestamp="17251742" timestamp2="17251742">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4233" _type="PauseCommand" date="Mon Jun 21 00:27:41 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17254412">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2670]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4232" _type="MoveCaretCommand" caretOffset="3404" date="Mon Jun 21 00:27:41 EDT 2021" docOffset="3969" starttimestamp="1624232406782" timestamp="17254412" />
  <Command __id="4234" _type="MoveCaretCommand" caretOffset="3404" date="Mon Jun 21 00:27:41 EDT 2021" docOffset="3969" starttimestamp="1624232406782" timestamp="17254414" />
  <Command __id="4236" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:42 EDT 2021" starttimestamp="1624232406782" timestamp="17255258" />
  <Command __id="4237" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:42 EDT 2021" starttimestamp="1624232406782" timestamp="17255258" />
  <Command __id="4239" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:42 EDT 2021" starttimestamp="1624232406782" timestamp="17255666" />
  <Command __id="4240" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:42 EDT 2021" starttimestamp="1624232406782" timestamp="17255666" />
  <Command __id="4242" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:42 EDT 2021" starttimestamp="1624232406782" timestamp="17256162" />
  <Command __id="4243" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:42 EDT 2021" starttimestamp="1624232406782" timestamp="17256162" />
  <Command __id="4245" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:43 EDT 2021" starttimestamp="1624232406782" timestamp="17256748" />
  <Command __id="4246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:27:43 EDT 2021" starttimestamp="1624232406782" timestamp="17256748" />
  <Command __id="4248" _type="InsertStringCommand" date="Mon Jun 21 00:27:44 EDT 2021" starttimestamp="1624232406782" timestamp="17257669" timestamp2="17257669">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4249" _type="InsertStringCommand" date="Mon Jun 21 00:27:44 EDT 2021" starttimestamp="1624232406782" timestamp="17257669" timestamp2="17257669">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4251" _type="InsertStringCommand" date="Mon Jun 21 00:27:44 EDT 2021" starttimestamp="1624232406782" timestamp="17258007" timestamp2="17258007">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4252" _type="InsertStringCommand" date="Mon Jun 21 00:27:44 EDT 2021" starttimestamp="1624232406782" timestamp="17258007" timestamp2="17258007">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4254" _type="InsertStringCommand" date="Mon Jun 21 00:27:45 EDT 2021" starttimestamp="1624232406782" timestamp="17258680" timestamp2="17258680">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4255" _type="InsertStringCommand" date="Mon Jun 21 00:27:45 EDT 2021" starttimestamp="1624232406782" timestamp="17258680" timestamp2="17258680">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4257" _type="InsertStringCommand" date="Mon Jun 21 00:27:45 EDT 2021" starttimestamp="1624232406782" timestamp="17259084" timestamp2="17259084">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4258" _type="InsertStringCommand" date="Mon Jun 21 00:27:45 EDT 2021" starttimestamp="1624232406782" timestamp="17259084" timestamp2="17259084">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4260" _type="InsertStringCommand" date="Mon Jun 21 00:27:45 EDT 2021" starttimestamp="1624232406782" timestamp="17259128" timestamp2="17259128">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4261" _type="InsertStringCommand" date="Mon Jun 21 00:27:45 EDT 2021" starttimestamp="1624232406782" timestamp="17259128" timestamp2="17259128">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4263" _type="PauseCommand" date="Mon Jun 21 00:28:01 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="17274741">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[15613]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4264" _type="UndoCommand" date="Mon Jun 21 00:28:01 EDT 2021" starttimestamp="1624232406782" timestamp="17274746" />
  <Command __id="4266" _type="UndoCommand" date="Mon Jun 21 00:28:02 EDT 2021" starttimestamp="1624232406782" timestamp="17275620" />
  <Command __id="4268" _type="PauseCommand" date="Mon Jun 21 00:28:03 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17276878">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1258]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4269" _type="UndoCommand" date="Mon Jun 21 00:28:03 EDT 2021" starttimestamp="1624232406782" timestamp="17276884" />
  <Command __id="4271" _type="UndoCommand" date="Mon Jun 21 00:28:04 EDT 2021" starttimestamp="1624232406782" timestamp="17277699" />
  <Command __id="4273" _type="PauseCommand" date="Mon Jun 21 00:28:12 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17285392">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[7693]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4272" _type="MoveCaretCommand" caretOffset="3536" date="Mon Jun 21 00:28:12 EDT 2021" docOffset="4101" starttimestamp="1624232406782" timestamp="17285392" />
  <Command __id="4274" _type="MoveCaretCommand" caretOffset="3536" date="Mon Jun 21 00:28:12 EDT 2021" docOffset="4101" starttimestamp="1624232406782" timestamp="17285392" />
  <Command __id="4276" _type="PauseCommand" date="Mon Jun 21 00:28:16 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17289884">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4492]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4275" _type="MoveCaretCommand" caretOffset="3549" date="Mon Jun 21 00:28:16 EDT 2021" docOffset="4114" starttimestamp="1624232406782" timestamp="17289884" />
  <Command __id="4277" _type="MoveCaretCommand" caretOffset="3549" date="Mon Jun 21 00:28:16 EDT 2021" docOffset="4114" starttimestamp="1624232406782" timestamp="17289885" />
  <Command __id="4279" _type="InsertStringCommand" date="Mon Jun 21 00:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="17290860" timestamp2="17290860">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4280" _type="InsertStringCommand" date="Mon Jun 21 00:28:17 EDT 2021" starttimestamp="1624232406782" timestamp="17290860" timestamp2="17290860">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4282" _type="PauseCommand" date="Mon Jun 21 00:28:19 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17292429">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1569]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17292432" />
  <Command __id="4284" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17292432" />
  <Command __id="4286" _type="InsertStringCommand" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17292748" timestamp2="17292748">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4287" _type="InsertStringCommand" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17292748" timestamp2="17292748">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4289" _type="InsertStringCommand" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17292879" timestamp2="17292879">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4290" _type="InsertStringCommand" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17292879" timestamp2="17292879">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4292" _type="InsertStringCommand" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17293059" timestamp2="17293059">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4293" _type="InsertStringCommand" date="Mon Jun 21 00:28:19 EDT 2021" starttimestamp="1624232406782" timestamp="17293059" timestamp2="17293059">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4295" _type="InsertStringCommand" date="Mon Jun 21 00:28:20 EDT 2021" starttimestamp="1624232406782" timestamp="17293289" timestamp2="17293289">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4296" _type="InsertStringCommand" date="Mon Jun 21 00:28:20 EDT 2021" starttimestamp="1624232406782" timestamp="17293290" timestamp2="17293290">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4298" _type="PauseCommand" date="Mon Jun 21 00:28:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17295713">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2423]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4299" _type="InsertStringCommand" date="Mon Jun 21 00:28:22 EDT 2021" starttimestamp="1624232406782" timestamp="17295718" timestamp2="17295718">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4300" _type="InsertStringCommand" date="Mon Jun 21 00:28:22 EDT 2021" starttimestamp="1624232406782" timestamp="17295718" timestamp2="17295718">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4302" _type="PauseCommand" date="Mon Jun 21 00:28:24 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17298018">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2300]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4301" _type="MoveCaretCommand" caretOffset="3591" date="Mon Jun 21 00:28:24 EDT 2021" docOffset="4156" starttimestamp="1624232406782" timestamp="17298018" />
  <Command __id="4303" _type="MoveCaretCommand" caretOffset="3591" date="Mon Jun 21 00:28:24 EDT 2021" docOffset="4156" starttimestamp="1624232406782" timestamp="17298018" />
  <DocumentChange __id="4147" _type="Insert" date="Mon Jun 21 00:21:47 EDT 2021" docASTNodeCount="221" docActiveCodeLength="1399" docExpressionCount="146" docLength="1417" length="3" offset="1125" repeat="3" starttimestamp="1624232406782" timestamp="16900408" timestamp2="16902774">
    <text><![CDATA[); ]]></text>
  </DocumentChange>
  <DocumentChange __id="4157" _type="Insert" date="Mon Jun 21 00:21:51 EDT 2021" docASTNodeCount="220" docActiveCodeLength="1394" docExpressionCount="145" docLength="1419" length="2" offset="1128" repeat="2" starttimestamp="1624232406782" timestamp="16904956" timestamp2="16905113">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="4164" _type="Insert" date="Mon Jun 21 00:21:54 EDT 2021" docASTNodeCount="217" docActiveCodeLength="1386" docExpressionCount="143" docLength="1421" length="2" offset="1139" repeat="2" starttimestamp="1624232406782" timestamp="16907949" timestamp2="16908103">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="4168" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:22:08 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="16921481">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="4199" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:27:26 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="468" docLength="4358" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17239526">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		aBridgeScene.addPropertyChangeListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				else{buttons.getApproach().setEnabled(true);}¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4204" _type="Delete" date="Mon Jun 21 00:27:34 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4253" docExpressionCount="467" docLength="4353" endLine="156" length="5" offset="3917" repeat="5" startLine="156" starttimestamp="1624232406782" timestamp="17248125" timestamp2="17249882">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <DocumentChange __id="4220" _type="Insert" date="Mon Jun 21 00:27:37 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4257" docExpressionCount="468" docLength="4357" length="4" offset="3917" repeat="4" starttimestamp="1624232406782" timestamp="17250660" timestamp2="17251740">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="4235" _type="Delete" date="Mon Jun 21 00:27:42 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4253" docExpressionCount="467" docLength="4353" endLine="158" length="4" offset="3965" repeat="4" startLine="158" starttimestamp="1624232406782" timestamp="17255256" timestamp2="17256744">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="4247" _type="Insert" date="Mon Jun 21 00:27:44 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="468" docLength="4358" length="5" offset="3965" repeat="5" starttimestamp="1624232406782" timestamp="17257664" timestamp2="17259125">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <DocumentChange __id="4262" _type="Delete" date="Mon Jun 21 00:28:01 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4253" docExpressionCount="467" docLength="4353" endLine="158" length="5" offset="3965" startLine="158" starttimestamp="1624232406782" timestamp="17274741">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <DocumentChange __id="4265" _type="Insert" date="Mon Jun 21 00:28:02 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4257" docExpressionCount="468" docLength="4357" length="4" offset="3965" starttimestamp="1624232406782" timestamp="17275618">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="4267" _type="Delete" date="Mon Jun 21 00:28:03 EDT 2021" docASTNodeCount="669" docActiveCodeLength="4253" docExpressionCount="467" docLength="4353" endLine="156" length="4" offset="3917" startLine="156" starttimestamp="1624232406782" timestamp="17276878">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="4270" _type="Insert" date="Mon Jun 21 00:28:04 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="468" docLength="4358" length="5" offset="3917" starttimestamp="1624232406782" timestamp="17277696">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <DocumentChange __id="4278" _type="Insert" date="Mon Jun 21 00:28:17 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4259" docExpressionCount="468" docLength="4359" length="1" offset="4114" starttimestamp="1624232406782" timestamp="17290857">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="4281" _type="Delete" date="Mon Jun 21 00:28:19 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="468" docLength="4358" endLine="164" length="1" offset="4114" startLine="164" starttimestamp="1624232406782" timestamp="17292429">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="4285" _type="Insert" date="Mon Jun 21 00:28:19 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4261" docExpressionCount="468" docLength="4361" length="3" offset="4114" repeat="3" starttimestamp="1624232406782" timestamp="17292744" timestamp2="17293056">
    <text><![CDATA[els]]></text>
  </DocumentChange>
  <DocumentChange __id="4294" _type="Replace" date="Mon Jun 21 00:28:20 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4262" docExpressionCount="468" docLength="4362" endLine="164" insertionLength="8" int_docASTNodeCount="670" int_docActiveCodeLength="4254" int_docExpressionCount="468" int_docLength="4354" length="7" offset="4110" startLine="164" starttimestamp="1624232406782" timestamp="17293286">
    <deletedText><![CDATA[				els]]></deletedText>
    <insertedText><![CDATA[				else]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4297" _type="Insert" date="Mon Jun 21 00:28:22 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4263" docExpressionCount="468" docLength="4363" length="1" offset="4118" starttimestamp="1624232406782" timestamp="17295713">
    <text><![CDATA[{]]></text>
  </DocumentChange>
  <DocumentChange __id="4307" _type="Delete" date="Mon Jun 21 00:28:47 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="467" docLength="4358" endLine="162" length="5" offset="4096" repeat="5" startLine="162" starttimestamp="1624232406782" timestamp="17320850" timestamp2="17322216">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <Command __id="4305" _type="PauseCommand" date="Mon Jun 21 00:28:46 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="17320099">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[22081]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4304" _type="MoveCaretCommand" caretOffset="3536" date="Mon Jun 21 00:28:46 EDT 2021" docOffset="4101" starttimestamp="1624232406782" timestamp="17320099" />
  <Command __id="4306" _type="MoveCaretCommand" caretOffset="3536" date="Mon Jun 21 00:28:46 EDT 2021" docOffset="4101" starttimestamp="1624232406782" timestamp="17320099" />
  <Command __id="4308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:47 EDT 2021" starttimestamp="1624232406782" timestamp="17320854" />
  <Command __id="4309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:47 EDT 2021" starttimestamp="1624232406782" timestamp="17320854" />
  <Command __id="4311" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:47 EDT 2021" starttimestamp="1624232406782" timestamp="17321055" />
  <Command __id="4312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:47 EDT 2021" starttimestamp="1624232406782" timestamp="17321055" />
  <Command __id="4314" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:48 EDT 2021" starttimestamp="1624232406782" timestamp="17321410" />
  <Command __id="4315" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:48 EDT 2021" starttimestamp="1624232406782" timestamp="17321410" />
  <Command __id="4317" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:48 EDT 2021" starttimestamp="1624232406782" timestamp="17321662" />
  <Command __id="4318" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:48 EDT 2021" starttimestamp="1624232406782" timestamp="17321662" />
  <Command __id="4320" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17322220" />
  <Command __id="4321" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17322221" />
  <Command __id="4323" _type="InsertStringCommand" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17322693" timestamp2="17322693">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4324" _type="InsertStringCommand" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17322693" timestamp2="17322693">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4326" _type="InsertStringCommand" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17322941" timestamp2="17322941">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4327" _type="InsertStringCommand" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17322941" timestamp2="17322941">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4329" _type="InsertStringCommand" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17323046" timestamp2="17323046">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4330" _type="InsertStringCommand" date="Mon Jun 21 00:28:49 EDT 2021" starttimestamp="1624232406782" timestamp="17323046" timestamp2="17323046">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4333" _type="PauseCommand" date="Mon Jun 21 00:28:50 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17324071">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1025]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4332" _type="InsertStringCommand" date="Mon Jun 21 00:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="17324071" timestamp2="17324071">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4334" _type="InsertStringCommand" date="Mon Jun 21 00:28:50 EDT 2021" starttimestamp="1624232406782" timestamp="17324071" timestamp2="17324071">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4336" _type="PauseCommand" date="Mon Jun 21 00:28:52 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17325446">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1374]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4335" _type="MoveCaretCommand" caretOffset="3588" date="Mon Jun 21 00:28:52 EDT 2021" docOffset="4153" starttimestamp="1624232406782" timestamp="17325445" />
  <Command __id="4337" _type="MoveCaretCommand" caretOffset="3588" date="Mon Jun 21 00:28:52 EDT 2021" docOffset="4153" starttimestamp="1624232406782" timestamp="17325447" />
  <Command __id="4339" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:52 EDT 2021" starttimestamp="1624232406782" timestamp="17326187" />
  <Command __id="4340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:52 EDT 2021" starttimestamp="1624232406782" timestamp="17326187" />
  <Command __id="4342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="17326360" />
  <Command __id="4343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="17326360" />
  <Command __id="4345" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="17326520" />
  <Command __id="4346" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="17326521" />
  <Command __id="4348" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="17327063" />
  <Command __id="4349" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:28:53 EDT 2021" starttimestamp="1624232406782" timestamp="17327063" />
  <Command __id="4351" _type="InsertStringCommand" date="Mon Jun 21 00:28:54 EDT 2021" starttimestamp="1624232406782" timestamp="17327917" timestamp2="17327917">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4352" _type="InsertStringCommand" date="Mon Jun 21 00:28:54 EDT 2021" starttimestamp="1624232406782" timestamp="17327917" timestamp2="17327917">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4354" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328278" timestamp2="17328278">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4355" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328278" timestamp2="17328278">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4357" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328457" timestamp2="17328457">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4358" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328457" timestamp2="17328457">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4360" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328682" timestamp2="17328682">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4361" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328682" timestamp2="17328682">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4363" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328952" timestamp2="17328952">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4364" _type="InsertStringCommand" date="Mon Jun 21 00:28:55 EDT 2021" starttimestamp="1624232406782" timestamp="17328952" timestamp2="17328952">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4366" _type="PauseCommand" date="Mon Jun 21 00:29:02 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17335313">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6361]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4367" _type="InsertStringCommand" date="Mon Jun 21 00:29:02 EDT 2021" starttimestamp="1624232406782" timestamp="17335318" timestamp2="17335318">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4368" _type="InsertStringCommand" date="Mon Jun 21 00:29:02 EDT 2021" starttimestamp="1624232406782" timestamp="17335318" timestamp2="17335318">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4370" _type="PauseCommand" date="Mon Jun 21 00:29:03 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17336843">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1525]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4371" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:29:03 EDT 2021" starttimestamp="1624232406782" timestamp="17336846" />
  <Command __id="4372" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:29:03 EDT 2021" starttimestamp="1624232406782" timestamp="17336846" />
  <Command __id="4373" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:29:04 EDT 2021" starttimestamp="1624232406782" timestamp="17337485" />
  <Command __id="4374" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:29:04 EDT 2021" starttimestamp="1624232406782" timestamp="17337485" />
  <Command __id="4375" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:29:04 EDT 2021" starttimestamp="1624232406782" timestamp="17337653" />
  <Command __id="4376" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:29:04 EDT 2021" starttimestamp="1624232406782" timestamp="17337653" />
  <Command __id="4382" _type="PauseCommand" date="Mon Jun 21 00:29:14 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17347688">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6518]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="4381" _type="RunCommand" date="Mon Jun 21 00:29:14 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17347688" type="Debug" />
  <Command __id="4383" _type="RunCommand" date="Mon Jun 21 00:29:14 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17347688" type="Run" />
  <Command __id="4384" _type="RunCommand" date="Mon Jun 21 00:29:14 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17347688" type="Debug" />
  <Command __id="4385" _type="RunCommand" date="Mon Jun 21 00:29:14 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17347688" type="Run" />
  <Command __id="4387" _type="PauseCommand" date="Mon Jun 21 00:29:18 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17351864">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[4176]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4388" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:29:18 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="17351981" />
  <Command __id="4390" _type="PauseCommand" date="Mon Jun 21 00:29:20 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17353905">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1924]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4389" _type="ShellCommand" date="Mon Jun 21 00:29:20 EDT 2021" starttimestamp="1624232406782" timestamp="17353905" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4392" _type="PauseCommand" date="Mon Jun 21 00:29:22 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17355700">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1795]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4391" _type="ShellCommand" date="Mon Jun 21 00:29:22 EDT 2021" starttimestamp="1624232406782" timestamp="17355700" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4393" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:29:22 EDT 2021" starttimestamp="1624232406782" timestamp="17355839" />
  <Command __id="4394" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:29:22 EDT 2021" starttimestamp="1624232406782" timestamp="17355866" />
  <Command __id="4395" _type="RunCommand" date="Mon Jun 21 00:29:22 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17355975" type="Run" />
  <Command __id="4396" _type="RunCommand" date="Mon Jun 21 00:29:22 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17355975" type="Run" />
  <Command __id="4397" _type="ShellCommand" date="Mon Jun 21 00:29:23 EDT 2021" starttimestamp="1624232406782" timestamp="17356444" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4399" _type="PauseCommand" date="Mon Jun 21 00:29:32 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17366180">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9735]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4398" _type="ConsoleOutput" date="Mon Jun 21 00:29:32 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="17366179" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@1df39e7c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@1df39e7c]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
in precondition
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7ab869b"), Diff(INSERT,"5c960239"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7ab869b"), Diff(INSERT,"5c960239"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@15"), Diff(DELETE,"6a48b9"), Diff(INSERT,"15c3b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@15"), Diff(DELETE,"6a48b9"), Diff(INSERT,"15c3b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2c56cdb3"), Diff(INSERT,"7ba1dd09"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2c56cdb3"), Diff(INSERT,"7ba1dd09"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"194ae3bb"), Diff(INSERT,"6837e804"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"194ae3bb"), Diff(INSERT,"6837e804"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4"), Diff(DELETE,"20e2157"), Diff(INSERT,"5cb8f1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4"), Diff(DELETE,"20e2157"), Diff(INSERT,"5cb8f1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7"), Diff(DELETE,"2c3e6c"), Diff(INSERT,"6ae0dd1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7"), Diff(DELETE,"2c3e6c"), Diff(INSERT,"6ae0dd1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"566962f"), Diff(INSERT,"3f6fe39b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"566962f"), Diff(INSERT,"3f6fe39b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"566962f"), Diff(INSERT,"3f6fe39b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"5"), Diff(EQUAL,"1d"), Diff(DELETE,"e871d"), Diff(INSERT,"f39e7c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=Quest?; newValue=; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"5"), Diff(EQUAL,"1d"), Diff(DELETE,"e871d"), Diff(INSERT,"f39e7c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=; newValue=Grail; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"566962f"), Diff(INSERT,"3f6fe39b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7ab869b"), Diff(INSERT,"5c960239"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7ab869b"), Diff(INSERT,"5c960239"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@15"), Diff(DELETE,"6a48b9"), Diff(INSERT,"15c3b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@15"), Diff(DELETE,"6a48b9"), Diff(INSERT,"15c3b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2c56cdb3"), Diff(INSERT,"7ba1dd09"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2c56cdb3"), Diff(INSERT,"7ba1dd09"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"194ae3bb"), Diff(INSERT,"6837e804"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"194ae3bb"), Diff(INSERT,"6837e804"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4"), Diff(DELETE,"20e2157"), Diff(INSERT,"5cb8f1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@4"), Diff(DELETE,"20e2157"), Diff(INSERT,"5cb8f1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7"), Diff(DELETE,"2c3e6c"), Diff(INSERT,"6ae0dd1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@7"), Diff(DELETE,"2c3e6c"), Diff(INSERT,"6ae0dd1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"566962f"), Diff(INSERT,"3f6fe39b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"566962f"), Diff(INSERT,"3f6fe39b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b"), Diff(INSERT,"71d012f2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"43c0d70b]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@626910e8]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@626910e8]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@530f3564]"), Diff(INSERT,"71d012f2]¶in precondition"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4400" _type="ConsoleOutput" date="Mon Jun 21 00:29:32 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="17366216" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7c892603]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7c892603]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3cba6132]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3cba6132]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6ffd1a27]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6ffd1a27]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6efc69da]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6efc69da]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5b70e338]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5b70e338]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@4fabb689]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@4fabb689]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@342caa95]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@342caa95]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7c892603]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7c892603]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3cba6132]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3cba6132]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6ffd1a27]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6ffd1a27]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6efc69da]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6efc69da]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5b70e338]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5b70e338]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@4fabb689]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@4fabb689]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@342caa95]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@342caa95]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5c960239"), Diff(INSERT,"7c892603"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5c960239"), Diff(INSERT,"7c892603"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1515c3b"), Diff(INSERT,"3cba613"), Diff(EQUAL,"2]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"1515c3b"), Diff(INSERT,"3cba613"), Diff(EQUAL,"2]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7ba1dd09"), Diff(INSERT,"6ffd1a27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7ba1dd09"), Diff(INSERT,"6ffd1a27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"837e804"), Diff(INSERT,"efc69da"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"837e804"), Diff(INSERT,"efc69da"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"45cb8f1"), Diff(INSERT,"5b70e338"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"45cb8f1"), Diff(INSERT,"5b70e338"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"76ae0dd1"), Diff(INSERT,"4fabb689"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"76ae0dd1"), Diff(INSERT,"4fabb689"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3"), Diff(DELETE,"f6fe39b"), Diff(INSERT,"42caa95"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3"), Diff(DELETE,"f6fe39b"), Diff(INSERT,"42caa95"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶"), Diff(DELETE,"in precondition"), Diff(INSERT,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7c892603]"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"Y"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"Lets Go"), Diff(INSERT,"true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7c892603]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true"), Diff(EQUAL,"; newValue="), Diff(INSERT,"false"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"MontyString@3f6fe39b"), Diff(INSERT,"RotatingLine@3cba6132]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3cba6132"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"Lets Go; newValue=Quest?; propagationId=null; source=grail.geometryFigs.MontyString@1df39e7c"), Diff(INSERT,"true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6ffd1a27]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6ffd1a27]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6efc69da]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6efc69da"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶in precondition"), Diff(INSERT,"true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5b70e338]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5b70e338]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@4fabb689]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@4fabb689]"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"Quest?"), Diff(INSERT,"true"), Diff(EQUAL,"; newValue="), Diff(INSERT,"false"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"1df39e7c"), Diff(INSERT,"342caa95"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"Y"), Diff(EQUAL,"; oldValue="), Diff(INSERT,"true"), Diff(EQUAL,"; newValue="), Diff(DELETE,"Grail"), Diff(INSERT,"false"), Diff(EQUAL,"; propagationId=null; source=grail.geometryFigs.MontyString@3"), Diff(DELETE,"f6fe39b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=tru"), Diff(INSERT,"42caa95]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5c960239]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@1515c3b2]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7ba1dd09]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6837e804]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@45cb8f1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@76ae0dd1]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]¶"), Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3f6fe39b]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@71d012f2]¶in precondition¶")]]]></diff>
  </Command>
  <Command __id="4402" _type="PauseCommand" date="Mon Jun 21 00:30:26 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="17419962">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[53746]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4401" _type="ShellCommand" date="Mon Jun 21 00:30:26 EDT 2021" starttimestamp="1624232406782" timestamp="17419962" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4404" _type="SelectTextCommand" caretOffset="724" date="Mon Jun 21 00:30:28 EDT 2021" end="724" start="630" starttimestamp="1624232406782" timestamp="17421422" />
  <Command __id="4406" _type="PauseCommand" date="Mon Jun 21 00:30:32 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17425783">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4361]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4405" _type="ShellCommand" date="Mon Jun 21 00:30:32 EDT 2021" starttimestamp="1624232406782" timestamp="17425783" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4408" _type="PauseCommand" date="Mon Jun 21 00:30:34 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17427556">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1773]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4407" _type="ShellCommand" date="Mon Jun 21 00:30:34 EDT 2021" starttimestamp="1624232406782" timestamp="17427556" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4409" _type="MoveCaretCommand" caretOffset="727" date="Mon Jun 21 00:30:34 EDT 2021" docOffset="992" starttimestamp="1624232406782" timestamp="17427695" />
  <Command __id="4410" _type="MoveCaretCommand" caretOffset="707" date="Mon Jun 21 00:30:35 EDT 2021" docOffset="972" starttimestamp="1624232406782" timestamp="17428584" />
  <Command __id="4411" _type="MoveCaretCommand" caretOffset="705" date="Mon Jun 21 00:30:36 EDT 2021" docOffset="970" starttimestamp="1624232406782" timestamp="17429507" />
  <Command __id="4413" _type="PauseCommand" date="Mon Jun 21 00:31:04 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="17457453">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[27946]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4412" _type="MoveCaretCommand" caretOffset="705" date="Mon Jun 21 00:31:04 EDT 2021" docOffset="970" starttimestamp="1624232406782" timestamp="17457453" />
  <Command __id="4415" _type="InsertStringCommand" date="Mon Jun 21 00:31:05 EDT 2021" starttimestamp="1624232406782" timestamp="17458263" timestamp2="17458263">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4417" _type="InsertStringCommand" date="Mon Jun 21 00:31:05 EDT 2021" starttimestamp="1624232406782" timestamp="17458460" timestamp2="17458460">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="4418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:31:05 EDT 2021" starttimestamp="1624232406782" timestamp="17459041" />
  <Command __id="4419" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Jun 21 00:31:06 EDT 2021" starttimestamp="1624232406782" timestamp="17459510" />
  <DocumentChange __id="4322" _type="Insert" date="Mon Jun 21 00:28:49 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4262" docExpressionCount="468" docLength="4362" length="4" offset="4096" repeat="4" starttimestamp="1624232406782" timestamp="17322690" timestamp2="17324066">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="4338" _type="Delete" date="Mon Jun 21 00:28:52 EDT 2021" docASTNodeCount="670" docActiveCodeLength="4258" docExpressionCount="467" docLength="4358" endLine="164" length="4" offset="4149" repeat="4" startLine="164" starttimestamp="1624232406782" timestamp="17326183" timestamp2="17327058">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <DocumentChange __id="4350" _type="Insert" date="Mon Jun 21 00:28:54 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4263" docExpressionCount="468" docLength="4363" length="5" offset="4149" repeat="5" starttimestamp="1624232406782" timestamp="17327914" timestamp2="17328949">
    <text><![CDATA[false]]></text>
  </DocumentChange>
  <DocumentChange __id="4365" _type="Insert" date="Mon Jun 21 00:29:02 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4264" docExpressionCount="468" docLength="4364" length="1" offset="4154" starttimestamp="1624232406782" timestamp="17335313">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4369" _type="Delete" date="Mon Jun 21 00:29:03 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4263" docExpressionCount="468" docLength="4363" endLine="164" length="1" offset="4154" startLine="164" starttimestamp="1624232406782" timestamp="17336843">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4377" _type="Insert" date="Mon Jun 21 00:29:07 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4264" docExpressionCount="468" docLength="4364" length="1" offset="4156" starttimestamp="1624232406782" timestamp="17341165">
    <text><![CDATA[}]]></text>
  </DocumentChange>
  <Command __id="4386" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:29:18 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17351864">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="4403" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:30:27 EDT 2021" docASTNodeCount="154" docActiveCodeLength="999" docExpressionCount="107" docLength="999" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17420891">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/geometryFigs/MontyString.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package grail.geometryFigs;


import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.models.PropertyListenerRegisterer;

@StructurePattern(StructurePatternNames.STRING_PATTERN)
@PropertyNames({"X", "Y", "Angle", "Radius", "Text"})
@EditablePropertyNames({"X", "Y", "Angle", "Radius", "Text"})


public class MontyString extends RotatingLine implements StringShape, PropertyListenerRegisterer {
	
	String text;
	
	public MontyString(int newX, int newY, String newText) {
		x = newX;
		y = newY;
		text = newText;
	}
	
	@Override
	public String getText() {
		return text;
	}
	@Override
	public void setText(String newVal) {
		String oldtext = new String(getText());
		text = newVal;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "Text", oldtext, newVal));	
	}
		

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4414" _type="Insert" date="Mon Jun 21 00:31:05 EDT 2021" docASTNodeCount="152" docActiveCodeLength="980" docExpressionCount="105" docLength="1001" length="2" offset="970" repeat="2" starttimestamp="1624232406782" timestamp="17458259" timestamp2="17458456">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="4421" _type="PauseCommand" date="Mon Jun 21 00:31:07 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17460636">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1126]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4451" _type="PauseCommand" date="Mon Jun 21 00:31:20 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17473445">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7645]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="4450" _type="RunCommand" date="Mon Jun 21 00:31:20 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17473444" type="Debug" />
  <Command __id="4452" _type="RunCommand" date="Mon Jun 21 00:31:20 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17473445" type="Run" />
  <Command __id="4453" _type="RunCommand" date="Mon Jun 21 00:31:20 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17473445" type="Debug" />
  <Command __id="4454" _type="RunCommand" date="Mon Jun 21 00:31:20 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17473445" type="Run" />
  <Command __id="4456" _type="PauseCommand" date="Mon Jun 21 00:31:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17475902">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2457]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4457" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:31:22 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="17476048" />
  <Command __id="4459" _type="PauseCommand" date="Mon Jun 21 00:31:24 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17477295">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1247]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4458" _type="ShellCommand" date="Mon Jun 21 00:31:24 EDT 2021" starttimestamp="1624232406782" timestamp="17477295" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4461" _type="PauseCommand" date="Mon Jun 21 00:31:25 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17478989">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1694]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4460" _type="ShellCommand" date="Mon Jun 21 00:31:25 EDT 2021" starttimestamp="1624232406782" timestamp="17478989" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4462" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:31:25 EDT 2021" starttimestamp="1624232406782" timestamp="17479113" />
  <Command __id="4463" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:31:25 EDT 2021" starttimestamp="1624232406782" timestamp="17479138" />
  <Command __id="4464" _type="RunCommand" date="Mon Jun 21 00:31:25 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17479204" type="Run" />
  <Command __id="4465" _type="RunCommand" date="Mon Jun 21 00:31:25 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17479204" type="Run" />
  <Command __id="4466" _type="ShellCommand" date="Mon Jun 21 00:31:26 EDT 2021" starttimestamp="1624232406782" timestamp="17479862" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4470" _type="PauseCommand" date="Mon Jun 21 00:32:07 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="17521134">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[30195]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="4469" _type="RunCommand" date="Mon Jun 21 00:32:07 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17521134" type="Debug" />
  <Command __id="4471" _type="RunCommand" date="Mon Jun 21 00:32:07 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17521134" type="Run" />
  <Command __id="4472" _type="RunCommand" date="Mon Jun 21 00:32:07 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17521134" type="Debug" />
  <Command __id="4473" _type="RunCommand" date="Mon Jun 21 00:32:07 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17521134" type="Run" />
  <Command __id="4474" _type="ShellCommand" date="Mon Jun 21 00:32:08 EDT 2021" starttimestamp="1624232406782" timestamp="17521520" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4476" _type="PauseCommand" date="Mon Jun 21 00:32:15 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17529082">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7562]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4477" _type="MoveCaretCommand" caretOffset="3592" date="Mon Jun 21 00:32:15 EDT 2021" docOffset="4157" starttimestamp="1624232406782" timestamp="17529177" />
  <Command __id="4479" _type="PauseCommand" date="Mon Jun 21 00:32:23 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17536794">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7617]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4478" _type="MoveCaretCommand" caretOffset="3370" date="Mon Jun 21 00:32:23 EDT 2021" docOffset="3935" starttimestamp="1624232406782" timestamp="17536794" />
  <Command __id="4480" _type="MoveCaretCommand" caretOffset="3370" date="Mon Jun 21 00:32:23 EDT 2021" docOffset="3935" starttimestamp="1624232406782" timestamp="17536794" />
  <Command __id="4482" _type="PauseCommand" date="Mon Jun 21 00:32:24 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17538061">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1267]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4483" _type="InsertStringCommand" date="Mon Jun 21 00:32:24 EDT 2021" starttimestamp="1624232406782" timestamp="17538064" timestamp2="17538064">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4484" _type="InsertStringCommand" date="Mon Jun 21 00:32:24 EDT 2021" starttimestamp="1624232406782" timestamp="17538064" timestamp2="17538064">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4486" _type="InsertStringCommand" date="Mon Jun 21 00:32:25 EDT 2021" starttimestamp="1624232406782" timestamp="17538221" timestamp2="17538221">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4487" _type="InsertStringCommand" date="Mon Jun 21 00:32:25 EDT 2021" starttimestamp="1624232406782" timestamp="17538221" timestamp2="17538221">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4489" _type="PauseCommand" date="Mon Jun 21 00:32:28 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17541479">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3258]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4490" _type="InsertStringCommand" date="Mon Jun 21 00:32:28 EDT 2021" starttimestamp="1624232406782" timestamp="17541482" timestamp2="17541482">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4491" _type="InsertStringCommand" date="Mon Jun 21 00:32:28 EDT 2021" starttimestamp="1624232406782" timestamp="17541483" timestamp2="17541483">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4493" _type="InsertStringCommand" date="Mon Jun 21 00:32:29 EDT 2021" starttimestamp="1624232406782" timestamp="17542384" timestamp2="17542384">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4494" _type="InsertStringCommand" date="Mon Jun 21 00:32:29 EDT 2021" starttimestamp="1624232406782" timestamp="17542384" timestamp2="17542384">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4496" _type="PauseCommand" date="Mon Jun 21 00:32:30 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17543821">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1437]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4497" _type="InsertStringCommand" date="Mon Jun 21 00:32:30 EDT 2021" starttimestamp="1624232406782" timestamp="17543825" timestamp2="17543825">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4498" _type="InsertStringCommand" date="Mon Jun 21 00:32:30 EDT 2021" starttimestamp="1624232406782" timestamp="17543825" timestamp2="17543825">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4500" _type="PauseCommand" date="Mon Jun 21 00:32:34 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17547559">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3734]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4499" _type="MoveCaretCommand" caretOffset="3412" date="Mon Jun 21 00:32:34 EDT 2021" docOffset="3977" starttimestamp="1624232406782" timestamp="17547559" />
  <Command __id="4501" _type="MoveCaretCommand" caretOffset="3412" date="Mon Jun 21 00:32:34 EDT 2021" docOffset="3977" starttimestamp="1624232406782" timestamp="17547559" />
  <Command __id="4503" _type="PauseCommand" date="Mon Jun 21 00:32:35 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17549083">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1524]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4504" _type="InsertStringCommand" date="Mon Jun 21 00:32:35 EDT 2021" starttimestamp="1624232406782" timestamp="17549088" timestamp2="17549088">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="4505" _type="InsertStringCommand" date="Mon Jun 21 00:32:35 EDT 2021" starttimestamp="1624232406782" timestamp="17549088" timestamp2="17549088">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="4507" _type="PauseCommand" date="Mon Jun 21 00:32:40 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17553278">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4190]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4506" _type="MoveCaretCommand" caretOffset="3746" date="Mon Jun 21 00:32:40 EDT 2021" docOffset="4311" starttimestamp="1624232406782" timestamp="17553278" />
  <Command __id="4508" _type="MoveCaretCommand" caretOffset="3746" date="Mon Jun 21 00:32:40 EDT 2021" docOffset="4311" starttimestamp="1624232406782" timestamp="17553278" />
  <Command __id="4510" _type="PauseCommand" date="Mon Jun 21 00:32:44 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17557271">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3993]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4511" _type="InsertStringCommand" date="Mon Jun 21 00:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="17557275" timestamp2="17557275">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4512" _type="InsertStringCommand" date="Mon Jun 21 00:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="17557275" timestamp2="17557275">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4514" _type="InsertStringCommand" date="Mon Jun 21 00:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="17557522" timestamp2="17557522">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4515" _type="InsertStringCommand" date="Mon Jun 21 00:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="17557522" timestamp2="17557522">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4517" _type="InsertStringCommand" date="Mon Jun 21 00:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="17557705" timestamp2="17557705">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4518" _type="InsertStringCommand" date="Mon Jun 21 00:32:44 EDT 2021" starttimestamp="1624232406782" timestamp="17557705" timestamp2="17557705">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4520" _type="InsertStringCommand" date="Mon Jun 21 00:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="17558268" timestamp2="17558268">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4521" _type="InsertStringCommand" date="Mon Jun 21 00:32:45 EDT 2021" starttimestamp="1624232406782" timestamp="17558268" timestamp2="17558268">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4523" _type="PauseCommand" date="Mon Jun 21 00:32:46 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17560132">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1864]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4524" _type="InsertStringCommand" date="Mon Jun 21 00:32:46 EDT 2021" starttimestamp="1624232406782" timestamp="17560137" timestamp2="17560137">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4525" _type="InsertStringCommand" date="Mon Jun 21 00:32:46 EDT 2021" starttimestamp="1624232406782" timestamp="17560137" timestamp2="17560137">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="4527" _type="PauseCommand" date="Mon Jun 21 00:32:48 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17561749">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1612]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4526" _type="MoveCaretCommand" caretOffset="3788" date="Mon Jun 21 00:32:48 EDT 2021" docOffset="4353" starttimestamp="1624232406782" timestamp="17561749" />
  <Command __id="4528" _type="MoveCaretCommand" caretOffset="3788" date="Mon Jun 21 00:32:48 EDT 2021" docOffset="4353" starttimestamp="1624232406782" timestamp="17561750" />
  <Command __id="4530" _type="PauseCommand" date="Mon Jun 21 00:32:49 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17563032">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1282]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4531" _type="InsertStringCommand" date="Mon Jun 21 00:32:49 EDT 2021" starttimestamp="1624232406782" timestamp="17563037" timestamp2="17563037">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="4532" _type="InsertStringCommand" date="Mon Jun 21 00:32:49 EDT 2021" starttimestamp="1624232406782" timestamp="17563037" timestamp2="17563037">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="4534" _type="PauseCommand" date="Mon Jun 21 00:33:00 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="17574130">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[11093]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4535" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:33:01 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="17574239" />
  <Command __id="4537" _type="PauseCommand" date="Mon Jun 21 00:33:02 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17575557">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1318]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4536" _type="ShellCommand" date="Mon Jun 21 00:33:02 EDT 2021" starttimestamp="1624232406782" timestamp="17575557" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4539" _type="PauseCommand" date="Mon Jun 21 00:33:04 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="17577463">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1906]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4538" _type="ShellCommand" date="Mon Jun 21 00:33:04 EDT 2021" starttimestamp="1624232406782" timestamp="17577463" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4540" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:33:04 EDT 2021" starttimestamp="1624232406782" timestamp="17577598" />
  <Command __id="4541" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:33:04 EDT 2021" starttimestamp="1624232406782" timestamp="17577621" />
  <Command __id="4542" _type="RunCommand" date="Mon Jun 21 00:33:04 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17577693" type="Run" />
  <Command __id="4543" _type="RunCommand" date="Mon Jun 21 00:33:04 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17577693" type="Run" />
  <Command __id="4544" _type="ShellCommand" date="Mon Jun 21 00:33:05 EDT 2021" starttimestamp="1624232406782" timestamp="17578443" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4546" _type="PauseCommand" date="Mon Jun 21 00:33:14 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17587420">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8977]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4545" _type="ConsoleOutput" date="Mon Jun 21 00:33:14 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="17587420" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@2b370d18]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@2b370d18]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7e550a51]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7e550a51]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@62e2bf12]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"758d443"), Diff(INSERT,"165b56da"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"758d443"), Diff(INSERT,"165b56da"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"45aec50e"), Diff(INSERT,"711bb170"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"45aec50e"), Diff(INSERT,"711bb170"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"686e8eaa"), Diff(INSERT,"21d3d806"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"686e8eaa"), Diff(INSERT,"21d3d806"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"700cd997"), Diff(INSERT,"663e8281"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"700cd997"), Diff(INSERT,"663e8281"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"31b7e119"), Diff(INSERT,"2a1fe51a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"31b7e119"), Diff(INSERT,"2a1fe51a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"48c37139"), Diff(INSERT,"6704c200"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"48c37139"), Diff(INSERT,"6704c200"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"202d494"), Diff(INSERT,"6a35118"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"202d494"), Diff(INSERT,"6a35118"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"202d494"), Diff(INSERT,"6a35118"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"853a386"), Diff(INSERT,"2b370d18"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"853a386"), Diff(INSERT,"2b370d18"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"202d494"), Diff(INSERT,"6a35118"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"758d443"), Diff(INSERT,"165b56da"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"758d443"), Diff(INSERT,"165b56da"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"45aec50e"), Diff(INSERT,"711bb170"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"45aec50e"), Diff(INSERT,"711bb170"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"686e8eaa"), Diff(INSERT,"21d3d806"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"686e8eaa"), Diff(INSERT,"21d3d806"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"700cd997"), Diff(INSERT,"663e8281"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"700cd997"), Diff(INSERT,"663e8281"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"31b7e119"), Diff(INSERT,"2a1fe51a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"31b7e119"), Diff(INSERT,"2a1fe51a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"48c37139"), Diff(INSERT,"6704c200"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"48c37139"), Diff(INSERT,"6704c200"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"202d494"), Diff(INSERT,"6a35118"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"202d494"), Diff(INSERT,"6a35118"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"13c9b3e8"), Diff(INSERT,"441d72d9"), Diff(EQUAL,"]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"66224bc"), Diff(INSERT,"7e550a51"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"66224bc"), Diff(INSERT,"7e550a51"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"12d0f690"), Diff(INSERT,"62e2bf12"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="4547" _type="ExceptionCommand" date="Mon Jun 21 00:33:14 EDT 2021" starttimestamp="1624232406782" timestamp="17587458" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
Execution exception caused by invocation exception caused by:
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="4548" _type="ConsoleOutput" date="Mon Jun 21 00:33:14 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="17587584" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]
Execution exception caused by invocation exception caused by:
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶"), Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶in precondition"), Diff(INSERT,"Execution exception caused by invocation exception caused by:"), Diff(EQUAL,"¶java."), Diff(DELETE,"beans.PropertyChangeEvent[propertyName=Text; oldV"), Diff(INSERT,"lang.AssertionError: passed precondition  new v"), Diff(EQUAL,"alue"), Diff(DELETE,"="), Diff(INSERT,": "), Diff(EQUAL,"true"), Diff(DELETE,"; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@2b370d18]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@2b370d18]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]¶java.bean"), Diff(INSERT," != Avatar Pass? button enabled status false%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamic"), Diff(EQUAL,"s."), Diff(DELETE,"P"), Diff(INSERT,"p"), Diff(EQUAL,"ropertyChange"), Diff(DELETE,"Event[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@165b56da]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@711bb170]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@21d3d806]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@663e8281]¶java.beans.PropertyChangeEvent[propertyName=X; oldV"), Diff(INSERT,"(SceneControllerButtonDynamics.java:153)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)¶	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)¶	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)¶	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)¶	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)¶	at java.base/java.lang.Thread.run(Thread.java:834)¶java.lang.AssertionError: passed precondition  new v"), Diff(EQUAL,"alue"), Diff(DELETE,"="), Diff(INSERT,": "), Diff(EQUAL,"true"), Diff(DELETE,"; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@2a1fe51a]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@6704c200]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@6a35118]¶java.bean"), Diff(INSERT," != Avatar Pass? button enabled status false%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamic"), Diff(EQUAL,"s."), Diff(DELETE,"P"), Diff(INSERT,"p"), Diff(EQUAL,"ropertyChange"), Diff(DELETE,"Event[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@441d72d9]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7e550a51]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7e550a51]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@62e2bf12]"), Diff(INSERT,"(SceneControllerButtonDynamics.java:153)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)¶	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4550" _type="PauseCommand" date="Mon Jun 21 00:33:27 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="17600456">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12872]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4549" _type="ShellCommand" date="Mon Jun 21 00:33:27 EDT 2021" starttimestamp="1624232406782" timestamp="17600456" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4552" _type="PauseCommand" date="Mon Jun 21 00:33:47 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="17620545">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20089]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4553" _type="MoveCaretCommand" caretOffset="3789" date="Mon Jun 21 00:33:47 EDT 2021" docOffset="4354" starttimestamp="1624232406782" timestamp="17620631" />
  <Command __id="4555" _type="PauseCommand" date="Mon Jun 21 00:34:01 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="17634335">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13704]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4554" _type="MoveCaretCommand" caretOffset="3356" date="Mon Jun 21 00:34:01 EDT 2021" docOffset="3921" starttimestamp="1624232406782" timestamp="17634335" />
  <Command __id="4556" _type="MoveCaretCommand" caretOffset="3356" date="Mon Jun 21 00:34:01 EDT 2021" docOffset="3921" starttimestamp="1624232406782" timestamp="17634335" />
  <Command __id="4558" _type="PauseCommand" date="Mon Jun 21 00:34:03 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17636633">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2298]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4557" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:34:03 EDT 2021" starttimestamp="1624232406782" timestamp="17636633" />
  <Command __id="4559" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Jun 21 00:34:03 EDT 2021" starttimestamp="1624232406782" timestamp="17636633" />
  <Command __id="4561" _type="PauseCommand" date="Mon Jun 21 00:35:03 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="17696940">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[60307]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4560" _type="MoveCaretCommand" caretOffset="3359" date="Mon Jun 21 00:35:03 EDT 2021" docOffset="3924" starttimestamp="1624232406782" timestamp="17696940" />
  <Command __id="4562" _type="MoveCaretCommand" caretOffset="3359" date="Mon Jun 21 00:35:03 EDT 2021" docOffset="3924" starttimestamp="1624232406782" timestamp="17696941" />
  <Command __id="4564" _type="PauseCommand" date="Mon Jun 21 00:35:06 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17700158">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3217]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4563" _type="MoveCaretCommand" caretOffset="3357" date="Mon Jun 21 00:35:06 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="17700158" />
  <Command __id="4565" _type="MoveCaretCommand" caretOffset="3357" date="Mon Jun 21 00:35:06 EDT 2021" docOffset="3922" starttimestamp="1624232406782" timestamp="17700158" />
  <Command __id="4567" _type="PauseCommand" date="Mon Jun 21 00:36:05 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="17758380">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[58222]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4568" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:36:05 EDT 2021" starttimestamp="1624232406782" timestamp="17758386" />
  <Command __id="4569" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:36:05 EDT 2021" starttimestamp="1624232406782" timestamp="17758386" />
  <Command __id="4571" _type="PauseCommand" date="Mon Jun 21 00:36:10 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17764042">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5656]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4572" _type="InsertStringCommand" date="Mon Jun 21 00:36:10 EDT 2021" starttimestamp="1624232406782" timestamp="17764044" timestamp2="17764044">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4573" _type="InsertStringCommand" date="Mon Jun 21 00:36:10 EDT 2021" starttimestamp="1624232406782" timestamp="17764044" timestamp2="17764044">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4578" _type="PauseCommand" date="Mon Jun 21 00:36:21 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="17774948">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6322]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="4577" _type="RunCommand" date="Mon Jun 21 00:36:21 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17774948" type="Debug" />
  <Command __id="4579" _type="RunCommand" date="Mon Jun 21 00:36:21 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17774948" type="Run" />
  <Command __id="4580" _type="RunCommand" date="Mon Jun 21 00:36:21 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="17774948" type="Debug" />
  <Command __id="4581" _type="RunCommand" date="Mon Jun 21 00:36:21 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17774948" type="Run" />
  <Command __id="4583" _type="PauseCommand" date="Mon Jun 21 00:36:42 EDT 2021" range="20s-30s" starttimestamp="1624232406782" timestamp="17795964">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[21016]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4584" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:36:42 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="17796048" />
  <Command __id="4586" _type="PauseCommand" date="Mon Jun 21 00:36:45 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17798702">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2654]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4585" _type="ShellCommand" date="Mon Jun 21 00:36:45 EDT 2021" starttimestamp="1624232406782" timestamp="17798702" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4588" _type="PauseCommand" date="Mon Jun 21 00:36:49 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="17802664">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3962]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4587" _type="ShellCommand" date="Mon Jun 21 00:36:49 EDT 2021" starttimestamp="1624232406782" timestamp="17802664" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4589" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:36:49 EDT 2021" starttimestamp="1624232406782" timestamp="17802800" />
  <Command __id="4590" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:36:49 EDT 2021" starttimestamp="1624232406782" timestamp="17802826" />
  <Command __id="4591" _type="RunCommand" date="Mon Jun 21 00:36:49 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17802917" type="Run" />
  <Command __id="4592" _type="RunCommand" date="Mon Jun 21 00:36:49 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17802918" type="Run" />
  <Command __id="4593" _type="ShellCommand" date="Mon Jun 21 00:36:50 EDT 2021" starttimestamp="1624232406782" timestamp="17803664" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4595" _type="PauseCommand" date="Mon Jun 21 00:37:01 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="17814595">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10931]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4594" _type="ConsoleOutput" date="Mon Jun 21 00:37:01 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="17814595" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@7fe40d30]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"165b56da"), Diff(INSERT,"678d600d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"165b56da"), Diff(INSERT,"678d600d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7"), Diff(DELETE,"11bb170"), Diff(INSERT,"2354163"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7"), Diff(DELETE,"11bb170"), Diff(INSERT,"2354163"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"21d3d806"), Diff(INSERT,"7bcc2924"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"21d3d806"), Diff(INSERT,"7bcc2924"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"63e8281"), Diff(INSERT,"2e629f9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6"), Diff(DELETE,"63e8281"), Diff(INSERT,"2e629f9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2a1fe51a"), Diff(INSERT,"6ee7b0a0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"2a1fe51a"), Diff(INSERT,"6ee7b0a0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"6704c200"), Diff(INSERT,"23b04b5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"6704c200"), Diff(INSERT,"23b04b5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"6a35118"), Diff(INSERT,"3681da46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"6a35118"), Diff(INSERT,"3681da46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"441d72d9"), Diff(INSERT,"5528d10c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"441d72d9"), Diff(INSERT,"5528d10c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"441d72d9]¶Execution exception caused by invocation exception caused by:"), Diff(INSERT,"5528d10c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶in precondition"), Diff(EQUAL,"¶java."), Diff(DELETE,"lang.AssertionError: passed precondition  new v"), Diff(INSERT,"beans.PropertyChangeEvent[propertyName=Text; oldV"), Diff(EQUAL,"alue"), Diff(DELETE,": "), Diff(INSERT,"="), Diff(EQUAL,"true"), Diff(DELETE," != Avatar Pass? button enabled status false%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamic"), Diff(INSERT,"; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@7fe40d30]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@7fe40d30]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.bean"), Diff(EQUAL,"s."), Diff(DELETE,"p"), Diff(INSERT,"P"), Diff(EQUAL,"ropertyChange"), Diff(DELETE,"(SceneControllerButtonDynamics.java:153)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)¶	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:21)¶	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)¶	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)¶	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)¶	at java.base/java.lang.Thread.run(Thread.java:834)"), Diff(INSERT,"Event[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]"), Diff(EQUAL,"¶java."), Diff(DELETE,"lang.AssertionError: passed precondition  new v"), Diff(INSERT,"beans.PropertyChangeEvent[propertyName=X; oldV"), Diff(EQUAL,"alue"), Diff(DELETE,": "), Diff(INSERT,"="), Diff(EQUAL,"true"), Diff(DELETE," != Avatar Pass? button enabled status false%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamic"), Diff(INSERT,"; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶java.bean"), Diff(EQUAL,"s."), Diff(DELETE,"p"), Diff(INSERT,"P"), Diff(EQUAL,"ropertyChange"), Diff(DELETE,"(SceneControllerButtonDynamics.java:153)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)¶	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"), Diff(INSERT,"Event[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4596" _type="ExceptionCommand" date="Mon Jun 21 00:37:01 EDT 2021" starttimestamp="1624232406782" timestamp="17814629" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@17f895e5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@17f895e5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@49b953d2]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@49b953d2]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@70c662cc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@70c662cc]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
Execution exception caused by invocation exception caused by:
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="4597" _type="ConsoleOutput" date="Mon Jun 21 00:37:01 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="17814643" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4afbfd4e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@1529f4ac]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@17f895e5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@17f895e5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@49b953d2]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@49b953d2]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@70c662cc]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@70c662cc]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]
Execution exception caused by invocation exception caused by:
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"X"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"true"), Diff(INSERT,"passed"), Diff(EQUAL,"; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail."), Diff(DELETE,"geometryFigs.RotatingLine@678d600d"), Diff(INSERT,"compositeFigs.FiveChars@5528d10c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Y"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"true"), Diff(INSERT,"failed"), Diff(EQUAL,"; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail."), Diff(DELETE,"geometryFigs.RotatingLine@678d600d"), Diff(INSERT,"compositeFigs.FiveChars@5528d10c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"72354163"), Diff(INSERT,"2cd5d0dc"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"72354163"), Diff(INSERT,"2cd5d0dc"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"14be6cea"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"14be6cea"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"estrictedLine@62e629f9"), Diff(INSERT,"otatingLine@4afbfd4e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"estrictedLine@62e629f9"), Diff(INSERT,"otatingLine@4afbfd4e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6ee7b0a0"), Diff(INSERT,"1529f4ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6ee7b0a0"), Diff(INSERT,"1529f4ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"CharHeads@23b04b"), Diff(INSERT,"RestrictedLine@17f895e"), Diff(EQUAL,"5]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"CharHeads@23b04b"), Diff(INSERT,"RestrictedLine@17f895e"), Diff(EQUAL,"5]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"MontyString@3681da46"), Diff(INSERT,"CharHeads@49b953d2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"MontyString@3681da46"), Diff(INSERT,"CharHeads@49b953d2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"approach"), Diff(INSERT,"true"), Diff(EQUAL,"; newValue=false; propagationId=null; source=grail."), Diff(DELETE,"compositeFigs.FiveChars@5528d10"), Diff(INSERT,"geometryFigs.MontyString@70c662c"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this"), Diff(INSERT,"Y"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"say"), Diff(INSERT,"true"), Diff(EQUAL,"; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail."), Diff(DELETE,"compositeFigs.FiveChars@5528d10"), Diff(INSERT,"geometryFigs.MontyString@70c662c"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue="), Diff(DELETE,"passed"), Diff(INSERT,"approach"), Diff(EQUAL,"; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue="), Diff(DELETE,"failed"), Diff(INSERT,"say"), Diff(EQUAL,"; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶"), Diff(DELETE,"in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@7fe40d30]¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶"), Diff(DELETE,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@7fe40d30]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=tru"), Diff(INSERT,"failed; newValue=fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@678d600d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@72354163]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@7bcc2924]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@62e629f9]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6ee7b0a0]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@23b04b5]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@3681da46]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶"), Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@5528d10c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.bean"), Diff(INSERT,"Execution exception caused by invocation exception caused by:¶java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamic"), Diff(EQUAL,"s."), Diff(DELETE,"P"), Diff(INSERT,"p"), Diff(EQUAL,"ropertyChange"), Diff(DELETE,"Event[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@2cd5d0dc]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@14be6cea]"), Diff(INSERT,"(SceneControllerButtonDynamics.java:153)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)¶	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4599" _type="PauseCommand" date="Mon Jun 21 00:37:16 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="17829363">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14720]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4598" _type="ShellCommand" date="Mon Jun 21 00:37:16 EDT 2021" starttimestamp="1624232406782" timestamp="17829363" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4601" _type="MoveCaretCommand" caretOffset="3413" date="Mon Jun 21 00:37:16 EDT 2021" docOffset="3978" starttimestamp="1624232406782" timestamp="17829906" />
  <Command __id="4603" _type="PauseCommand" date="Mon Jun 21 00:40:16 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="18010171">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[180265]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4602" _type="MoveCaretCommand" caretOffset="3316" date="Mon Jun 21 00:40:16 EDT 2021" docOffset="3881" starttimestamp="1624232406782" timestamp="18010171" />
  <Command __id="4604" _type="MoveCaretCommand" caretOffset="3316" date="Mon Jun 21 00:40:16 EDT 2021" docOffset="3881" starttimestamp="1624232406782" timestamp="18010171" />
  <Command __id="4605" _type="SelectTextCommand" caretOffset="3364" date="Mon Jun 21 00:40:17 EDT 2021" end="3364" start="3316" starttimestamp="1624232406782" timestamp="18010317" />
  <Command __id="4606" _type="SelectTextCommand" caretOffset="3364" date="Mon Jun 21 00:40:17 EDT 2021" end="3364" start="3316" starttimestamp="1624232406782" timestamp="18010317" />
  <Command __id="4607" _type="SelectTextCommand" caretOffset="3317" date="Mon Jun 21 00:40:17 EDT 2021" end="3317" start="3272" starttimestamp="1624232406782" timestamp="18010575" />
  <Command __id="4608" _type="SelectTextCommand" caretOffset="3317" date="Mon Jun 21 00:40:17 EDT 2021" end="3317" start="3272" starttimestamp="1624232406782" timestamp="18010575" />
  <Command __id="4610" _type="PauseCommand" date="Mon Jun 21 00:42:16 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="18129891">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[119316]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4609" _type="ShellCommand" date="Mon Jun 21 00:42:16 EDT 2021" starttimestamp="1624232406782" timestamp="18129891" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4612" _type="PauseCommand" date="Mon Jun 21 00:42:35 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="18148673">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18782]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4611" _type="ShellCommand" date="Mon Jun 21 00:42:35 EDT 2021" starttimestamp="1624232406782" timestamp="18148673" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4613" _type="MoveCaretCommand" caretOffset="3576" date="Mon Jun 21 00:42:35 EDT 2021" docOffset="4141" starttimestamp="1624232406782" timestamp="18149035" />
  <Command __id="4614" _type="MoveCaretCommand" caretOffset="3576" date="Mon Jun 21 00:42:35 EDT 2021" docOffset="4141" starttimestamp="1624232406782" timestamp="18149035" />
  <Command __id="4615" _type="MoveCaretCommand" caretOffset="3576" date="Mon Jun 21 00:42:36 EDT 2021" docOffset="4141" starttimestamp="1624232406782" timestamp="18149628" />
  <Command __id="4616" _type="MoveCaretCommand" caretOffset="3576" date="Mon Jun 21 00:42:36 EDT 2021" docOffset="4141" starttimestamp="1624232406782" timestamp="18149629" />
  <DocumentChange __id="4420" _type="Insert" date="Mon Jun 21 00:31:07 EDT 2021" docASTNodeCount="154" docActiveCodeLength="994" docExpressionCount="107" docLength="1015" length="14" offset="970" repeat="14" starttimestamp="1624232406782" timestamp="17460636" timestamp2="17465792">
    <text><![CDATA[true, false));]]></text>
  </DocumentChange>
  <Command __id="4455" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:31:22 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17475902">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="4475" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:32:15 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4264" docExpressionCount="468" docLength="4364" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17529082">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		aBridgeScene.addPropertyChangeListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				else{buttons.getApproach().setEnabled(true);}¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled("), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e);¶				}¶				"), Diff(INSERT,"else{"), Diff(EQUAL,"buttons.getPassed().setEnabled("), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e);"), Diff(INSERT,"}"), Diff(EQUAL,"¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				buttons.getPassed().setEnabled(true);¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		aBridgeScene.addPropertyChangeListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue().equals("approach")) {
				if((Boolean)evt.getNewValue() == false) {
				buttons.getApproach().setEnabled(false);
				} 
				else{buttons.getApproach().setEnabled(true);}
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(true);
				}
				else{buttons.getPassed().setEnabled(false);}
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				buttons.getPassed().setEnabled(true);
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4481" _type="Insert" date="Mon Jun 21 00:32:24 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4266" docExpressionCount="468" docLength="4366" length="2" offset="3935" repeat="2" starttimestamp="1624232406782" timestamp="17538061" timestamp2="17538217">
    <text><![CDATA[el]]></text>
  </DocumentChange>
  <DocumentChange __id="4488" _type="Insert" date="Mon Jun 21 00:32:28 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4267" docExpressionCount="468" docLength="4367" length="1" offset="3937" starttimestamp="1624232406782" timestamp="17541479">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="4492" _type="Replace" date="Mon Jun 21 00:32:29 EDT 2021" docASTNodeCount="671" docActiveCodeLength="4268" docExpressionCount="468" docLength="4368" endLine="158" insertionLength="8" int_docASTNodeCount="671" int_docActiveCodeLength="4260" int_docExpressionCount="468" int_docLength="4360" length="7" offset="3931" startLine="158" starttimestamp="1624232406782" timestamp="17542380">
    <deletedText><![CDATA[				els]]></deletedText>
    <insertedText><![CDATA[				else]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4495" _type="Insert" date="Mon Jun 21 00:32:30 EDT 2021" docASTNodeCount="672" docActiveCodeLength="4269" docExpressionCount="468" docLength="4369" length="1" offset="3939" starttimestamp="1624232406782" timestamp="17543821">
    <text><![CDATA[{]]></text>
  </DocumentChange>
  <DocumentChange __id="4502" _type="Insert" date="Mon Jun 21 00:32:35 EDT 2021" docASTNodeCount="672" docActiveCodeLength="4270" docExpressionCount="468" docLength="4370" length="1" offset="3977" starttimestamp="1624232406782" timestamp="17549083">
    <text><![CDATA[}]]></text>
  </DocumentChange>
  <DocumentChange __id="4509" _type="Insert" date="Mon Jun 21 00:32:44 EDT 2021" docASTNodeCount="672" docActiveCodeLength="4273" docExpressionCount="468" docLength="4373" length="3" offset="4311" repeat="3" starttimestamp="1624232406782" timestamp="17557271" timestamp2="17557702">
    <text><![CDATA[els]]></text>
  </DocumentChange>
  <DocumentChange __id="4519" _type="Replace" date="Mon Jun 21 00:32:45 EDT 2021" docASTNodeCount="672" docActiveCodeLength="4274" docExpressionCount="468" docLength="4374" endLine="170" insertionLength="8" int_docASTNodeCount="672" int_docActiveCodeLength="4266" int_docExpressionCount="468" int_docLength="4366" length="7" offset="4307" startLine="170" starttimestamp="1624232406782" timestamp="17558265">
    <deletedText><![CDATA[				els]]></deletedText>
    <insertedText><![CDATA[				else]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4522" _type="Insert" date="Mon Jun 21 00:32:46 EDT 2021" docASTNodeCount="673" docActiveCodeLength="4275" docExpressionCount="468" docLength="4375" length="1" offset="4315" starttimestamp="1624232406782" timestamp="17560132">
    <text><![CDATA[{]]></text>
  </DocumentChange>
  <DocumentChange __id="4529" _type="Insert" date="Mon Jun 21 00:32:49 EDT 2021" docASTNodeCount="673" docActiveCodeLength="4276" docExpressionCount="468" docLength="4376" length="1" offset="4353" starttimestamp="1624232406782" timestamp="17563032">
    <text><![CDATA[}]]></text>
  </DocumentChange>
  <Command __id="4533" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:33:00 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17574130">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="4551" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:33:47 EDT 2021" docASTNodeCount="673" docActiveCodeLength="4276" docExpressionCount="468" docLength="4376" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17620545">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		aBridgeScene.addPropertyChangeListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				else{buttons.getApproach().setEnabled(true);}¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				"), Diff(INSERT,"else{"), Diff(EQUAL,"buttons.getPassed().setEnabled(true);"), Diff(INSERT,"}"), Diff(EQUAL,"¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(true);¶				}¶				else{buttons.getPassed().setEnabled(false);}¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				"), Diff(INSERT,"else{"), Diff(EQUAL,"buttons.getPassed().setEnabled(true);"), Diff(INSERT,"}"), Diff(EQUAL,"¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package grail.MVC;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;

import grail.compositeFigs.Avatars;
import grail.compositeFigs.BridgeSceneFactory;
import grail.compositeFigs.FiveAvatars;
import grail.extras.Buttons;
import grail.extras.PanelButton;
import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)

public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {
	
	static final int
		ARTHUR_X = 40,
		ARTHUR_Y = 500,
		GALAHAD_X = 40,
		GALAHAD_Y = 660,
		GUARD_X = 500,
		GUARD_Y = 410,
		LANCE_X = 100,
		LANCE_Y = 500,
		ROBIN_X = 100,
		ROBIN_Y = 660;
	
	Component aMontySceneComponent;
//	JButton passed;
//	JButton say;
//	JButton failed;
//	JButton approach;
	PanelButton buttons;
	FiveAvatars aBridgeScene;
	
	
	
	
	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {
		buttons = someButtons;
		aMontySceneComponent = sceneComponent;
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
		//aBridgeScene = bridgeScene;
		aMontySceneComponent.addKeyListener(this);
		aMontySceneComponent.addMouseListener(this);
		aBridgeScene.addPropertyChangeListener(this);
		
		
	}
	public BridgeSceneController(PanelButton someButtons) {
		buttons = someButtons;
		buttons.getPassed().addActionListener(this);;
		buttons.getSay().addActionListener(this);;
		buttons.getFailed().addActionListener(this);
		buttons.getApproach().addActionListener(this);
		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();
	}
	

	

	@Override
	public void keyTyped(KeyEvent e) {
		System.out.println("keyboard clicked");
		Avatars arthur = aBridgeScene.getArthur();
		Avatars galahad = aBridgeScene.getGalahad();
		Avatars lancelot = aBridgeScene.getLancelot();
		Avatars robin = aBridgeScene.getRobin();
		char keyPressed = e.getKeyChar();
		switch (keyPressed) {
    	case 'a' :
    		arthur.move(newX, newY);
    		break;
    	case 'g':
    		galahad.move(newX, newY);
    		break;
    	case 'l' :
    		lancelot.move(newX, newY);
    		break;
    	case 'r':
    		robin.move(newX, newY);
    		break;
    	case 'o':
    		arthur.move(ARTHUR_X, ARTHUR_Y);
    		
    		galahad.move(GALAHAD_X, GALAHAD_Y);
    		
    		lancelot.move(LANCE_X, LANCE_Y);
    	
    		robin.move(ROBIN_X, ROBIN_Y);
    		aBridgeScene.newOccupation(false);
		}
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == buttons.getPassed()) {
			aBridgeScene.passed();
		}
		else if (e.getSource() == buttons.getSay()) {
			aBridgeScene.say(AVATAR_SAY);
		}
		else if (e.getSource() == buttons.getFailed()) {
			aBridgeScene.failed();
		}
		else if (e.getSource() == buttons.getApproach()) {
			aBridgeScene.approach(aBridgeScene.getLancelot());
		}
	}
	
	
	
	public JButton getPassed() {
		return buttons.getPassed();
	}
	
	public JButton getSay() {
		return buttons.getSay();
	}
	
	public JButton getFailed() {
		return buttons.getFailed();
	}
	
	public JButton getApproach() {
		return buttons.getApproach();
	}
	

	@Override
	public void keyPressed(KeyEvent e) {}

	@Override
	public void keyReleased(KeyEvent e) {}
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName() == "this") {
			if(evt.getOldValue().equals("approach")) {
				if((Boolean)evt.getNewValue() == false) {
				buttons.getApproach().setEnabled(false);
				} 
				else{buttons.getApproach().setEnabled(true);}
			}
			else if(evt.getOldValue() == "passed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				else{buttons.getPassed().setEnabled(true);}
			}
			else if(evt.getOldValue() == "say") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getSay().setEnabled(true);
				}
				else{buttons.getPassed().setEnabled(false);}
			}
			else if(evt.getOldValue() == "failed") {
				if((Boolean)evt.getNewValue() == true) {
				buttons.getPassed().setEnabled(false);
				}
				else{buttons.getPassed().setEnabled(true);}
			}
			}
		
	}
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4566" _type="Delete" date="Mon Jun 21 00:36:05 EDT 2021" docASTNodeCount="673" docActiveCodeLength="4275" docExpressionCount="468" docLength="4375" endLine="156" length="1" offset="3921" startLine="156" starttimestamp="1624232406782" timestamp="17758380">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="4570" _type="Insert" date="Mon Jun 21 00:36:10 EDT 2021" docASTNodeCount="673" docActiveCodeLength="4276" docExpressionCount="468" docLength="4376" length="1" offset="3921" starttimestamp="1624232406782" timestamp="17764042">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="4582" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:36:42 EDT 2021" docASTNodeCount="90" docActiveCodeLength="711" docExpressionCount="61" docLength="1103" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17795964">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/main/RunSummer21A4Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶¶¶import grader.basics.execution.BasicProjectExecution;¶¶¶¶¶import gradingTools.comp301ss21.assignment4.SS21Assignment4Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶import util.trace.Tracer;¶¶public class RunSummer21A4Tests {¶	static final int¶			MAX_PRINT = 600,¶			MAX_TRACE = 2000,¶			TIME_OUT = 5;¶	public static void main(String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINT);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACE);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		SS21Assignment4Suite.main(args);¶		}¶	}¶")]]]></diff>
  </Command>
  <Command __id="4600" _type="DiffBasedFileOpenCommand" date="Mon Jun 21 00:37:16 EDT 2021" docASTNodeCount="673" docActiveCodeLength="4276" docExpressionCount="468" docLength="4376" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="17829506">
    <filePath><![CDATA[/Users/gabomm99/eclipse-workspace/grailA4FinalProject/src/grail/MVC/BridgeSceneController.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package grail.MVC;¶¶import java.awt.Component;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.event.KeyEvent;¶import java.awt.event.KeyListener;¶import java.awt.event.MouseEvent;¶import java.awt.event.MouseListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JButton;¶¶import grail.compositeFigs.Avatars;¶import grail.compositeFigs.BridgeSceneFactory;¶import grail.compositeFigs.FiveAvatars;¶import grail.extras.Buttons;¶import grail.extras.PanelButton;¶import tags301.Comp301Tags;¶import util.annotations.Tags;¶¶@Tags(Comp301Tags.BRIDGE_SCENE_CONTROLLER)¶¶public class BridgeSceneController extends BridgeSceneMouseController implements KeyController, ActionListener, PropertyChangeListener {¶	¶	static final int¶		ARTHUR_X = 40,¶		ARTHUR_Y = 500,¶		GALAHAD_X = 40,¶		GALAHAD_Y = 660,¶		GUARD_X = 500,¶		GUARD_Y = 410,¶		LANCE_X = 100,¶		LANCE_Y = 500,¶		ROBIN_X = 100,¶		ROBIN_Y = 660;¶	¶	Component aMontySceneComponent;¶//	JButton passed;¶//	JButton say;¶//	JButton failed;¶//	JButton approach;¶	PanelButton buttons;¶	FiveAvatars aBridgeScene;¶	¶	¶	¶	¶	public BridgeSceneController(Component sceneComponent, PanelButton someButtons) {¶		buttons = someButtons;¶		aMontySceneComponent = sceneComponent;¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶		//aBridgeScene = bridgeScene;¶		aMontySceneComponent.addKeyListener(this);¶		aMontySceneComponent.addMouseListener(this);¶		aBridgeScene.addPropertyChangeListener(this);¶		¶		¶	}¶	public BridgeSceneController(PanelButton someButtons) {¶		buttons = someButtons;¶		buttons.getPassed().addActionListener(this);;¶		buttons.getSay().addActionListener(this);;¶		buttons.getFailed().addActionListener(this);¶		buttons.getApproach().addActionListener(this);¶		aBridgeScene = BridgeSceneFactory.bridgeSceneFactoryMethod();¶	}¶	¶¶	¶¶	@Override¶	public void keyTyped(KeyEvent e) {¶		System.out.println("keyboard clicked");¶		Avatars arthur = aBridgeScene.getArthur();¶		Avatars galahad = aBridgeScene.getGalahad();¶		Avatars lancelot = aBridgeScene.getLancelot();¶		Avatars robin = aBridgeScene.getRobin();¶		char keyPressed = e.getKeyChar();¶		switch (keyPressed) {¶    	case 'a' :¶    		arthur.move(newX, newY);¶    		break;¶    	case 'g':¶    		galahad.move(newX, newY);¶    		break;¶    	case 'l' :¶    		lancelot.move(newX, newY);¶    		break;¶    	case 'r':¶    		robin.move(newX, newY);¶    		break;¶    	case 'o':¶    		arthur.move(ARTHUR_X, ARTHUR_Y);¶    		¶    		galahad.move(GALAHAD_X, GALAHAD_Y);¶    		¶    		lancelot.move(LANCE_X, LANCE_Y);¶    	¶    		robin.move(ROBIN_X, ROBIN_Y);¶    		aBridgeScene.newOccupation(false);¶		}¶		¶	}¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if (e.getSource() == buttons.getPassed()) {¶			aBridgeScene.passed();¶		}¶		else if (e.getSource() == buttons.getSay()) {¶			aBridgeScene.say(AVATAR_SAY);¶		}¶		else if (e.getSource() == buttons.getFailed()) {¶			aBridgeScene.failed();¶		}¶		else if (e.getSource() == buttons.getApproach()) {¶			aBridgeScene.approach(aBridgeScene.getLancelot());¶		}¶	}¶	¶	¶	¶	public JButton getPassed() {¶		return buttons.getPassed();¶	}¶	¶	public JButton getSay() {¶		return buttons.getSay();¶	}¶	¶	public JButton getFailed() {¶		return buttons.getFailed();¶	}¶	¶	public JButton getApproach() {¶		return buttons.getApproach();¶	}¶	¶¶	@Override¶	public void keyPressed(KeyEvent e) {}¶¶	@Override¶	public void keyReleased(KeyEvent e) {}¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if(evt.getPropertyName() == "this") {¶			if(evt.getOldValue().equals("approach")) {¶				if((Boolean)evt.getNewValue() == false) {¶				buttons.getApproach().setEnabled(false);¶				} ¶				else{buttons.getApproach().setEnabled(true);}¶			}¶			else if(evt.getOldValue() == "passed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				else{buttons.getPassed().setEnabled(true);}¶			}¶			else if(evt.getOldValue() == "say") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getSay().setEnabled(true);¶				}¶				else{buttons.getPassed().setEnabled(false);}¶			}¶			else if(evt.getOldValue() == "failed") {¶				if((Boolean)evt.getNewValue() == true) {¶				buttons.getPassed().setEnabled(false);¶				}¶				else{buttons.getPassed().setEnabled(true);}¶			}¶			}¶		¶	}¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4618" _type="PauseCommand" date="Mon Jun 21 00:42:37 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="18150667">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1038]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4619" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:37 EDT 2021" starttimestamp="1624232406782" timestamp="18150672" />
  <Command __id="4620" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:37 EDT 2021" starttimestamp="1624232406782" timestamp="18150672" />
  <Command __id="4622" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:37 EDT 2021" starttimestamp="1624232406782" timestamp="18150964" />
  <Command __id="4623" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:37 EDT 2021" starttimestamp="1624232406782" timestamp="18150964" />
  <Command __id="4625" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:38 EDT 2021" starttimestamp="1624232406782" timestamp="18151320" />
  <Command __id="4626" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:38 EDT 2021" starttimestamp="1624232406782" timestamp="18151320" />
  <Command __id="4628" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:38 EDT 2021" starttimestamp="1624232406782" timestamp="18151681" />
  <Command __id="4629" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:38 EDT 2021" starttimestamp="1624232406782" timestamp="18151681" />
  <Command __id="4632" _type="PauseCommand" date="Mon Jun 21 00:42:39 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="18153212">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1531]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4631" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:39 EDT 2021" starttimestamp="1624232406782" timestamp="18153212" />
  <Command __id="4633" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:39 EDT 2021" starttimestamp="1624232406782" timestamp="18153213" />
  <Command __id="4635" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:40 EDT 2021" starttimestamp="1624232406782" timestamp="18153731" />
  <Command __id="4636" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:40 EDT 2021" starttimestamp="1624232406782" timestamp="18153731" />
  <Command __id="4638" _type="PauseCommand" date="Mon Jun 21 00:42:41 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="18154879">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1148]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4639" _type="InsertStringCommand" date="Mon Jun 21 00:42:41 EDT 2021" starttimestamp="1624232406782" timestamp="18154884" timestamp2="18154884">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4640" _type="InsertStringCommand" date="Mon Jun 21 00:42:41 EDT 2021" starttimestamp="1624232406782" timestamp="18154884" timestamp2="18154884">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4642" _type="InsertStringCommand" date="Mon Jun 21 00:42:41 EDT 2021" starttimestamp="1624232406782" timestamp="18155214" timestamp2="18155214">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4643" _type="InsertStringCommand" date="Mon Jun 21 00:42:41 EDT 2021" starttimestamp="1624232406782" timestamp="18155214" timestamp2="18155214">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4645" _type="InsertStringCommand" date="Mon Jun 21 00:42:42 EDT 2021" starttimestamp="1624232406782" timestamp="18155308" timestamp2="18155308">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4646" _type="InsertStringCommand" date="Mon Jun 21 00:42:42 EDT 2021" starttimestamp="1624232406782" timestamp="18155308" timestamp2="18155308">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="4648" _type="PauseCommand" date="Mon Jun 21 00:42:46 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18159415">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4107]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4647" _type="MoveCaretCommand" caretOffset="3709" date="Mon Jun 21 00:42:46 EDT 2021" docOffset="4274" starttimestamp="1624232406782" timestamp="18159415" />
  <Command __id="4649" _type="MoveCaretCommand" caretOffset="3709" date="Mon Jun 21 00:42:46 EDT 2021" docOffset="4274" starttimestamp="1624232406782" timestamp="18159416" />
  <Command __id="4651" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:46 EDT 2021" starttimestamp="1624232406782" timestamp="18160188" />
  <Command __id="4652" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:46 EDT 2021" starttimestamp="1624232406782" timestamp="18160188" />
  <Command __id="4654" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:47 EDT 2021" starttimestamp="1624232406782" timestamp="18160389" />
  <Command __id="4655" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:47 EDT 2021" starttimestamp="1624232406782" timestamp="18160389" />
  <Command __id="4657" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:47 EDT 2021" starttimestamp="1624232406782" timestamp="18160613" />
  <Command __id="4658" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:47 EDT 2021" starttimestamp="1624232406782" timestamp="18160613" />
  <Command __id="4660" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:47 EDT 2021" starttimestamp="1624232406782" timestamp="18160884" />
  <Command __id="4661" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:47 EDT 2021" starttimestamp="1624232406782" timestamp="18160884" />
  <Command __id="4663" _type="InsertStringCommand" date="Mon Jun 21 00:42:48 EDT 2021" starttimestamp="1624232406782" timestamp="18161830" timestamp2="18161830">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="4664" _type="InsertStringCommand" date="Mon Jun 21 00:42:48 EDT 2021" starttimestamp="1624232406782" timestamp="18161830" timestamp2="18161830">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="4666" _type="InsertStringCommand" date="Mon Jun 21 00:42:48 EDT 2021" starttimestamp="1624232406782" timestamp="18162187" timestamp2="18162187">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4667" _type="InsertStringCommand" date="Mon Jun 21 00:42:48 EDT 2021" starttimestamp="1624232406782" timestamp="18162187" timestamp2="18162187">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4669" _type="InsertStringCommand" date="Mon Jun 21 00:42:49 EDT 2021" starttimestamp="1624232406782" timestamp="18162257" timestamp2="18162257">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4670" _type="InsertStringCommand" date="Mon Jun 21 00:42:49 EDT 2021" starttimestamp="1624232406782" timestamp="18162257" timestamp2="18162257">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4672" _type="PauseCommand" date="Mon Jun 21 00:42:51 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18164909">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2652]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4673" _type="InsertStringCommand" date="Mon Jun 21 00:42:51 EDT 2021" starttimestamp="1624232406782" timestamp="18164913" timestamp2="18164913">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4674" _type="InsertStringCommand" date="Mon Jun 21 00:42:51 EDT 2021" starttimestamp="1624232406782" timestamp="18164914" timestamp2="18164914">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4676" _type="PauseCommand" date="Mon Jun 21 00:42:54 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18167336">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2422]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4675" _type="MoveCaretCommand" caretOffset="3763" date="Mon Jun 21 00:42:54 EDT 2021" docOffset="4328" starttimestamp="1624232406782" timestamp="18167336" />
  <Command __id="4677" _type="MoveCaretCommand" caretOffset="3763" date="Mon Jun 21 00:42:54 EDT 2021" docOffset="4328" starttimestamp="1624232406782" timestamp="18167337" />
  <Command __id="4679" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:54 EDT 2021" starttimestamp="1624232406782" timestamp="18168064" />
  <Command __id="4680" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:54 EDT 2021" starttimestamp="1624232406782" timestamp="18168064" />
  <Command __id="4682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:54 EDT 2021" starttimestamp="1624232406782" timestamp="18168216" />
  <Command __id="4683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:54 EDT 2021" starttimestamp="1624232406782" timestamp="18168216" />
  <Command __id="4685" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:55 EDT 2021" starttimestamp="1624232406782" timestamp="18168396" />
  <Command __id="4686" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:55 EDT 2021" starttimestamp="1624232406782" timestamp="18168396" />
  <Command __id="4688" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:55 EDT 2021" starttimestamp="1624232406782" timestamp="18168781" />
  <Command __id="4689" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:42:55 EDT 2021" starttimestamp="1624232406782" timestamp="18168781" />
  <Command __id="4704" _type="PauseCommand" date="Mon Jun 21 00:43:10 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="18184126">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[13679]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="4703" _type="RunCommand" date="Mon Jun 21 00:43:10 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="18184126" type="Debug" />
  <Command __id="4705" _type="RunCommand" date="Mon Jun 21 00:43:10 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18184127" type="Run" />
  <Command __id="4706" _type="RunCommand" date="Mon Jun 21 00:43:10 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="18184127" type="Debug" />
  <Command __id="4707" _type="RunCommand" date="Mon Jun 21 00:43:10 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18184127" type="Run" />
  <Command __id="4709" _type="PauseCommand" date="Mon Jun 21 00:43:16 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="18189481">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[5354]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4710" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:43:16 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="18189566" />
  <Command __id="4712" _type="PauseCommand" date="Mon Jun 21 00:43:18 EDT 2021" range="1s-2s" starttimestamp="1624232406782" timestamp="18191374">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1808]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4711" _type="ShellCommand" date="Mon Jun 21 00:43:18 EDT 2021" starttimestamp="1624232406782" timestamp="18191374" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4714" _type="PauseCommand" date="Mon Jun 21 00:43:20 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18193802">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2428]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4713" _type="ShellCommand" date="Mon Jun 21 00:43:20 EDT 2021" starttimestamp="1624232406782" timestamp="18193802" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4715" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:43:20 EDT 2021" starttimestamp="1624232406782" timestamp="18193937" />
  <Command __id="4716" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:43:20 EDT 2021" starttimestamp="1624232406782" timestamp="18193961" />
  <Command __id="4717" _type="RunCommand" date="Mon Jun 21 00:43:20 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18194020" type="Run" />
  <Command __id="4718" _type="RunCommand" date="Mon Jun 21 00:43:20 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18194020" type="Run" />
  <Command __id="4719" _type="ShellCommand" date="Mon Jun 21 00:43:21 EDT 2021" starttimestamp="1624232406782" timestamp="18194778" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4721" _type="PauseCommand" date="Mon Jun 21 00:43:32 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="18205372">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10594]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4720" _type="ConsoleOutput" date="Mon Jun 21 00:43:32 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="18205372" type="ConsoleOutput">
    <outputString><![CDATA[in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@872481a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
in precondition
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@872481a]
java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6b763a1e]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"passed"), Diff(INSERT,"true"), Diff(EQUAL,"; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail."), Diff(DELETE,"compositeFigs.FiveChars@5528d10c"), Diff(INSERT,"geometryFigs.RotatingLine@5cbf2840"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this"), Diff(INSERT,"Y"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"failed"), Diff(INSERT,"true"), Diff(EQUAL,"; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail."), Diff(DELETE,"compositeFigs.FiveChars@5528d10c"), Diff(INSERT,"geometryFigs.RotatingLine@5cbf2840"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2cd5d0dc"), Diff(INSERT,"47e93d53"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"2cd5d0dc"), Diff(INSERT,"47e93d53"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"14be6cea"), Diff(INSERT,"3b68afc8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"14be6cea"), Diff(INSERT,"3b68afc8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"otatingLine@4afbf"), Diff(INSERT,"estrictedLine@78dba"), Diff(EQUAL,"d4"), Diff(DELETE,"e"), Diff(INSERT,"f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.R"), Diff(DELETE,"otatingLine@4afbf"), Diff(INSERT,"estrictedLine@78dba"), Diff(EQUAL,"d4"), Diff(DELETE,"e"), Diff(INSERT,"f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"1529f4a"), Diff(INSERT,"5d83673"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"1529f4a"), Diff(INSERT,"5d83673"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"RestrictedLine@17f895e5"), Diff(INSERT,"CharHeads@495b142d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Y"), Diff(INSERT,"X"), Diff(EQUAL,"; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"RestrictedLine@17f895e5"), Diff(INSERT,"MontyString@530eca7a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"X"), Diff(INSERT,"Y"), Diff(EQUAL,"; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs."), Diff(DELETE,"CharHeads@49b953d2"), Diff(INSERT,"MontyString@530eca7a]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Y"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@49b953d2]"), Diff(INSERT,"say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶in precondition"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"X"), Diff(INSERT,"Text"), Diff(EQUAL,"; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"70c662cc"), Diff(INSERT,"530eca7a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Y"), Diff(INSERT,"Text"), Diff(EQUAL,"; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"70c662cc"), Diff(INSERT,"872481a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue="), Diff(DELETE,"approach"), Diff(INSERT,"passed"), Diff(EQUAL,"; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"5528d10c]"), Diff(INSERT,"a409c0c]¶in precondition"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this"), Diff(INSERT,"Text"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"say"), Diff(INSERT,"true"), Diff(EQUAL,"; newValue=false; propagationId=null; source=grail."), Diff(DELETE,"compositeFigs.FiveChars@5528d10c"), Diff(INSERT,"geometryFigs.MontyString@872481a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"this"), Diff(INSERT,"Text"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"passed"), Diff(INSERT,"true"), Diff(EQUAL,"; newValue=false; propagationId=null; source=grail."), Diff(DELETE,"compositeFigs.FiveChars@5528d10c"), Diff(INSERT,"geometryFigs.MontyString@530eca7a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue="), Diff(DELETE,"fail"), Diff(INSERT,"pass"), Diff(EQUAL,"ed; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"5528d1"), Diff(INSERT,"a409c"), Diff(EQUAL,"0c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"678d600d"), Diff(INSERT,"5cbf2840"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"678d600d"), Diff(INSERT,"5cbf2840"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7235416"), Diff(INSERT,"47e93d5"), Diff(EQUAL,"3]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7235416"), Diff(INSERT,"47e93d5"), Diff(EQUAL,"3]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"3b68afc8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"7bcc2924"), Diff(INSERT,"3b68afc8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"62e629f9"), Diff(INSERT,"78dbad4f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"62e629f9"), Diff(INSERT,"78dbad4f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6ee7b0a0"), Diff(INSERT,"5d83673c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"6ee7b0a0"), Diff(INSERT,"5d83673c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"23b04b5"), Diff(INSERT,"495b142d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"23b04b5"), Diff(INSERT,"495b142d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"3681da46"), Diff(INSERT,"530eca7a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"3681da46"), Diff(INSERT,"530eca7a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"5528d1"), Diff(INSERT,"a409c"), Diff(EQUAL,"0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"5528d1"), Diff(INSERT,"a409c"), Diff(EQUAL,"0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@"), Diff(DELETE,"5528d10c]¶Execution exception caused by invocation exception caused by:¶java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamic"), Diff(INSERT,"a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]¶java.bean"), Diff(EQUAL,"s."), Diff(DELETE,"p"), Diff(INSERT,"P"), Diff(EQUAL,"ropertyChange"), Diff(DELETE,"(SceneControllerButtonDynamics.java:153)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)¶	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(INSERT,"Event[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6b763a1e]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4722" _type="ExceptionCommand" date="Mon Jun 21 00:43:32 EDT 2021" starttimestamp="1624232406782" timestamp="18205407" type="Exception">
    <exceptionString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6b763a1e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6b763a1e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@77c54185]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@77c54185]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6d6df5ff]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6d6df5ff]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@507bdff1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@507bdff1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@701fa1d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@701fa1d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@a87b92a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@a87b92a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
Execution exception caused by invocation exception caused by:
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="4723" _type="ConsoleOutput" date="Mon Jun 21 00:43:32 EDT 2021" overflow="false" starttimestamp="1624232406782" timestamp="18205437" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6b763a1e]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6b763a1e]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@77c54185]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@77c54185]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6d6df5ff]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@6d6df5ff]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@507bdff1]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@507bdff1]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@701fa1d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@701fa1d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@a87b92a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@a87b92a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
in precondition
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]
java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]
Execution exception caused by invocation exception caused by:
java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)
	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.propertyChange(SceneControllerButtonDynamics.java:153)
	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)
	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)
	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5cbf2840"), Diff(INSERT,"4e8e74af"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"5cbf2840"), Diff(INSERT,"4e8e74af"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"47e93d53"), Diff(INSERT,"6b763a1e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"47e93d53"), Diff(INSERT,"6b763a1e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"3b68afc8"), Diff(INSERT,"77c54185"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@"), Diff(DELETE,"3b68afc8"), Diff(INSERT,"77c54185"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"78dbad4"), Diff(INSERT,"6d6df5f"), Diff(EQUAL,"f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@"), Diff(DELETE,"78dbad4"), Diff(INSERT,"6d6df5f"), Diff(EQUAL,"f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5"), Diff(DELETE,"d83673c"), Diff(INSERT,"07bdff1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5"), Diff(DELETE,"d83673c"), Diff(INSERT,"07bdff1"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"495b142"), Diff(INSERT,"701fa1"), Diff(EQUAL,"d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@"), Diff(DELETE,"495b142"), Diff(INSERT,"701fa1"), Diff(EQUAL,"d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"530eca7"), Diff(INSERT,"a87b92"), Diff(EQUAL,"a]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@"), Diff(DELETE,"530eca7"), Diff(INSERT,"a87b92"), Diff(EQUAL,"a]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach;"), Diff(DELETE," newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say;"), Diff(EQUAL," newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue="), Diff(DELETE,"passed"), Diff(INSERT,"say"), Diff(EQUAL,"; newValue="), Diff(DELETE,"true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=true; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@872481a"), Diff(INSERT,"false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶"), Diff(DELETE,"in precondition¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName="), Diff(DELETE,"Text"), Diff(INSERT,"this"), Diff(EQUAL,"; oldValue="), Diff(DELETE,"true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@872481a]¶java.beans.PropertyChangeEvent[propertyName=Text; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue=tru"), Diff(INSERT,"failed; newValue=fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@5cbf2840]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@47e93d53]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@3b68afc8]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@78dbad4f]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RestrictedLine@5d83673c]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.CharHeads@495b142d]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]¶java.beans.PropertyChangeEvent[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.MontyString@530eca7a]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=approach; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=say; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶java.beans.PropertyChangeEvent[propertyName=this; oldValue=passed; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶"), Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=this; oldValue=failed; newValue=false; propagationId=null; source=grail.compositeFigs.FiveChars@a409c0c]¶in precondition¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]¶java.bean"), Diff(INSERT,"Execution exception caused by invocation exception caused by:¶java.lang.AssertionError: passed precondition  new value: true != Avatar Pass? button enabled status false%0.0¶	at org.junit.Assert.fail(Assert.java:88)¶	at org.junit.Assert.assertTrue(Assert.java:41)¶	at gradingTools.comp401f16.assignment6.testcases.BridgeSceneDynamicTestCase.assertTrue(BridgeSceneDynamicTestCase.java:82)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.myAssertTrue(SceneControllerButtonDynamics.java:109)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamics.assertButtonEnabled(SceneControllerButtonDynamics.java:114)¶	at gradingTools.comp301ss21.assignment4.controller.SceneControllerButtonDynamic"), Diff(EQUAL,"s."), Diff(DELETE,"P"), Diff(INSERT,"p"), Diff(EQUAL,"ropertyChange"), Diff(DELETE,"Event[propertyName=Y; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@4e8e74af]¶java.beans.PropertyChangeEvent[propertyName=X; oldValue=true; newValue=false; propagationId=null; source=grail.geometryFigs.RotatingLine@6b763a1e]"), Diff(INSERT,"(SceneControllerButtonDynamics.java:153)¶	at grail.MVC.AnObservableHelper.notifyAllListeners(AnObservableHelper.java:48)¶	at grail.compositeFigs.FiveChars.newOccupation(FiveChars.java:159)¶	at grail.compositeFigs.FiveChars.approach(FiveChars.java:179)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4725" _type="PauseCommand" date="Mon Jun 21 00:43:47 EDT 2021" range="10s-20s" starttimestamp="1624232406782" timestamp="18221144">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15707]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4724" _type="ShellCommand" date="Mon Jun 21 00:43:47 EDT 2021" starttimestamp="1624232406782" timestamp="18221144" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4727" _type="MoveCaretCommand" caretOffset="3763" date="Mon Jun 21 00:43:48 EDT 2021" docOffset="4328" starttimestamp="1624232406782" timestamp="18221724" />
  <Command __id="4729" _type="PauseCommand" date="Mon Jun 21 00:44:27 EDT 2021" range="30s-1m" starttimestamp="1624232406782" timestamp="18260989">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[39265]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4728" _type="MoveCaretCommand" caretOffset="3359" date="Mon Jun 21 00:44:27 EDT 2021" docOffset="3924" starttimestamp="1624232406782" timestamp="18260989" />
  <Command __id="4730" _type="MoveCaretCommand" caretOffset="3359" date="Mon Jun 21 00:44:27 EDT 2021" docOffset="3924" starttimestamp="1624232406782" timestamp="18260990" />
  <Command __id="4732" _type="PauseCommand" date="Mon Jun 21 00:46:47 EDT 2021" range="2m-5m" starttimestamp="1624232406782" timestamp="18400924">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[139934]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4731" _type="MoveCaretCommand" caretOffset="3316" date="Mon Jun 21 00:46:47 EDT 2021" docOffset="3881" starttimestamp="1624232406782" timestamp="18400924" />
  <Command __id="4733" _type="MoveCaretCommand" caretOffset="3316" date="Mon Jun 21 00:46:47 EDT 2021" docOffset="3881" starttimestamp="1624232406782" timestamp="18400924" />
  <Command __id="4735" _type="PauseCommand" date="Mon Jun 21 00:46:57 EDT 2021" range="5s-10s" starttimestamp="1624232406782" timestamp="18410888">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9964]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4734" _type="MoveCaretCommand" caretOffset="3359" date="Mon Jun 21 00:46:57 EDT 2021" docOffset="3924" starttimestamp="1624232406782" timestamp="18410888" />
  <Command __id="4736" _type="MoveCaretCommand" caretOffset="3359" date="Mon Jun 21 00:46:57 EDT 2021" docOffset="3924" starttimestamp="1624232406782" timestamp="18410888" />
  <Command __id="4738" _type="PauseCommand" date="Mon Jun 21 00:48:06 EDT 2021" range="1m-2m" starttimestamp="1624232406782" timestamp="18479240">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[68352]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4737" _type="MoveCaretCommand" caretOffset="3313" date="Mon Jun 21 00:48:06 EDT 2021" docOffset="3878" starttimestamp="1624232406782" timestamp="18479240" />
  <Command __id="4739" _type="MoveCaretCommand" caretOffset="3313" date="Mon Jun 21 00:48:06 EDT 2021" docOffset="3878" starttimestamp="1624232406782" timestamp="18479241" />
  <Command __id="4741" _type="PauseCommand" date="Mon Jun 21 00:48:10 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18483912">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4671]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4742" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:10 EDT 2021" starttimestamp="1624232406782" timestamp="18483919" />
  <Command __id="4743" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:10 EDT 2021" starttimestamp="1624232406782" timestamp="18483919" />
  <Command __id="4745" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:10 EDT 2021" starttimestamp="1624232406782" timestamp="18484183" />
  <Command __id="4746" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:10 EDT 2021" starttimestamp="1624232406782" timestamp="18484184" />
  <Command __id="4748" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:11 EDT 2021" starttimestamp="1624232406782" timestamp="18484546" />
  <Command __id="4749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:11 EDT 2021" starttimestamp="1624232406782" timestamp="18484546" />
  <Command __id="4751" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:12 EDT 2021" starttimestamp="1624232406782" timestamp="18485245" />
  <Command __id="4752" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:12 EDT 2021" starttimestamp="1624232406782" timestamp="18485245" />
  <Command __id="4754" _type="InsertStringCommand" date="Mon Jun 21 00:48:12 EDT 2021" starttimestamp="1624232406782" timestamp="18486208" timestamp2="18486208">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4755" _type="InsertStringCommand" date="Mon Jun 21 00:48:12 EDT 2021" starttimestamp="1624232406782" timestamp="18486208" timestamp2="18486208">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4757" _type="InsertStringCommand" date="Mon Jun 21 00:48:13 EDT 2021" starttimestamp="1624232406782" timestamp="18486730" timestamp2="18486730">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4758" _type="InsertStringCommand" date="Mon Jun 21 00:48:13 EDT 2021" starttimestamp="1624232406782" timestamp="18486730" timestamp2="18486730">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4760" _type="InsertStringCommand" date="Mon Jun 21 00:48:13 EDT 2021" starttimestamp="1624232406782" timestamp="18486863" timestamp2="18486863">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4761" _type="InsertStringCommand" date="Mon Jun 21 00:48:13 EDT 2021" starttimestamp="1624232406782" timestamp="18486863" timestamp2="18486863">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4763" _type="InsertStringCommand" date="Mon Jun 21 00:48:13 EDT 2021" starttimestamp="1624232406782" timestamp="18487000" timestamp2="18487000">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4764" _type="InsertStringCommand" date="Mon Jun 21 00:48:13 EDT 2021" starttimestamp="1624232406782" timestamp="18487000" timestamp2="18487000">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4766" _type="InsertStringCommand" date="Mon Jun 21 00:48:14 EDT 2021" starttimestamp="1624232406782" timestamp="18487248" timestamp2="18487248">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4767" _type="InsertStringCommand" date="Mon Jun 21 00:48:14 EDT 2021" starttimestamp="1624232406782" timestamp="18487248" timestamp2="18487248">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4769" _type="PauseCommand" date="Mon Jun 21 00:48:16 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18489514">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2266]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4768" _type="MoveCaretCommand" caretOffset="3358" date="Mon Jun 21 00:48:16 EDT 2021" docOffset="3923" starttimestamp="1624232406782" timestamp="18489514" />
  <Command __id="4770" _type="MoveCaretCommand" caretOffset="3358" date="Mon Jun 21 00:48:16 EDT 2021" docOffset="3923" starttimestamp="1624232406782" timestamp="18489515" />
  <Command __id="4772" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18490353" />
  <Command __id="4773" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18490353" />
  <Command __id="4775" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18490531" />
  <Command __id="4776" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18490531" />
  <Command __id="4778" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18490759" />
  <Command __id="4779" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18490759" />
  <Command __id="4781" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18491049" />
  <Command __id="4782" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:17 EDT 2021" starttimestamp="1624232406782" timestamp="18491049" />
  <Command __id="4784" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:18 EDT 2021" starttimestamp="1624232406782" timestamp="18491729" />
  <Command __id="4785" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Jun 21 00:48:18 EDT 2021" starttimestamp="1624232406782" timestamp="18491729" />
  <Command __id="4787" _type="InsertStringCommand" date="Mon Jun 21 00:48:18 EDT 2021" starttimestamp="1624232406782" timestamp="18492132" timestamp2="18492132">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4788" _type="InsertStringCommand" date="Mon Jun 21 00:48:18 EDT 2021" starttimestamp="1624232406782" timestamp="18492132" timestamp2="18492132">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4790" _type="InsertStringCommand" date="Mon Jun 21 00:48:19 EDT 2021" starttimestamp="1624232406782" timestamp="18492354" timestamp2="18492354">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4791" _type="InsertStringCommand" date="Mon Jun 21 00:48:19 EDT 2021" starttimestamp="1624232406782" timestamp="18492355" timestamp2="18492355">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4793" _type="InsertStringCommand" date="Mon Jun 21 00:48:19 EDT 2021" starttimestamp="1624232406782" timestamp="18492557" timestamp2="18492557">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4794" _type="InsertStringCommand" date="Mon Jun 21 00:48:19 EDT 2021" starttimestamp="1624232406782" timestamp="18492557" timestamp2="18492557">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4796" _type="InsertStringCommand" date="Mon Jun 21 00:48:19 EDT 2021" starttimestamp="1624232406782" timestamp="18492715" timestamp2="18492715">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4797" _type="InsertStringCommand" date="Mon Jun 21 00:48:19 EDT 2021" starttimestamp="1624232406782" timestamp="18492715" timestamp2="18492715">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4799" _type="PauseCommand" date="Mon Jun 21 00:48:22 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18495465">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2750]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4798" _type="MoveCaretCommand" caretOffset="3410" date="Mon Jun 21 00:48:22 EDT 2021" docOffset="3975" starttimestamp="1624232406782" timestamp="18495465" />
  <Command __id="4800" _type="MoveCaretCommand" caretOffset="3410" date="Mon Jun 21 00:48:22 EDT 2021" docOffset="3975" starttimestamp="1624232406782" timestamp="18495467" />
  <Command __id="4830" _type="PauseCommand" date="Mon Jun 21 00:48:29 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18502465">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3360]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="4829" _type="RunCommand" date="Mon Jun 21 00:48:29 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="18502465" type="Debug" />
  <Command __id="4831" _type="RunCommand" date="Mon Jun 21 00:48:29 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18502466" type="Run" />
  <Command __id="4832" _type="RunCommand" date="Mon Jun 21 00:48:29 EDT 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1624232406782" timestamp="18502466" type="Debug" />
  <Command __id="4833" _type="RunCommand" date="Mon Jun 21 00:48:29 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18502466" type="Run" />
  <Command __id="4835" _type="PauseCommand" date="Mon Jun 21 00:48:31 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18505038">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2572]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4836" _type="MoveCaretCommand" caretOffset="954" date="Mon Jun 21 00:48:31 EDT 2021" docOffset="1103" starttimestamp="1624232406782" timestamp="18505124" />
  <Command __id="4838" _type="PauseCommand" date="Mon Jun 21 00:48:33 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18507213">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2089]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4837" _type="ShellCommand" date="Mon Jun 21 00:48:33 EDT 2021" starttimestamp="1624232406782" timestamp="18507213" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4840" _type="PauseCommand" date="Mon Jun 21 00:48:36 EDT 2021" range="2s-5s" starttimestamp="1624232406782" timestamp="18509283">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2070]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4839" _type="ShellCommand" date="Mon Jun 21 00:48:36 EDT 2021" starttimestamp="1624232406782" timestamp="18509283" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4841" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:48:36 EDT 2021" starttimestamp="1624232406782" timestamp="18509413" />
  <Command __id="4842" _type="EclipseCommand" commandID="" date="Mon Jun 21 00:48:36 EDT 2021" starttimestamp="1624232406782" timestamp="18509441" />
  <Command __id="4843" _type="RunCommand" date="Mon Jun 21 00:48:36 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18509525" type="Run" />
  <Command __id="4844" _type="RunCommand" date="Mon Jun 21 00:48:36 EDT 2021" kind="HitBreakPoint" projectName="grailA4FinalProject" starttimestamp="1624232406782" timestamp="18509525" type="Run" />
  <Command __id="4845" _type="ShellCommand" date="Mon Jun 21 00:48:37 EDT 2021" starttimestamp="1624232406782" timestamp="18510276" type="ECLIPSE_LOST_FOCUS" />
</Events>
